// Code generated by protoc-gen-go.
// source: TNCommandArchives.proto
// DO NOT EDIT!

/*
Package TN is a generated protocol buffer package.

It is generated from these files:
	TNCommandArchives.proto

It has these top-level messages:
	SheetCommandSelectionBehaviorArchive
	CommandFormChooseTargetTableArchive
	CommandSheetInsertDrawablesArchive
	CommandSheetRemoveDrawablesArchive
	CommandSheetMoveDrawableZOrderArchive
	CommandDocumentInsertSheetArchive
	CommandDocumentRemoveSheetArchive
	CommandDocumentReplaceLastSheetArchive
	CommandDocumentReorderSheetArchive
	CommandSetSheetNameArchive
	CommandSetPageOrientationArchive
	CommandSetShowPageNumbersValueArchive
	CommandSetRepeatingHeadersValueArchive
	CommandSetContentScaleArchive
	CommandSetAutofitValueArchive
	CommandSetDocumentPrinterOptions
	CommandEnterPrintPreviewModeArchive
	CommandExitPrintPreviewModeArchive
	CommandPasteDrawablesArchive
	CommandPasteSheetArchive
	CommandReorderSidebarItemChildrenAchive
	CommandChartMediatorSetEditingState
	CommandChartMediatorUpdateForEntityDelete
	ChartCommandSetSeriesNameArchive
	ChartCommandSelectionBehaviorArchive
*/
package TN

import (
	math "math"

	"github.com/dunhamsteve/iwork/proto/TSCE"
	"github.com/dunhamsteve/iwork/proto/TSCH"
	"github.com/dunhamsteve/iwork/proto/TSK"
	"github.com/dunhamsteve/iwork/proto/TSP"
	proto "github.com/golang/protobuf/proto"
)

// discarding unused import TSCH "TSCHArchives.pb"

// discarding unused import TSS "TSSArchives.pb"
// discarding unused import TSD "TSDArchives.pb"
// discarding unused import TSWP "TSWPArchives.pb"
// discarding unused import TSA "TSAArchives.pb"
// discarding unused import TST "TSTArchives.pb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type SheetCommandSelectionBehaviorArchive struct {
	SheetSelection   *TSP.Reference `protobuf:"bytes,1,opt,name=sheet_selection" json:"sheet_selection,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *SheetCommandSelectionBehaviorArchive) Reset()         { *m = SheetCommandSelectionBehaviorArchive{} }
func (m *SheetCommandSelectionBehaviorArchive) String() string { return proto.CompactTextString(m) }
func (*SheetCommandSelectionBehaviorArchive) ProtoMessage()    {}

func (m *SheetCommandSelectionBehaviorArchive) GetSheetSelection() *TSP.Reference {
	if m != nil {
		return m.SheetSelection
	}
	return nil
}

type CommandFormChooseTargetTableArchive struct {
	Super             *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	TableId           *TSCE.CFUUIDArchive `protobuf:"bytes,2,opt,name=table_id" json:"table_id,omitempty"`
	PreviousTableId   *TSCE.CFUUIDArchive `protobuf:"bytes,3,opt,name=previous_table_id" json:"previous_table_id,omitempty"`
	SheetName         *string             `protobuf:"bytes,4,opt,name=sheet_name" json:"sheet_name,omitempty"`
	PreviousSheetName *string             `protobuf:"bytes,5,opt,name=previous_sheet_name" json:"previous_sheet_name,omitempty"`
	Sheet             *TSP.Reference      `protobuf:"bytes,6,req,name=sheet" json:"sheet,omitempty"`
	XXX_unrecognized  []byte              `json:"-"`
}

func (m *CommandFormChooseTargetTableArchive) Reset()         { *m = CommandFormChooseTargetTableArchive{} }
func (m *CommandFormChooseTargetTableArchive) String() string { return proto.CompactTextString(m) }
func (*CommandFormChooseTargetTableArchive) ProtoMessage()    {}

func (m *CommandFormChooseTargetTableArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandFormChooseTargetTableArchive) GetTableId() *TSCE.CFUUIDArchive {
	if m != nil {
		return m.TableId
	}
	return nil
}

func (m *CommandFormChooseTargetTableArchive) GetPreviousTableId() *TSCE.CFUUIDArchive {
	if m != nil {
		return m.PreviousTableId
	}
	return nil
}

func (m *CommandFormChooseTargetTableArchive) GetSheetName() string {
	if m != nil && m.SheetName != nil {
		return *m.SheetName
	}
	return ""
}

func (m *CommandFormChooseTargetTableArchive) GetPreviousSheetName() string {
	if m != nil && m.PreviousSheetName != nil {
		return *m.PreviousSheetName
	}
	return ""
}

func (m *CommandFormChooseTargetTableArchive) GetSheet() *TSP.Reference {
	if m != nil {
		return m.Sheet
	}
	return nil
}

type CommandSheetInsertDrawablesArchive struct {
	Sheet            *TSP.Reference      `protobuf:"bytes,1,req,name=sheet" json:"sheet,omitempty"`
	Drawables        []*TSP.Reference    `protobuf:"bytes,2,rep,name=drawables" json:"drawables,omitempty"`
	ProviderUndo     *TSP.Reference      `protobuf:"bytes,3,opt,name=provider_undo" json:"provider_undo,omitempty"`
	Super            *TSK.CommandArchive `protobuf:"bytes,4,req,name=super" json:"super,omitempty"`
	ForDrag          *bool               `protobuf:"varint,5,opt,name=forDrag" json:"forDrag,omitempty"`
	ForPaste         *bool               `protobuf:"varint,7,opt,name=forPaste" json:"forPaste,omitempty"`
	AtIndex          *int32              `protobuf:"varint,6,opt,name=atIndex" json:"atIndex,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandSheetInsertDrawablesArchive) Reset()         { *m = CommandSheetInsertDrawablesArchive{} }
func (m *CommandSheetInsertDrawablesArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSheetInsertDrawablesArchive) ProtoMessage()    {}

func (m *CommandSheetInsertDrawablesArchive) GetSheet() *TSP.Reference {
	if m != nil {
		return m.Sheet
	}
	return nil
}

func (m *CommandSheetInsertDrawablesArchive) GetDrawables() []*TSP.Reference {
	if m != nil {
		return m.Drawables
	}
	return nil
}

func (m *CommandSheetInsertDrawablesArchive) GetProviderUndo() *TSP.Reference {
	if m != nil {
		return m.ProviderUndo
	}
	return nil
}

func (m *CommandSheetInsertDrawablesArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSheetInsertDrawablesArchive) GetForDrag() bool {
	if m != nil && m.ForDrag != nil {
		return *m.ForDrag
	}
	return false
}

func (m *CommandSheetInsertDrawablesArchive) GetForPaste() bool {
	if m != nil && m.ForPaste != nil {
		return *m.ForPaste
	}
	return false
}

func (m *CommandSheetInsertDrawablesArchive) GetAtIndex() int32 {
	if m != nil && m.AtIndex != nil {
		return *m.AtIndex
	}
	return 0
}

type CommandSheetRemoveDrawablesArchive struct {
	Super                        *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Sheet                        *TSP.Reference      `protobuf:"bytes,2,req,name=sheet" json:"sheet,omitempty"`
	SortedDrawables              []*TSP.Reference    `protobuf:"bytes,3,rep,name=sortedDrawables" json:"sortedDrawables,omitempty"`
	DrawableIndices              *TSP.IndexSet       `protobuf:"bytes,4,req,name=drawableIndices" json:"drawableIndices,omitempty"`
	OldSheetSidebarOrder         []*TSP.Reference    `protobuf:"bytes,5,rep,name=old_sheet_sidebar_order" json:"old_sheet_sidebar_order,omitempty"`
	FormulaRewriteCommandForUndo *TSP.Reference      `protobuf:"bytes,6,opt,name=formula_rewrite_command_for_undo" json:"formula_rewrite_command_for_undo,omitempty"`
	XXX_unrecognized             []byte              `json:"-"`
}

func (m *CommandSheetRemoveDrawablesArchive) Reset()         { *m = CommandSheetRemoveDrawablesArchive{} }
func (m *CommandSheetRemoveDrawablesArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSheetRemoveDrawablesArchive) ProtoMessage()    {}

func (m *CommandSheetRemoveDrawablesArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSheetRemoveDrawablesArchive) GetSheet() *TSP.Reference {
	if m != nil {
		return m.Sheet
	}
	return nil
}

func (m *CommandSheetRemoveDrawablesArchive) GetSortedDrawables() []*TSP.Reference {
	if m != nil {
		return m.SortedDrawables
	}
	return nil
}

func (m *CommandSheetRemoveDrawablesArchive) GetDrawableIndices() *TSP.IndexSet {
	if m != nil {
		return m.DrawableIndices
	}
	return nil
}

func (m *CommandSheetRemoveDrawablesArchive) GetOldSheetSidebarOrder() []*TSP.Reference {
	if m != nil {
		return m.OldSheetSidebarOrder
	}
	return nil
}

func (m *CommandSheetRemoveDrawablesArchive) GetFormulaRewriteCommandForUndo() *TSP.Reference {
	if m != nil {
		return m.FormulaRewriteCommandForUndo
	}
	return nil
}

type CommandSheetMoveDrawableZOrderArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Sheet            *TSP.Reference      `protobuf:"bytes,2,req,name=sheet" json:"sheet,omitempty"`
	DrawableInfos    []*TSP.Reference    `protobuf:"bytes,3,rep,name=drawable_infos" json:"drawable_infos,omitempty"`
	Indexes          *TSP.IndexSet       `protobuf:"bytes,4,req,name=indexes" json:"indexes,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandSheetMoveDrawableZOrderArchive) Reset()         { *m = CommandSheetMoveDrawableZOrderArchive{} }
func (m *CommandSheetMoveDrawableZOrderArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSheetMoveDrawableZOrderArchive) ProtoMessage()    {}

func (m *CommandSheetMoveDrawableZOrderArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSheetMoveDrawableZOrderArchive) GetSheet() *TSP.Reference {
	if m != nil {
		return m.Sheet
	}
	return nil
}

func (m *CommandSheetMoveDrawableZOrderArchive) GetDrawableInfos() []*TSP.Reference {
	if m != nil {
		return m.DrawableInfos
	}
	return nil
}

func (m *CommandSheetMoveDrawableZOrderArchive) GetIndexes() *TSP.IndexSet {
	if m != nil {
		return m.Indexes
	}
	return nil
}

type CommandDocumentInsertSheetArchive struct {
	Document         *TSP.Reference      `protobuf:"bytes,1,req,name=document" json:"document,omitempty"`
	Sheet            *TSP.Reference      `protobuf:"bytes,2,req,name=sheet" json:"sheet,omitempty"`
	Super            *TSK.CommandArchive `protobuf:"bytes,3,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandDocumentInsertSheetArchive) Reset()         { *m = CommandDocumentInsertSheetArchive{} }
func (m *CommandDocumentInsertSheetArchive) String() string { return proto.CompactTextString(m) }
func (*CommandDocumentInsertSheetArchive) ProtoMessage()    {}

func (m *CommandDocumentInsertSheetArchive) GetDocument() *TSP.Reference {
	if m != nil {
		return m.Document
	}
	return nil
}

func (m *CommandDocumentInsertSheetArchive) GetSheet() *TSP.Reference {
	if m != nil {
		return m.Sheet
	}
	return nil
}

func (m *CommandDocumentInsertSheetArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandDocumentRemoveSheetArchive struct {
	Document                     *TSP.Reference      `protobuf:"bytes,1,req,name=document" json:"document,omitempty"`
	Sheet                        *TSP.Reference      `protobuf:"bytes,2,req,name=sheet" json:"sheet,omitempty"`
	Index                        *uint32             `protobuf:"varint,3,req,name=index" json:"index,omitempty"`
	OldSheetSidebarOrder         []*TSP.Reference    `protobuf:"bytes,4,rep,name=old_sheet_sidebar_order" json:"old_sheet_sidebar_order,omitempty"`
	Super                        *TSK.CommandArchive `protobuf:"bytes,5,req,name=super" json:"super,omitempty"`
	FormulaRewriteCommandForUndo *TSP.Reference      `protobuf:"bytes,6,opt,name=formula_rewrite_command_for_undo" json:"formula_rewrite_command_for_undo,omitempty"`
	XXX_unrecognized             []byte              `json:"-"`
}

func (m *CommandDocumentRemoveSheetArchive) Reset()         { *m = CommandDocumentRemoveSheetArchive{} }
func (m *CommandDocumentRemoveSheetArchive) String() string { return proto.CompactTextString(m) }
func (*CommandDocumentRemoveSheetArchive) ProtoMessage()    {}

func (m *CommandDocumentRemoveSheetArchive) GetDocument() *TSP.Reference {
	if m != nil {
		return m.Document
	}
	return nil
}

func (m *CommandDocumentRemoveSheetArchive) GetSheet() *TSP.Reference {
	if m != nil {
		return m.Sheet
	}
	return nil
}

func (m *CommandDocumentRemoveSheetArchive) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *CommandDocumentRemoveSheetArchive) GetOldSheetSidebarOrder() []*TSP.Reference {
	if m != nil {
		return m.OldSheetSidebarOrder
	}
	return nil
}

func (m *CommandDocumentRemoveSheetArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandDocumentRemoveSheetArchive) GetFormulaRewriteCommandForUndo() *TSP.Reference {
	if m != nil {
		return m.FormulaRewriteCommandForUndo
	}
	return nil
}

type CommandDocumentReplaceLastSheetArchive struct {
	Document         *TSP.Reference      `protobuf:"bytes,1,req,name=document" json:"document,omitempty"`
	LastSheet        *TSP.Reference      `protobuf:"bytes,2,req,name=last_sheet" json:"last_sheet,omitempty"`
	NewSheet         *TSP.Reference      `protobuf:"bytes,3,req,name=new_sheet" json:"new_sheet,omitempty"`
	Super            *TSK.CommandArchive `protobuf:"bytes,4,req,name=super" json:"super,omitempty"`
	Index            *uint32             `protobuf:"varint,5,opt,name=index" json:"index,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandDocumentReplaceLastSheetArchive) Reset() {
	*m = CommandDocumentReplaceLastSheetArchive{}
}
func (m *CommandDocumentReplaceLastSheetArchive) String() string { return proto.CompactTextString(m) }
func (*CommandDocumentReplaceLastSheetArchive) ProtoMessage()    {}

func (m *CommandDocumentReplaceLastSheetArchive) GetDocument() *TSP.Reference {
	if m != nil {
		return m.Document
	}
	return nil
}

func (m *CommandDocumentReplaceLastSheetArchive) GetLastSheet() *TSP.Reference {
	if m != nil {
		return m.LastSheet
	}
	return nil
}

func (m *CommandDocumentReplaceLastSheetArchive) GetNewSheet() *TSP.Reference {
	if m != nil {
		return m.NewSheet
	}
	return nil
}

func (m *CommandDocumentReplaceLastSheetArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandDocumentReplaceLastSheetArchive) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

type CommandDocumentReorderSheetArchive struct {
	Document         *TSP.Reference      `protobuf:"bytes,1,req,name=document" json:"document,omitempty"`
	Sheet            *TSP.Reference      `protobuf:"bytes,2,req,name=sheet" json:"sheet,omitempty"`
	SourceIndex      *uint32             `protobuf:"varint,3,req,name=source_index" json:"source_index,omitempty"`
	DestIndex        *uint32             `protobuf:"varint,4,req,name=dest_index" json:"dest_index,omitempty"`
	Super            *TSK.CommandArchive `protobuf:"bytes,5,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandDocumentReorderSheetArchive) Reset()         { *m = CommandDocumentReorderSheetArchive{} }
func (m *CommandDocumentReorderSheetArchive) String() string { return proto.CompactTextString(m) }
func (*CommandDocumentReorderSheetArchive) ProtoMessage()    {}

func (m *CommandDocumentReorderSheetArchive) GetDocument() *TSP.Reference {
	if m != nil {
		return m.Document
	}
	return nil
}

func (m *CommandDocumentReorderSheetArchive) GetSheet() *TSP.Reference {
	if m != nil {
		return m.Sheet
	}
	return nil
}

func (m *CommandDocumentReorderSheetArchive) GetSourceIndex() uint32 {
	if m != nil && m.SourceIndex != nil {
		return *m.SourceIndex
	}
	return 0
}

func (m *CommandDocumentReorderSheetArchive) GetDestIndex() uint32 {
	if m != nil && m.DestIndex != nil {
		return *m.DestIndex
	}
	return 0
}

func (m *CommandDocumentReorderSheetArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandSetSheetNameArchive struct {
	Newname          *string             `protobuf:"bytes,1,req,name=newname" json:"newname,omitempty"`
	Oldname          *string             `protobuf:"bytes,2,req,name=oldname" json:"oldname,omitempty"`
	Sheet            *TSP.Reference      `protobuf:"bytes,3,req,name=sheet" json:"sheet,omitempty"`
	Super            *TSK.CommandArchive `protobuf:"bytes,4,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandSetSheetNameArchive) Reset()         { *m = CommandSetSheetNameArchive{} }
func (m *CommandSetSheetNameArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetSheetNameArchive) ProtoMessage()    {}

func (m *CommandSetSheetNameArchive) GetNewname() string {
	if m != nil && m.Newname != nil {
		return *m.Newname
	}
	return ""
}

func (m *CommandSetSheetNameArchive) GetOldname() string {
	if m != nil && m.Oldname != nil {
		return *m.Oldname
	}
	return ""
}

func (m *CommandSetSheetNameArchive) GetSheet() *TSP.Reference {
	if m != nil {
		return m.Sheet
	}
	return nil
}

func (m *CommandSetSheetNameArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandSetPageOrientationArchive struct {
	InPortraitPageOrientation *bool               `protobuf:"varint,1,req,name=in_portrait_page_orientation" json:"in_portrait_page_orientation,omitempty"`
	Sheet                     *TSP.Reference      `protobuf:"bytes,2,req,name=sheet" json:"sheet,omitempty"`
	Super                     *TSK.CommandArchive `protobuf:"bytes,3,req,name=super" json:"super,omitempty"`
	XXX_unrecognized          []byte              `json:"-"`
}

func (m *CommandSetPageOrientationArchive) Reset()         { *m = CommandSetPageOrientationArchive{} }
func (m *CommandSetPageOrientationArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetPageOrientationArchive) ProtoMessage()    {}

func (m *CommandSetPageOrientationArchive) GetInPortraitPageOrientation() bool {
	if m != nil && m.InPortraitPageOrientation != nil {
		return *m.InPortraitPageOrientation
	}
	return false
}

func (m *CommandSetPageOrientationArchive) GetSheet() *TSP.Reference {
	if m != nil {
		return m.Sheet
	}
	return nil
}

func (m *CommandSetPageOrientationArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandSetShowPageNumbersValueArchive struct {
	ShowPageNumbers  *bool               `protobuf:"varint,1,req,name=show_page_numbers" json:"show_page_numbers,omitempty"`
	Sheet            *TSP.Reference      `protobuf:"bytes,2,req,name=sheet" json:"sheet,omitempty"`
	Super            *TSK.CommandArchive `protobuf:"bytes,3,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandSetShowPageNumbersValueArchive) Reset()         { *m = CommandSetShowPageNumbersValueArchive{} }
func (m *CommandSetShowPageNumbersValueArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetShowPageNumbersValueArchive) ProtoMessage()    {}

func (m *CommandSetShowPageNumbersValueArchive) GetShowPageNumbers() bool {
	if m != nil && m.ShowPageNumbers != nil {
		return *m.ShowPageNumbers
	}
	return false
}

func (m *CommandSetShowPageNumbersValueArchive) GetSheet() *TSP.Reference {
	if m != nil {
		return m.Sheet
	}
	return nil
}

func (m *CommandSetShowPageNumbersValueArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandSetRepeatingHeadersValueArchive struct {
	ShowRepeatingHeaders *bool               `protobuf:"varint,1,req,name=show_repeating_headers" json:"show_repeating_headers,omitempty"`
	Sheet                *TSP.Reference      `protobuf:"bytes,2,req,name=sheet" json:"sheet,omitempty"`
	Super                *TSK.CommandArchive `protobuf:"bytes,3,req,name=super" json:"super,omitempty"`
	XXX_unrecognized     []byte              `json:"-"`
}

func (m *CommandSetRepeatingHeadersValueArchive) Reset() {
	*m = CommandSetRepeatingHeadersValueArchive{}
}
func (m *CommandSetRepeatingHeadersValueArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetRepeatingHeadersValueArchive) ProtoMessage()    {}

func (m *CommandSetRepeatingHeadersValueArchive) GetShowRepeatingHeaders() bool {
	if m != nil && m.ShowRepeatingHeaders != nil {
		return *m.ShowRepeatingHeaders
	}
	return false
}

func (m *CommandSetRepeatingHeadersValueArchive) GetSheet() *TSP.Reference {
	if m != nil {
		return m.Sheet
	}
	return nil
}

func (m *CommandSetRepeatingHeadersValueArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandSetContentScaleArchive struct {
	IsAutofitOn      *bool               `protobuf:"varint,1,req,name=is_autofit_on" json:"is_autofit_on,omitempty"`
	OldContentScale  *float32            `protobuf:"fixed32,2,req,name=old_content_scale" json:"old_content_scale,omitempty"`
	NewContentScale  *float32            `protobuf:"fixed32,3,opt,name=new_content_scale" json:"new_content_scale,omitempty"`
	Sheet            *TSP.Reference      `protobuf:"bytes,4,req,name=sheet" json:"sheet,omitempty"`
	Super            *TSK.CommandArchive `protobuf:"bytes,5,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandSetContentScaleArchive) Reset()         { *m = CommandSetContentScaleArchive{} }
func (m *CommandSetContentScaleArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetContentScaleArchive) ProtoMessage()    {}

func (m *CommandSetContentScaleArchive) GetIsAutofitOn() bool {
	if m != nil && m.IsAutofitOn != nil {
		return *m.IsAutofitOn
	}
	return false
}

func (m *CommandSetContentScaleArchive) GetOldContentScale() float32 {
	if m != nil && m.OldContentScale != nil {
		return *m.OldContentScale
	}
	return 0
}

func (m *CommandSetContentScaleArchive) GetNewContentScale() float32 {
	if m != nil && m.NewContentScale != nil {
		return *m.NewContentScale
	}
	return 0
}

func (m *CommandSetContentScaleArchive) GetSheet() *TSP.Reference {
	if m != nil {
		return m.Sheet
	}
	return nil
}

func (m *CommandSetContentScaleArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandSetAutofitValueArchive struct {
	OldContentScale  *float32            `protobuf:"fixed32,1,req,name=old_content_scale" json:"old_content_scale,omitempty"`
	Sheet            *TSP.Reference      `protobuf:"bytes,2,req,name=sheet" json:"sheet,omitempty"`
	Super            *TSK.CommandArchive `protobuf:"bytes,3,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandSetAutofitValueArchive) Reset()         { *m = CommandSetAutofitValueArchive{} }
func (m *CommandSetAutofitValueArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSetAutofitValueArchive) ProtoMessage()    {}

func (m *CommandSetAutofitValueArchive) GetOldContentScale() float32 {
	if m != nil && m.OldContentScale != nil {
		return *m.OldContentScale
	}
	return 0
}

func (m *CommandSetAutofitValueArchive) GetSheet() *TSP.Reference {
	if m != nil {
		return m.Sheet
	}
	return nil
}

func (m *CommandSetAutofitValueArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandSetDocumentPrinterOptions struct {
	PrinterId        *string             `protobuf:"bytes,1,req,name=printer_id" json:"printer_id,omitempty"`
	PaperId          *string             `protobuf:"bytes,2,req,name=paper_id" json:"paper_id,omitempty"`
	PageSize         *TSP.Size           `protobuf:"bytes,3,req,name=page_size" json:"page_size,omitempty"`
	Super            *TSK.CommandArchive `protobuf:"bytes,4,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandSetDocumentPrinterOptions) Reset()         { *m = CommandSetDocumentPrinterOptions{} }
func (m *CommandSetDocumentPrinterOptions) String() string { return proto.CompactTextString(m) }
func (*CommandSetDocumentPrinterOptions) ProtoMessage()    {}

func (m *CommandSetDocumentPrinterOptions) GetPrinterId() string {
	if m != nil && m.PrinterId != nil {
		return *m.PrinterId
	}
	return ""
}

func (m *CommandSetDocumentPrinterOptions) GetPaperId() string {
	if m != nil && m.PaperId != nil {
		return *m.PaperId
	}
	return ""
}

func (m *CommandSetDocumentPrinterOptions) GetPageSize() *TSP.Size {
	if m != nil {
		return m.PageSize
	}
	return nil
}

func (m *CommandSetDocumentPrinterOptions) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandEnterPrintPreviewModeArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandEnterPrintPreviewModeArchive) Reset()         { *m = CommandEnterPrintPreviewModeArchive{} }
func (m *CommandEnterPrintPreviewModeArchive) String() string { return proto.CompactTextString(m) }
func (*CommandEnterPrintPreviewModeArchive) ProtoMessage()    {}

func (m *CommandEnterPrintPreviewModeArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandExitPrintPreviewModeArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandExitPrintPreviewModeArchive) Reset()         { *m = CommandExitPrintPreviewModeArchive{} }
func (m *CommandExitPrintPreviewModeArchive) String() string { return proto.CompactTextString(m) }
func (*CommandExitPrintPreviewModeArchive) ProtoMessage()    {}

func (m *CommandExitPrintPreviewModeArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type CommandPasteDrawablesArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Sheet            *TSP.Reference      `protobuf:"bytes,2,req,name=sheet" json:"sheet,omitempty"`
	Drawables        []*TSP.Reference    `protobuf:"bytes,3,rep,name=drawables" json:"drawables,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandPasteDrawablesArchive) Reset()         { *m = CommandPasteDrawablesArchive{} }
func (m *CommandPasteDrawablesArchive) String() string { return proto.CompactTextString(m) }
func (*CommandPasteDrawablesArchive) ProtoMessage()    {}

func (m *CommandPasteDrawablesArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandPasteDrawablesArchive) GetSheet() *TSP.Reference {
	if m != nil {
		return m.Sheet
	}
	return nil
}

func (m *CommandPasteDrawablesArchive) GetDrawables() []*TSP.Reference {
	if m != nil {
		return m.Drawables
	}
	return nil
}

type CommandPasteSheetArchive struct {
	Super            *TSK.CommandArchive  `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Document         *TSP.Reference       `protobuf:"bytes,2,req,name=document" json:"document,omitempty"`
	Sheet            *TSP.Reference       `protobuf:"bytes,3,req,name=sheet" json:"sheet,omitempty"`
	SheetUistate     *SheetUIStateArchive `protobuf:"bytes,4,opt,name=sheet_uistate" json:"sheet_uistate,omitempty"`
	SheetIndex       *uint32              `protobuf:"varint,5,req,name=sheetIndex" json:"sheetIndex,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandPasteSheetArchive) Reset()         { *m = CommandPasteSheetArchive{} }
func (m *CommandPasteSheetArchive) String() string { return proto.CompactTextString(m) }
func (*CommandPasteSheetArchive) ProtoMessage()    {}

func (m *CommandPasteSheetArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandPasteSheetArchive) GetDocument() *TSP.Reference {
	if m != nil {
		return m.Document
	}
	return nil
}

func (m *CommandPasteSheetArchive) GetSheet() *TSP.Reference {
	if m != nil {
		return m.Sheet
	}
	return nil
}

func (m *CommandPasteSheetArchive) GetSheetUistate() *SheetUIStateArchive {
	if m != nil {
		return m.SheetUistate
	}
	return nil
}

func (m *CommandPasteSheetArchive) GetSheetIndex() uint32 {
	if m != nil && m.SheetIndex != nil {
		return *m.SheetIndex
	}
	return 0
}

type CommandReorderSidebarItemChildrenAchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Sheet            *TSP.Reference      `protobuf:"bytes,2,req,name=sheet" json:"sheet,omitempty"`
	OldChildren      []*TSP.Reference    `protobuf:"bytes,3,rep,name=old_children" json:"old_children,omitempty"`
	NewChildren      []*TSP.Reference    `protobuf:"bytes,4,rep,name=new_children" json:"new_children,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandReorderSidebarItemChildrenAchive) Reset() {
	*m = CommandReorderSidebarItemChildrenAchive{}
}
func (m *CommandReorderSidebarItemChildrenAchive) String() string { return proto.CompactTextString(m) }
func (*CommandReorderSidebarItemChildrenAchive) ProtoMessage()    {}

func (m *CommandReorderSidebarItemChildrenAchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandReorderSidebarItemChildrenAchive) GetSheet() *TSP.Reference {
	if m != nil {
		return m.Sheet
	}
	return nil
}

func (m *CommandReorderSidebarItemChildrenAchive) GetOldChildren() []*TSP.Reference {
	if m != nil {
		return m.OldChildren
	}
	return nil
}

func (m *CommandReorderSidebarItemChildrenAchive) GetNewChildren() []*TSP.Reference {
	if m != nil {
		return m.NewChildren
	}
	return nil
}

type CommandChartMediatorSetEditingState struct {
	Super            *TSCH.ChartCommandArchive    `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	OldFormulas      *ChartMediatorFormulaStorage `protobuf:"bytes,3,opt,name=old_formulas" json:"old_formulas,omitempty"`
	NewFormulas      *ChartMediatorFormulaStorage `protobuf:"bytes,4,opt,name=new_formulas" json:"new_formulas,omitempty"`
	OldDirection     *int32                       `protobuf:"varint,5,opt,name=old_direction" json:"old_direction,omitempty"`
	NewDirection     *int32                       `protobuf:"varint,6,opt,name=new_direction" json:"new_direction,omitempty"`
	OldScatterFormat *int32                       `protobuf:"varint,7,opt,name=old_scatter_format" json:"old_scatter_format,omitempty"`
	NewScatterFormat *int32                       `protobuf:"varint,8,opt,name=new_scatter_format" json:"new_scatter_format,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CommandChartMediatorSetEditingState) Reset()         { *m = CommandChartMediatorSetEditingState{} }
func (m *CommandChartMediatorSetEditingState) String() string { return proto.CompactTextString(m) }
func (*CommandChartMediatorSetEditingState) ProtoMessage()    {}

func (m *CommandChartMediatorSetEditingState) GetSuper() *TSCH.ChartCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandChartMediatorSetEditingState) GetOldFormulas() *ChartMediatorFormulaStorage {
	if m != nil {
		return m.OldFormulas
	}
	return nil
}

func (m *CommandChartMediatorSetEditingState) GetNewFormulas() *ChartMediatorFormulaStorage {
	if m != nil {
		return m.NewFormulas
	}
	return nil
}

func (m *CommandChartMediatorSetEditingState) GetOldDirection() int32 {
	if m != nil && m.OldDirection != nil {
		return *m.OldDirection
	}
	return 0
}

func (m *CommandChartMediatorSetEditingState) GetNewDirection() int32 {
	if m != nil && m.NewDirection != nil {
		return *m.NewDirection
	}
	return 0
}

func (m *CommandChartMediatorSetEditingState) GetOldScatterFormat() int32 {
	if m != nil && m.OldScatterFormat != nil {
		return *m.OldScatterFormat
	}
	return 0
}

func (m *CommandChartMediatorSetEditingState) GetNewScatterFormat() int32 {
	if m != nil && m.NewScatterFormat != nil {
		return *m.NewScatterFormat
	}
	return 0
}

type CommandChartMediatorUpdateForEntityDelete struct {
	Super            *TSCH.ChartCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Cmd              *TSP.Reference            `protobuf:"bytes,3,opt,name=cmd" json:"cmd,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *CommandChartMediatorUpdateForEntityDelete) Reset() {
	*m = CommandChartMediatorUpdateForEntityDelete{}
}
func (m *CommandChartMediatorUpdateForEntityDelete) String() string {
	return proto.CompactTextString(m)
}
func (*CommandChartMediatorUpdateForEntityDelete) ProtoMessage() {}

func (m *CommandChartMediatorUpdateForEntityDelete) GetSuper() *TSCH.ChartCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandChartMediatorUpdateForEntityDelete) GetCmd() *TSP.Reference {
	if m != nil {
		return m.Cmd
	}
	return nil
}

type ChartCommandSetSeriesNameArchive struct {
	Super            *TSCH.ChartCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Mediator         *TSP.Reference            `protobuf:"bytes,2,req,name=mediator" json:"mediator,omitempty"`
	Seriesindex      *uint32                   `protobuf:"varint,3,req,name=seriesindex" json:"seriesindex,omitempty"`
	OldFormula       *TSCE.FormulaArchive      `protobuf:"bytes,4,opt,name=old_formula" json:"old_formula,omitempty"`
	NewFormula       *TSCE.FormulaArchive      `protobuf:"bytes,5,opt,name=new_formula" json:"new_formula,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *ChartCommandSetSeriesNameArchive) Reset()         { *m = ChartCommandSetSeriesNameArchive{} }
func (m *ChartCommandSetSeriesNameArchive) String() string { return proto.CompactTextString(m) }
func (*ChartCommandSetSeriesNameArchive) ProtoMessage()    {}

func (m *ChartCommandSetSeriesNameArchive) GetSuper() *TSCH.ChartCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ChartCommandSetSeriesNameArchive) GetMediator() *TSP.Reference {
	if m != nil {
		return m.Mediator
	}
	return nil
}

func (m *ChartCommandSetSeriesNameArchive) GetSeriesindex() uint32 {
	if m != nil && m.Seriesindex != nil {
		return *m.Seriesindex
	}
	return 0
}

func (m *ChartCommandSetSeriesNameArchive) GetOldFormula() *TSCE.FormulaArchive {
	if m != nil {
		return m.OldFormula
	}
	return nil
}

func (m *ChartCommandSetSeriesNameArchive) GetNewFormula() *TSCE.FormulaArchive {
	if m != nil {
		return m.NewFormula
	}
	return nil
}

type ChartCommandSelectionBehaviorArchive struct {
	DrawableInfo     *TSP.Reference         `protobuf:"bytes,1,req,name=drawable_info" json:"drawable_info,omitempty"`
	BeginSelection   *ChartSelectionArchive `protobuf:"bytes,2,opt,name=begin_selection" json:"begin_selection,omitempty"`
	EndSelection     *ChartSelectionArchive `protobuf:"bytes,3,opt,name=end_selection" json:"end_selection,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *ChartCommandSelectionBehaviorArchive) Reset()         { *m = ChartCommandSelectionBehaviorArchive{} }
func (m *ChartCommandSelectionBehaviorArchive) String() string { return proto.CompactTextString(m) }
func (*ChartCommandSelectionBehaviorArchive) ProtoMessage()    {}

func (m *ChartCommandSelectionBehaviorArchive) GetDrawableInfo() *TSP.Reference {
	if m != nil {
		return m.DrawableInfo
	}
	return nil
}

func (m *ChartCommandSelectionBehaviorArchive) GetBeginSelection() *ChartSelectionArchive {
	if m != nil {
		return m.BeginSelection
	}
	return nil
}

func (m *ChartCommandSelectionBehaviorArchive) GetEndSelection() *ChartSelectionArchive {
	if m != nil {
		return m.EndSelection
	}
	return nil
}

func init() {
}
