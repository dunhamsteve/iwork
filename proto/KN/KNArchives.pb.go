// Code generated by protoc-gen-go.
// source: KNArchives.proto
// DO NOT EDIT!

/*
Package KN is a generated protocol buffer package.

It is generated from these files:
	KNArchives.proto

It has these top-level messages:
	AnimationAttributesArchive
	TransitionAttributesArchive
	TransitionArchive
	BuildChunkArchive
	BuildAttributesArchive
	BuildArchive
	PlaceholderArchive
	NoteArchive
	ClassicStylesheetRecordArchive
	ClassicThemeRecordArchive
	SlideArchive
	SlideNodeArchive
	DesktopUILayoutArchive
	UIStateArchive
	CanvasSelectionArchive
	ThemeArchive
	SlideTreeArchive
	ShowArchive
	DocumentArchive
	SlideStylePropertiesArchive
	SlideStyleArchive
	PasteboardNativeStorageArchive
	MasterChangeBlobArchive
	RecordingArchive
	RecordingEventTrackArchive
	RecordingEventArchive
	RecordingNavigationEventArchive
	RecordingLaserEventArchive
	RecordingPauseEventArchive
	RecordingMovieEventArchive
	RecordingMovieTrackArchive
	MovieSegmentArchive
	Soundtrack
	SlideNumberAttachmentArchive
	SlideCollectionSelectionArchive
*/
package KN

import proto "github.com/golang/protobuf/proto"
import math "math"
import "github.com/dunhamsteve/iwork/proto/TSP"

// discarding unused import TSK "TSKArchives.pb"
import "github.com/dunhamsteve/iwork/proto/TSS"
import "github.com/dunhamsteve/iwork/proto/TSD"
import "github.com/dunhamsteve/iwork/proto/TSWP"
import "github.com/dunhamsteve/iwork/proto/TSA"
import "github.com/dunhamsteve/iwork/proto/TSCH"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type TransitionAttributesArchive_TransitionCustomAttributesTimingCurveType int32

const (
	TransitionAttributesArchive_TransitionCustomAttributesTimingCurveTypeLinear        TransitionAttributesArchive_TransitionCustomAttributesTimingCurveType = 1
	TransitionAttributesArchive_TransitionCustomAttributesTimingCurveTypeEaseIn        TransitionAttributesArchive_TransitionCustomAttributesTimingCurveType = 2
	TransitionAttributesArchive_TransitionCustomAttributesTimingCurveTypeEaseOut       TransitionAttributesArchive_TransitionCustomAttributesTimingCurveType = 3
	TransitionAttributesArchive_TransitionCustomAttributesTimingCurveTypeEaseInEaseOut TransitionAttributesArchive_TransitionCustomAttributesTimingCurveType = 4
)

var TransitionAttributesArchive_TransitionCustomAttributesTimingCurveType_name = map[int32]string{
	1: "TransitionCustomAttributesTimingCurveTypeLinear",
	2: "TransitionCustomAttributesTimingCurveTypeEaseIn",
	3: "TransitionCustomAttributesTimingCurveTypeEaseOut",
	4: "TransitionCustomAttributesTimingCurveTypeEaseInEaseOut",
}
var TransitionAttributesArchive_TransitionCustomAttributesTimingCurveType_value = map[string]int32{
	"TransitionCustomAttributesTimingCurveTypeLinear":        1,
	"TransitionCustomAttributesTimingCurveTypeEaseIn":        2,
	"TransitionCustomAttributesTimingCurveTypeEaseOut":       3,
	"TransitionCustomAttributesTimingCurveTypeEaseInEaseOut": 4,
}

func (x TransitionAttributesArchive_TransitionCustomAttributesTimingCurveType) Enum() *TransitionAttributesArchive_TransitionCustomAttributesTimingCurveType {
	p := new(TransitionAttributesArchive_TransitionCustomAttributesTimingCurveType)
	*p = x
	return p
}
func (x TransitionAttributesArchive_TransitionCustomAttributesTimingCurveType) String() string {
	return proto.EnumName(TransitionAttributesArchive_TransitionCustomAttributesTimingCurveType_name, int32(x))
}
func (x *TransitionAttributesArchive_TransitionCustomAttributesTimingCurveType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TransitionAttributesArchive_TransitionCustomAttributesTimingCurveType_value, data, "TransitionAttributesArchive_TransitionCustomAttributesTimingCurveType")
	if err != nil {
		return err
	}
	*x = TransitionAttributesArchive_TransitionCustomAttributesTimingCurveType(value)
	return nil
}

type TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryType int32

const (
	TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryTypeByObject    TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryType = 1
	TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryTypeByWord      TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryType = 2
	TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryTypeByCharacter TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryType = 3
	TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryTypeByLine      TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryType = 4
)

var TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryType_name = map[int32]string{
	1: "TransitionCustomAttributesTextDeliveryTypeByObject",
	2: "TransitionCustomAttributesTextDeliveryTypeByWord",
	3: "TransitionCustomAttributesTextDeliveryTypeByCharacter",
	4: "TransitionCustomAttributesTextDeliveryTypeByLine",
}
var TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryType_value = map[string]int32{
	"TransitionCustomAttributesTextDeliveryTypeByObject":    1,
	"TransitionCustomAttributesTextDeliveryTypeByWord":      2,
	"TransitionCustomAttributesTextDeliveryTypeByCharacter": 3,
	"TransitionCustomAttributesTextDeliveryTypeByLine":      4,
}

func (x TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryType) Enum() *TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryType {
	p := new(TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryType)
	*p = x
	return p
}
func (x TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryType) String() string {
	return proto.EnumName(TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryType_name, int32(x))
}
func (x *TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryType_value, data, "TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryType")
	if err != nil {
		return err
	}
	*x = TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryType(value)
	return nil
}

type BuildAttributesArchive_BuildAttributesAcceleration int32

const (
	BuildAttributesArchive_kNone     BuildAttributesArchive_BuildAttributesAcceleration = 0
	BuildAttributesArchive_kEaseIn   BuildAttributesArchive_BuildAttributesAcceleration = 1
	BuildAttributesArchive_kEaseOut  BuildAttributesArchive_BuildAttributesAcceleration = 2
	BuildAttributesArchive_kEaseBoth BuildAttributesArchive_BuildAttributesAcceleration = 3
)

var BuildAttributesArchive_BuildAttributesAcceleration_name = map[int32]string{
	0: "kNone",
	1: "kEaseIn",
	2: "kEaseOut",
	3: "kEaseBoth",
}
var BuildAttributesArchive_BuildAttributesAcceleration_value = map[string]int32{
	"kNone":     0,
	"kEaseIn":   1,
	"kEaseOut":  2,
	"kEaseBoth": 3,
}

func (x BuildAttributesArchive_BuildAttributesAcceleration) Enum() *BuildAttributesArchive_BuildAttributesAcceleration {
	p := new(BuildAttributesArchive_BuildAttributesAcceleration)
	*p = x
	return p
}
func (x BuildAttributesArchive_BuildAttributesAcceleration) String() string {
	return proto.EnumName(BuildAttributesArchive_BuildAttributesAcceleration_name, int32(x))
}
func (x *BuildAttributesArchive_BuildAttributesAcceleration) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BuildAttributesArchive_BuildAttributesAcceleration_value, data, "BuildAttributesArchive_BuildAttributesAcceleration")
	if err != nil {
		return err
	}
	*x = BuildAttributesArchive_BuildAttributesAcceleration(value)
	return nil
}

type BuildAttributesArchive_BuildAttributesRotationDirection int32

const (
	BuildAttributesArchive_kClockwise        BuildAttributesArchive_BuildAttributesRotationDirection = 31
	BuildAttributesArchive_kCounterclockwise BuildAttributesArchive_BuildAttributesRotationDirection = 32
)

var BuildAttributesArchive_BuildAttributesRotationDirection_name = map[int32]string{
	31: "kClockwise",
	32: "kCounterclockwise",
}
var BuildAttributesArchive_BuildAttributesRotationDirection_value = map[string]int32{
	"kClockwise":        31,
	"kCounterclockwise": 32,
}

func (x BuildAttributesArchive_BuildAttributesRotationDirection) Enum() *BuildAttributesArchive_BuildAttributesRotationDirection {
	p := new(BuildAttributesArchive_BuildAttributesRotationDirection)
	*p = x
	return p
}
func (x BuildAttributesArchive_BuildAttributesRotationDirection) String() string {
	return proto.EnumName(BuildAttributesArchive_BuildAttributesRotationDirection_name, int32(x))
}
func (x *BuildAttributesArchive_BuildAttributesRotationDirection) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BuildAttributesArchive_BuildAttributesRotationDirection_value, data, "BuildAttributesArchive_BuildAttributesRotationDirection")
	if err != nil {
		return err
	}
	*x = BuildAttributesArchive_BuildAttributesRotationDirection(value)
	return nil
}

type BuildAttributesArchive_BuildAttributesCurveStyle int32

const (
	BuildAttributesArchive_kStraight BuildAttributesArchive_BuildAttributesCurveStyle = 0
	BuildAttributesArchive_kCurved   BuildAttributesArchive_BuildAttributesCurveStyle = 1
)

var BuildAttributesArchive_BuildAttributesCurveStyle_name = map[int32]string{
	0: "kStraight",
	1: "kCurved",
}
var BuildAttributesArchive_BuildAttributesCurveStyle_value = map[string]int32{
	"kStraight": 0,
	"kCurved":   1,
}

func (x BuildAttributesArchive_BuildAttributesCurveStyle) Enum() *BuildAttributesArchive_BuildAttributesCurveStyle {
	p := new(BuildAttributesArchive_BuildAttributesCurveStyle)
	*p = x
	return p
}
func (x BuildAttributesArchive_BuildAttributesCurveStyle) String() string {
	return proto.EnumName(BuildAttributesArchive_BuildAttributesCurveStyle_name, int32(x))
}
func (x *BuildAttributesArchive_BuildAttributesCurveStyle) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BuildAttributesArchive_BuildAttributesCurveStyle_value, data, "BuildAttributesArchive_BuildAttributesCurveStyle")
	if err != nil {
		return err
	}
	*x = BuildAttributesArchive_BuildAttributesCurveStyle(value)
	return nil
}

type BuildAttributesArchive_BuildAttributesTextDelivery int32

const (
	BuildAttributesArchive_kTextDeliveryUndefined   BuildAttributesArchive_BuildAttributesTextDelivery = 0
	BuildAttributesArchive_kTextDeliveryByObject    BuildAttributesArchive_BuildAttributesTextDelivery = 1
	BuildAttributesArchive_kTextDeliveryByWord      BuildAttributesArchive_BuildAttributesTextDelivery = 2
	BuildAttributesArchive_kTextDeliveryByCharacter BuildAttributesArchive_BuildAttributesTextDelivery = 3
	BuildAttributesArchive_kTextDeliveryByLine      BuildAttributesArchive_BuildAttributesTextDelivery = 4
)

var BuildAttributesArchive_BuildAttributesTextDelivery_name = map[int32]string{
	0: "kTextDeliveryUndefined",
	1: "kTextDeliveryByObject",
	2: "kTextDeliveryByWord",
	3: "kTextDeliveryByCharacter",
	4: "kTextDeliveryByLine",
}
var BuildAttributesArchive_BuildAttributesTextDelivery_value = map[string]int32{
	"kTextDeliveryUndefined":   0,
	"kTextDeliveryByObject":    1,
	"kTextDeliveryByWord":      2,
	"kTextDeliveryByCharacter": 3,
	"kTextDeliveryByLine":      4,
}

func (x BuildAttributesArchive_BuildAttributesTextDelivery) Enum() *BuildAttributesArchive_BuildAttributesTextDelivery {
	p := new(BuildAttributesArchive_BuildAttributesTextDelivery)
	*p = x
	return p
}
func (x BuildAttributesArchive_BuildAttributesTextDelivery) String() string {
	return proto.EnumName(BuildAttributesArchive_BuildAttributesTextDelivery_name, int32(x))
}
func (x *BuildAttributesArchive_BuildAttributesTextDelivery) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BuildAttributesArchive_BuildAttributesTextDelivery_value, data, "BuildAttributesArchive_BuildAttributesTextDelivery")
	if err != nil {
		return err
	}
	*x = BuildAttributesArchive_BuildAttributesTextDelivery(value)
	return nil
}

type BuildAttributesArchive_BuildAttributesDeliveryOption int32

const (
	BuildAttributesArchive_kDeliveryOptionUndefined  BuildAttributesArchive_BuildAttributesDeliveryOption = 0
	BuildAttributesArchive_kDeliveryOptionForward    BuildAttributesArchive_BuildAttributesDeliveryOption = 1
	BuildAttributesArchive_kDeliveryOptionBackward   BuildAttributesArchive_BuildAttributesDeliveryOption = 2
	BuildAttributesArchive_kDeliveryOptionFromCenter BuildAttributesArchive_BuildAttributesDeliveryOption = 3
	BuildAttributesArchive_kDeliveryOptionFromEdges  BuildAttributesArchive_BuildAttributesDeliveryOption = 4
	BuildAttributesArchive_kDeliveryOptionRandom     BuildAttributesArchive_BuildAttributesDeliveryOption = 5
)

var BuildAttributesArchive_BuildAttributesDeliveryOption_name = map[int32]string{
	0: "kDeliveryOptionUndefined",
	1: "kDeliveryOptionForward",
	2: "kDeliveryOptionBackward",
	3: "kDeliveryOptionFromCenter",
	4: "kDeliveryOptionFromEdges",
	5: "kDeliveryOptionRandom",
}
var BuildAttributesArchive_BuildAttributesDeliveryOption_value = map[string]int32{
	"kDeliveryOptionUndefined":  0,
	"kDeliveryOptionForward":    1,
	"kDeliveryOptionBackward":   2,
	"kDeliveryOptionFromCenter": 3,
	"kDeliveryOptionFromEdges":  4,
	"kDeliveryOptionRandom":     5,
}

func (x BuildAttributesArchive_BuildAttributesDeliveryOption) Enum() *BuildAttributesArchive_BuildAttributesDeliveryOption {
	p := new(BuildAttributesArchive_BuildAttributesDeliveryOption)
	*p = x
	return p
}
func (x BuildAttributesArchive_BuildAttributesDeliveryOption) String() string {
	return proto.EnumName(BuildAttributesArchive_BuildAttributesDeliveryOption_name, int32(x))
}
func (x *BuildAttributesArchive_BuildAttributesDeliveryOption) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BuildAttributesArchive_BuildAttributesDeliveryOption_value, data, "BuildAttributesArchive_BuildAttributesDeliveryOption")
	if err != nil {
		return err
	}
	*x = BuildAttributesArchive_BuildAttributesDeliveryOption(value)
	return nil
}

type BuildAttributesArchive_ActionBuildAttributesJiggleIntensity int32

const (
	BuildAttributesArchive_kJiggleIntensitySmall  BuildAttributesArchive_ActionBuildAttributesJiggleIntensity = 0
	BuildAttributesArchive_kJiggleIntensityMedium BuildAttributesArchive_ActionBuildAttributesJiggleIntensity = 1
	BuildAttributesArchive_kJiggleIntensityLarge  BuildAttributesArchive_ActionBuildAttributesJiggleIntensity = 2
)

var BuildAttributesArchive_ActionBuildAttributesJiggleIntensity_name = map[int32]string{
	0: "kJiggleIntensitySmall",
	1: "kJiggleIntensityMedium",
	2: "kJiggleIntensityLarge",
}
var BuildAttributesArchive_ActionBuildAttributesJiggleIntensity_value = map[string]int32{
	"kJiggleIntensitySmall":  0,
	"kJiggleIntensityMedium": 1,
	"kJiggleIntensityLarge":  2,
}

func (x BuildAttributesArchive_ActionBuildAttributesJiggleIntensity) Enum() *BuildAttributesArchive_ActionBuildAttributesJiggleIntensity {
	p := new(BuildAttributesArchive_ActionBuildAttributesJiggleIntensity)
	*p = x
	return p
}
func (x BuildAttributesArchive_ActionBuildAttributesJiggleIntensity) String() string {
	return proto.EnumName(BuildAttributesArchive_ActionBuildAttributesJiggleIntensity_name, int32(x))
}
func (x *BuildAttributesArchive_ActionBuildAttributesJiggleIntensity) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BuildAttributesArchive_ActionBuildAttributesJiggleIntensity_value, data, "BuildAttributesArchive_ActionBuildAttributesJiggleIntensity")
	if err != nil {
		return err
	}
	*x = BuildAttributesArchive_ActionBuildAttributesJiggleIntensity(value)
	return nil
}

type PlaceholderArchive_Kind int32

const (
	PlaceholderArchive_kKindPlaceholder            PlaceholderArchive_Kind = 0
	PlaceholderArchive_kKindSlideNumberPlaceholder PlaceholderArchive_Kind = 1
	PlaceholderArchive_kKindTitlePlaceholder       PlaceholderArchive_Kind = 2
	PlaceholderArchive_kKindBodyPlaceholder        PlaceholderArchive_Kind = 3
	PlaceholderArchive_kKindObjectPlaceholder      PlaceholderArchive_Kind = 4
)

var PlaceholderArchive_Kind_name = map[int32]string{
	0: "kKindPlaceholder",
	1: "kKindSlideNumberPlaceholder",
	2: "kKindTitlePlaceholder",
	3: "kKindBodyPlaceholder",
	4: "kKindObjectPlaceholder",
}
var PlaceholderArchive_Kind_value = map[string]int32{
	"kKindPlaceholder":            0,
	"kKindSlideNumberPlaceholder": 1,
	"kKindTitlePlaceholder":       2,
	"kKindBodyPlaceholder":        3,
	"kKindObjectPlaceholder":      4,
}

func (x PlaceholderArchive_Kind) Enum() *PlaceholderArchive_Kind {
	p := new(PlaceholderArchive_Kind)
	*p = x
	return p
}
func (x PlaceholderArchive_Kind) String() string {
	return proto.EnumName(PlaceholderArchive_Kind_name, int32(x))
}
func (x *PlaceholderArchive_Kind) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlaceholderArchive_Kind_value, data, "PlaceholderArchive_Kind")
	if err != nil {
		return err
	}
	*x = PlaceholderArchive_Kind(value)
	return nil
}

type DesktopUILayoutArchive_SidebarViewMode int32

const (
	DesktopUILayoutArchive_kSidebarViewModeNavigator DesktopUILayoutArchive_SidebarViewMode = 0
	DesktopUILayoutArchive_kSidebarViewModeOutline   DesktopUILayoutArchive_SidebarViewMode = 1
)

var DesktopUILayoutArchive_SidebarViewMode_name = map[int32]string{
	0: "kSidebarViewModeNavigator",
	1: "kSidebarViewModeOutline",
}
var DesktopUILayoutArchive_SidebarViewMode_value = map[string]int32{
	"kSidebarViewModeNavigator": 0,
	"kSidebarViewModeOutline":   1,
}

func (x DesktopUILayoutArchive_SidebarViewMode) Enum() *DesktopUILayoutArchive_SidebarViewMode {
	p := new(DesktopUILayoutArchive_SidebarViewMode)
	*p = x
	return p
}
func (x DesktopUILayoutArchive_SidebarViewMode) String() string {
	return proto.EnumName(DesktopUILayoutArchive_SidebarViewMode_name, int32(x))
}
func (x *DesktopUILayoutArchive_SidebarViewMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DesktopUILayoutArchive_SidebarViewMode_value, data, "DesktopUILayoutArchive_SidebarViewMode")
	if err != nil {
		return err
	}
	*x = DesktopUILayoutArchive_SidebarViewMode(value)
	return nil
}

type DesktopUILayoutArchive_InspectorPaneViewMode int32

const (
	DesktopUILayoutArchive_kInspectorPaneViewModeFormat  DesktopUILayoutArchive_InspectorPaneViewMode = 0
	DesktopUILayoutArchive_kInspectorPaneViewModeAnimate DesktopUILayoutArchive_InspectorPaneViewMode = 1
	DesktopUILayoutArchive_kInspectorPaneViewModeSetup   DesktopUILayoutArchive_InspectorPaneViewMode = 2
)

var DesktopUILayoutArchive_InspectorPaneViewMode_name = map[int32]string{
	0: "kInspectorPaneViewModeFormat",
	1: "kInspectorPaneViewModeAnimate",
	2: "kInspectorPaneViewModeSetup",
}
var DesktopUILayoutArchive_InspectorPaneViewMode_value = map[string]int32{
	"kInspectorPaneViewModeFormat":  0,
	"kInspectorPaneViewModeAnimate": 1,
	"kInspectorPaneViewModeSetup":   2,
}

func (x DesktopUILayoutArchive_InspectorPaneViewMode) Enum() *DesktopUILayoutArchive_InspectorPaneViewMode {
	p := new(DesktopUILayoutArchive_InspectorPaneViewMode)
	*p = x
	return p
}
func (x DesktopUILayoutArchive_InspectorPaneViewMode) String() string {
	return proto.EnumName(DesktopUILayoutArchive_InspectorPaneViewMode_name, int32(x))
}
func (x *DesktopUILayoutArchive_InspectorPaneViewMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DesktopUILayoutArchive_InspectorPaneViewMode_value, data, "DesktopUILayoutArchive_InspectorPaneViewMode")
	if err != nil {
		return err
	}
	*x = DesktopUILayoutArchive_InspectorPaneViewMode(value)
	return nil
}

type ShowArchive_KNShowMode int32

const (
	ShowArchive_kKNShowModeNormal         ShowArchive_KNShowMode = 0
	ShowArchive_kKNShowModeAutoPlay       ShowArchive_KNShowMode = 1
	ShowArchive_kKNShowModeHyperlinksOnly ShowArchive_KNShowMode = 2
)

var ShowArchive_KNShowMode_name = map[int32]string{
	0: "kKNShowModeNormal",
	1: "kKNShowModeAutoPlay",
	2: "kKNShowModeHyperlinksOnly",
}
var ShowArchive_KNShowMode_value = map[string]int32{
	"kKNShowModeNormal":         0,
	"kKNShowModeAutoPlay":       1,
	"kKNShowModeHyperlinksOnly": 2,
}

func (x ShowArchive_KNShowMode) Enum() *ShowArchive_KNShowMode {
	p := new(ShowArchive_KNShowMode)
	*p = x
	return p
}
func (x ShowArchive_KNShowMode) String() string {
	return proto.EnumName(ShowArchive_KNShowMode_name, int32(x))
}
func (x *ShowArchive_KNShowMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ShowArchive_KNShowMode_value, data, "ShowArchive_KNShowMode")
	if err != nil {
		return err
	}
	*x = ShowArchive_KNShowMode(value)
	return nil
}

type RecordingArchive_RecordingSyncState int32

const (
	RecordingArchive_kRecordingSyncStateInSyncWithShow    RecordingArchive_RecordingSyncState = 0
	RecordingArchive_kRecordingSyncStateOutOfSyncWithShow RecordingArchive_RecordingSyncState = 1
)

var RecordingArchive_RecordingSyncState_name = map[int32]string{
	0: "kRecordingSyncStateInSyncWithShow",
	1: "kRecordingSyncStateOutOfSyncWithShow",
}
var RecordingArchive_RecordingSyncState_value = map[string]int32{
	"kRecordingSyncStateInSyncWithShow":    0,
	"kRecordingSyncStateOutOfSyncWithShow": 1,
}

func (x RecordingArchive_RecordingSyncState) Enum() *RecordingArchive_RecordingSyncState {
	p := new(RecordingArchive_RecordingSyncState)
	*p = x
	return p
}
func (x RecordingArchive_RecordingSyncState) String() string {
	return proto.EnumName(RecordingArchive_RecordingSyncState_name, int32(x))
}
func (x *RecordingArchive_RecordingSyncState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RecordingArchive_RecordingSyncState_value, data, "RecordingArchive_RecordingSyncState")
	if err != nil {
		return err
	}
	*x = RecordingArchive_RecordingSyncState(value)
	return nil
}

type RecordingNavigationEventArchive_RecordingNavigationEventAnimationPhase int32

const (
	RecordingNavigationEventArchive_kRecordingNavigationEventAnimationNone  RecordingNavigationEventArchive_RecordingNavigationEventAnimationPhase = 0
	RecordingNavigationEventArchive_kRecordingNavigationEventAnimationStart RecordingNavigationEventArchive_RecordingNavigationEventAnimationPhase = 1
	RecordingNavigationEventArchive_kRecordingNavigationEventAnimationEnd   RecordingNavigationEventArchive_RecordingNavigationEventAnimationPhase = 2
)

var RecordingNavigationEventArchive_RecordingNavigationEventAnimationPhase_name = map[int32]string{
	0: "kRecordingNavigationEventAnimationNone",
	1: "kRecordingNavigationEventAnimationStart",
	2: "kRecordingNavigationEventAnimationEnd",
}
var RecordingNavigationEventArchive_RecordingNavigationEventAnimationPhase_value = map[string]int32{
	"kRecordingNavigationEventAnimationNone":  0,
	"kRecordingNavigationEventAnimationStart": 1,
	"kRecordingNavigationEventAnimationEnd":   2,
}

func (x RecordingNavigationEventArchive_RecordingNavigationEventAnimationPhase) Enum() *RecordingNavigationEventArchive_RecordingNavigationEventAnimationPhase {
	p := new(RecordingNavigationEventArchive_RecordingNavigationEventAnimationPhase)
	*p = x
	return p
}
func (x RecordingNavigationEventArchive_RecordingNavigationEventAnimationPhase) String() string {
	return proto.EnumName(RecordingNavigationEventArchive_RecordingNavigationEventAnimationPhase_name, int32(x))
}
func (x *RecordingNavigationEventArchive_RecordingNavigationEventAnimationPhase) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RecordingNavigationEventArchive_RecordingNavigationEventAnimationPhase_value, data, "RecordingNavigationEventArchive_RecordingNavigationEventAnimationPhase")
	if err != nil {
		return err
	}
	*x = RecordingNavigationEventArchive_RecordingNavigationEventAnimationPhase(value)
	return nil
}

type RecordingPauseEventArchive_RecordingPauseEventType int32

const (
	RecordingPauseEventArchive_kRecordingPauseEventTypeResume           RecordingPauseEventArchive_RecordingPauseEventType = 0
	RecordingPauseEventArchive_kRecordingPauseEventTypePause            RecordingPauseEventArchive_RecordingPauseEventType = 1
	RecordingPauseEventArchive_kRecordingPauseEventTypeConcealWithBlack RecordingPauseEventArchive_RecordingPauseEventType = 2
	RecordingPauseEventArchive_kRecordingPauseEventTypeConcealWithWhite RecordingPauseEventArchive_RecordingPauseEventType = 3
)

var RecordingPauseEventArchive_RecordingPauseEventType_name = map[int32]string{
	0: "kRecordingPauseEventTypeResume",
	1: "kRecordingPauseEventTypePause",
	2: "kRecordingPauseEventTypeConcealWithBlack",
	3: "kRecordingPauseEventTypeConcealWithWhite",
}
var RecordingPauseEventArchive_RecordingPauseEventType_value = map[string]int32{
	"kRecordingPauseEventTypeResume":           0,
	"kRecordingPauseEventTypePause":            1,
	"kRecordingPauseEventTypeConcealWithBlack": 2,
	"kRecordingPauseEventTypeConcealWithWhite": 3,
}

func (x RecordingPauseEventArchive_RecordingPauseEventType) Enum() *RecordingPauseEventArchive_RecordingPauseEventType {
	p := new(RecordingPauseEventArchive_RecordingPauseEventType)
	*p = x
	return p
}
func (x RecordingPauseEventArchive_RecordingPauseEventType) String() string {
	return proto.EnumName(RecordingPauseEventArchive_RecordingPauseEventType_name, int32(x))
}
func (x *RecordingPauseEventArchive_RecordingPauseEventType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RecordingPauseEventArchive_RecordingPauseEventType_value, data, "RecordingPauseEventArchive_RecordingPauseEventType")
	if err != nil {
		return err
	}
	*x = RecordingPauseEventArchive_RecordingPauseEventType(value)
	return nil
}

type RecordingMovieEventArchive_RecordingMovieEventType int32

const (
	RecordingMovieEventArchive_kRecordingMovieEventNone           RecordingMovieEventArchive_RecordingMovieEventType = 0
	RecordingMovieEventArchive_kRecordingMovieEventSeek           RecordingMovieEventArchive_RecordingMovieEventType = 1
	RecordingMovieEventArchive_kRecordingMovieEventSetRate        RecordingMovieEventArchive_RecordingMovieEventType = 2
	RecordingMovieEventArchive_kRecordingMovieEventStartPlayback  RecordingMovieEventArchive_RecordingMovieEventType = 3
	RecordingMovieEventArchive_kRecordingMovieEventStopPlayback   RecordingMovieEventArchive_RecordingMovieEventType = 4
	RecordingMovieEventArchive_kRecordingMovieEventBeginScrubbing RecordingMovieEventArchive_RecordingMovieEventType = 5
	RecordingMovieEventArchive_kRecordingMovieEventEndScrubbing   RecordingMovieEventArchive_RecordingMovieEventType = 6
)

var RecordingMovieEventArchive_RecordingMovieEventType_name = map[int32]string{
	0: "kRecordingMovieEventNone",
	1: "kRecordingMovieEventSeek",
	2: "kRecordingMovieEventSetRate",
	3: "kRecordingMovieEventStartPlayback",
	4: "kRecordingMovieEventStopPlayback",
	5: "kRecordingMovieEventBeginScrubbing",
	6: "kRecordingMovieEventEndScrubbing",
}
var RecordingMovieEventArchive_RecordingMovieEventType_value = map[string]int32{
	"kRecordingMovieEventNone":           0,
	"kRecordingMovieEventSeek":           1,
	"kRecordingMovieEventSetRate":        2,
	"kRecordingMovieEventStartPlayback":  3,
	"kRecordingMovieEventStopPlayback":   4,
	"kRecordingMovieEventBeginScrubbing": 5,
	"kRecordingMovieEventEndScrubbing":   6,
}

func (x RecordingMovieEventArchive_RecordingMovieEventType) Enum() *RecordingMovieEventArchive_RecordingMovieEventType {
	p := new(RecordingMovieEventArchive_RecordingMovieEventType)
	*p = x
	return p
}
func (x RecordingMovieEventArchive_RecordingMovieEventType) String() string {
	return proto.EnumName(RecordingMovieEventArchive_RecordingMovieEventType_name, int32(x))
}
func (x *RecordingMovieEventArchive_RecordingMovieEventType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RecordingMovieEventArchive_RecordingMovieEventType_value, data, "RecordingMovieEventArchive_RecordingMovieEventType")
	if err != nil {
		return err
	}
	*x = RecordingMovieEventArchive_RecordingMovieEventType(value)
	return nil
}

type Soundtrack_SoundtrackMode int32

const (
	Soundtrack_kKNSoundtrackModePlayOnce  Soundtrack_SoundtrackMode = 0
	Soundtrack_kKNSoundtrackModeLoop      Soundtrack_SoundtrackMode = 1
	Soundtrack_kKNSoundtrackModeDoNotPlay Soundtrack_SoundtrackMode = 2
)

var Soundtrack_SoundtrackMode_name = map[int32]string{
	0: "kKNSoundtrackModePlayOnce",
	1: "kKNSoundtrackModeLoop",
	2: "kKNSoundtrackModeDoNotPlay",
}
var Soundtrack_SoundtrackMode_value = map[string]int32{
	"kKNSoundtrackModePlayOnce":  0,
	"kKNSoundtrackModeLoop":      1,
	"kKNSoundtrackModeDoNotPlay": 2,
}

func (x Soundtrack_SoundtrackMode) Enum() *Soundtrack_SoundtrackMode {
	p := new(Soundtrack_SoundtrackMode)
	*p = x
	return p
}
func (x Soundtrack_SoundtrackMode) String() string {
	return proto.EnumName(Soundtrack_SoundtrackMode_name, int32(x))
}
func (x *Soundtrack_SoundtrackMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Soundtrack_SoundtrackMode_value, data, "Soundtrack_SoundtrackMode")
	if err != nil {
		return err
	}
	*x = Soundtrack_SoundtrackMode(value)
	return nil
}

type AnimationAttributesArchive struct {
	AnimationType    *string    `protobuf:"bytes,1,opt,name=animationType" json:"animationType,omitempty"`
	Effect           *string    `protobuf:"bytes,2,opt,name=effect" json:"effect,omitempty"`
	Duration         *float64   `protobuf:"fixed64,3,opt,name=duration" json:"duration,omitempty"`
	Direction        *uint32    `protobuf:"varint,4,opt,name=direction" json:"direction,omitempty"`
	Delay            *float64   `protobuf:"fixed64,5,opt,name=delay" json:"delay,omitempty"`
	IsAutomatic      *bool      `protobuf:"varint,6,opt,name=isAutomatic" json:"isAutomatic,omitempty"`
	Color            *TSP.Color `protobuf:"bytes,7,opt,name=color" json:"color,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *AnimationAttributesArchive) Reset()         { *m = AnimationAttributesArchive{} }
func (m *AnimationAttributesArchive) String() string { return proto.CompactTextString(m) }
func (*AnimationAttributesArchive) ProtoMessage()    {}

func (m *AnimationAttributesArchive) GetAnimationType() string {
	if m != nil && m.AnimationType != nil {
		return *m.AnimationType
	}
	return ""
}

func (m *AnimationAttributesArchive) GetEffect() string {
	if m != nil && m.Effect != nil {
		return *m.Effect
	}
	return ""
}

func (m *AnimationAttributesArchive) GetDuration() float64 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *AnimationAttributesArchive) GetDirection() uint32 {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return 0
}

func (m *AnimationAttributesArchive) GetDelay() float64 {
	if m != nil && m.Delay != nil {
		return *m.Delay
	}
	return 0
}

func (m *AnimationAttributesArchive) GetIsAutomatic() bool {
	if m != nil && m.IsAutomatic != nil {
		return *m.IsAutomatic
	}
	return false
}

func (m *AnimationAttributesArchive) GetColor() *TSP.Color {
	if m != nil {
		return m.Color
	}
	return nil
}

type TransitionAttributesArchive struct {
	AnimationAttributes                 *AnimationAttributesArchive                                             `protobuf:"bytes,8,opt,name=animationAttributes" json:"animationAttributes,omitempty"`
	IsAutomatic                         *bool                                                                   `protobuf:"varint,6,opt,name=isAutomatic" json:"isAutomatic,omitempty"`
	CustomTwist                         *float32                                                                `protobuf:"fixed32,9,opt,name=custom_twist" json:"custom_twist,omitempty"`
	CustomMosaicSize                    *uint32                                                                 `protobuf:"varint,10,opt,name=custom_mosaic_size" json:"custom_mosaic_size,omitempty"`
	CustomMosaicType                    *uint32                                                                 `protobuf:"varint,11,opt,name=custom_mosaic_type" json:"custom_mosaic_type,omitempty"`
	CustomBounce                        *bool                                                                   `protobuf:"varint,12,opt,name=custom_bounce" json:"custom_bounce,omitempty"`
	CustomMagicMoveFadeUnmatchedObjects *bool                                                                   `protobuf:"varint,13,opt,name=custom_magic_move_fade_unmatched_objects" json:"custom_magic_move_fade_unmatched_objects,omitempty"`
	CustomTimingCurve                   *TransitionAttributesArchive_TransitionCustomAttributesTimingCurveType  `protobuf:"varint,15,opt,name=custom_timing_curve,enum=KN.TransitionAttributesArchive_TransitionCustomAttributesTimingCurveType" json:"custom_timing_curve,omitempty"`
	CustomTextDeliveryType              *TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryType `protobuf:"varint,16,opt,name=custom_text_delivery_type,enum=KN.TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryType" json:"custom_text_delivery_type,omitempty"`
	DatabaseAnimationType               *string                                                                 `protobuf:"bytes,1,opt,name=database_animationType" json:"database_animationType,omitempty"`
	DatabaseEffect                      *string                                                                 `protobuf:"bytes,2,opt,name=database_effect" json:"database_effect,omitempty"`
	DatabaseDuration                    *float64                                                                `protobuf:"fixed64,3,opt,name=database_duration" json:"database_duration,omitempty"`
	DatabaseDirection                   *uint32                                                                 `protobuf:"varint,4,opt,name=database_direction" json:"database_direction,omitempty"`
	DatabaseDelay                       *float32                                                                `protobuf:"fixed32,5,opt,name=database_delay" json:"database_delay,omitempty"`
	DatabaseColor                       *TSP.Color                                                              `protobuf:"bytes,7,opt,name=database_color" json:"database_color,omitempty"`
	XXX_unrecognized                    []byte                                                                  `json:"-"`
}

func (m *TransitionAttributesArchive) Reset()         { *m = TransitionAttributesArchive{} }
func (m *TransitionAttributesArchive) String() string { return proto.CompactTextString(m) }
func (*TransitionAttributesArchive) ProtoMessage()    {}

func (m *TransitionAttributesArchive) GetAnimationAttributes() *AnimationAttributesArchive {
	if m != nil {
		return m.AnimationAttributes
	}
	return nil
}

func (m *TransitionAttributesArchive) GetIsAutomatic() bool {
	if m != nil && m.IsAutomatic != nil {
		return *m.IsAutomatic
	}
	return false
}

func (m *TransitionAttributesArchive) GetCustomTwist() float32 {
	if m != nil && m.CustomTwist != nil {
		return *m.CustomTwist
	}
	return 0
}

func (m *TransitionAttributesArchive) GetCustomMosaicSize() uint32 {
	if m != nil && m.CustomMosaicSize != nil {
		return *m.CustomMosaicSize
	}
	return 0
}

func (m *TransitionAttributesArchive) GetCustomMosaicType() uint32 {
	if m != nil && m.CustomMosaicType != nil {
		return *m.CustomMosaicType
	}
	return 0
}

func (m *TransitionAttributesArchive) GetCustomBounce() bool {
	if m != nil && m.CustomBounce != nil {
		return *m.CustomBounce
	}
	return false
}

func (m *TransitionAttributesArchive) GetCustomMagicMoveFadeUnmatchedObjects() bool {
	if m != nil && m.CustomMagicMoveFadeUnmatchedObjects != nil {
		return *m.CustomMagicMoveFadeUnmatchedObjects
	}
	return false
}

func (m *TransitionAttributesArchive) GetCustomTimingCurve() TransitionAttributesArchive_TransitionCustomAttributesTimingCurveType {
	if m != nil && m.CustomTimingCurve != nil {
		return *m.CustomTimingCurve
	}
	return TransitionAttributesArchive_TransitionCustomAttributesTimingCurveTypeLinear
}

func (m *TransitionAttributesArchive) GetCustomTextDeliveryType() TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryType {
	if m != nil && m.CustomTextDeliveryType != nil {
		return *m.CustomTextDeliveryType
	}
	return TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryTypeByObject
}

func (m *TransitionAttributesArchive) GetDatabaseAnimationType() string {
	if m != nil && m.DatabaseAnimationType != nil {
		return *m.DatabaseAnimationType
	}
	return ""
}

func (m *TransitionAttributesArchive) GetDatabaseEffect() string {
	if m != nil && m.DatabaseEffect != nil {
		return *m.DatabaseEffect
	}
	return ""
}

func (m *TransitionAttributesArchive) GetDatabaseDuration() float64 {
	if m != nil && m.DatabaseDuration != nil {
		return *m.DatabaseDuration
	}
	return 0
}

func (m *TransitionAttributesArchive) GetDatabaseDirection() uint32 {
	if m != nil && m.DatabaseDirection != nil {
		return *m.DatabaseDirection
	}
	return 0
}

func (m *TransitionAttributesArchive) GetDatabaseDelay() float32 {
	if m != nil && m.DatabaseDelay != nil {
		return *m.DatabaseDelay
	}
	return 0
}

func (m *TransitionAttributesArchive) GetDatabaseColor() *TSP.Color {
	if m != nil {
		return m.DatabaseColor
	}
	return nil
}

type TransitionArchive struct {
	Attributes       *TransitionAttributesArchive `protobuf:"bytes,2,req,name=attributes" json:"attributes,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *TransitionArchive) Reset()         { *m = TransitionArchive{} }
func (m *TransitionArchive) String() string { return proto.CompactTextString(m) }
func (*TransitionArchive) ProtoMessage()    {}

func (m *TransitionArchive) GetAttributes() *TransitionAttributesArchive {
	if m != nil {
		return m.Attributes
	}
	return nil
}

type BuildChunkArchive struct {
	Build            *TSP.Reference `protobuf:"bytes,1,req,name=build" json:"build,omitempty"`
	Index            *uint32        `protobuf:"varint,2,req,name=index" json:"index,omitempty"`
	Delay            *float64       `protobuf:"fixed64,3,opt,name=delay" json:"delay,omitempty"`
	Duration         *float64       `protobuf:"fixed64,4,opt,name=duration" json:"duration,omitempty"`
	Automatic        *bool          `protobuf:"varint,5,opt,name=automatic" json:"automatic,omitempty"`
	Referent         *bool          `protobuf:"varint,6,opt,name=referent" json:"referent,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *BuildChunkArchive) Reset()         { *m = BuildChunkArchive{} }
func (m *BuildChunkArchive) String() string { return proto.CompactTextString(m) }
func (*BuildChunkArchive) ProtoMessage()    {}

func (m *BuildChunkArchive) GetBuild() *TSP.Reference {
	if m != nil {
		return m.Build
	}
	return nil
}

func (m *BuildChunkArchive) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *BuildChunkArchive) GetDelay() float64 {
	if m != nil && m.Delay != nil {
		return *m.Delay
	}
	return 0
}

func (m *BuildChunkArchive) GetDuration() float64 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *BuildChunkArchive) GetAutomatic() bool {
	if m != nil && m.Automatic != nil {
		return *m.Automatic
	}
	return false
}

func (m *BuildChunkArchive) GetReferent() bool {
	if m != nil && m.Referent != nil {
		return *m.Referent
	}
	return false
}

type BuildAttributesArchive struct {
	AnimationAttributes         *AnimationAttributesArchive                                  `protobuf:"bytes,18,opt,name=animationAttributes" json:"animationAttributes,omitempty"`
	EventTrigger                *uint32                                                      `protobuf:"varint,4,opt,name=eventTrigger" json:"eventTrigger,omitempty"`
	DelayAutomaticAfter         *float64                                                     `protobuf:"fixed64,6,opt,name=delayAutomaticAfter" json:"delayAutomaticAfter,omitempty"`
	DelayAutomaticWith          *float64                                                     `protobuf:"fixed64,7,opt,name=delayAutomaticWith" json:"delayAutomaticWith,omitempty"`
	CurveStyle                  *BuildAttributesArchive_BuildAttributesCurveStyle            `protobuf:"varint,14,opt,name=curveStyle,enum=KN.BuildAttributesArchive_BuildAttributesCurveStyle" json:"curveStyle,omitempty"`
	ChartRotation3D             *float64                                                     `protobuf:"fixed64,17,opt" json:"ChartRotation3D,omitempty"`
	StartOffset                 *uint32                                                      `protobuf:"varint,27,opt,name=startOffset" json:"startOffset,omitempty"`
	EndOffset                   *uint32                                                      `protobuf:"varint,28,opt,name=endOffset" json:"endOffset,omitempty"`
	ActionRotationAngle         *float64                                                     `protobuf:"fixed64,9,opt,name=action_rotationAngle" json:"action_rotationAngle,omitempty"`
	ActionRotationDirection     *BuildAttributesArchive_BuildAttributesRotationDirection     `protobuf:"varint,10,opt,name=action_rotationDirection,enum=KN.BuildAttributesArchive_BuildAttributesRotationDirection" json:"action_rotationDirection,omitempty"`
	ActionScaleSize             *float64                                                     `protobuf:"fixed64,11,opt,name=action_scaleSize" json:"action_scaleSize,omitempty"`
	ActionColorAlpha            *float64                                                     `protobuf:"fixed64,12,opt,name=action_colorAlpha" json:"action_colorAlpha,omitempty"`
	ActionAcceleration          *BuildAttributesArchive_BuildAttributesAcceleration          `protobuf:"varint,13,opt,name=action_acceleration,enum=KN.BuildAttributesArchive_BuildAttributesAcceleration" json:"action_acceleration,omitempty"`
	ActionMotionPathSource      *TSD.PathSourceArchive                                       `protobuf:"bytes,22,opt,name=action_motionPathSource" json:"action_motionPathSource,omitempty"`
	CustomBounce                *bool                                                        `protobuf:"varint,19,opt,name=custom_bounce" json:"custom_bounce,omitempty"`
	CustomTextDelivery          *BuildAttributesArchive_BuildAttributesTextDelivery          `protobuf:"varint,20,opt,name=custom_textDelivery,enum=KN.BuildAttributesArchive_BuildAttributesTextDelivery" json:"custom_textDelivery,omitempty"`
	CustomDeliveryOption        *BuildAttributesArchive_BuildAttributesDeliveryOption        `protobuf:"varint,21,opt,name=custom_deliveryOption,enum=KN.BuildAttributesArchive_BuildAttributesDeliveryOption" json:"custom_deliveryOption,omitempty"`
	CustomActionDecay           *bool                                                        `protobuf:"varint,23,opt,name=custom_action_decay" json:"custom_action_decay,omitempty"`
	CustomActionRepeatCount     *uint32                                                      `protobuf:"varint,24,opt,name=custom_action_repeatCount" json:"custom_action_repeatCount,omitempty"`
	CustomActionScale           *float64                                                     `protobuf:"fixed64,25,opt,name=custom_action_scale" json:"custom_action_scale,omitempty"`
	CustomActionJiggleIntensity *BuildAttributesArchive_ActionBuildAttributesJiggleIntensity `protobuf:"varint,26,opt,name=custom_action_jiggleIntensity,enum=KN.BuildAttributesArchive_ActionBuildAttributesJiggleIntensity" json:"custom_action_jiggleIntensity,omitempty"`
	DatabaseAnimationType       *string                                                      `protobuf:"bytes,1,opt,name=database_animationType" json:"database_animationType,omitempty"`
	DatabaseEffect              *string                                                      `protobuf:"bytes,2,opt,name=database_effect" json:"database_effect,omitempty"`
	DatabaseDirection           *uint32                                                      `protobuf:"varint,3,opt,name=database_direction" json:"database_direction,omitempty"`
	DatabaseDelay               *float64                                                     `protobuf:"fixed64,5,opt,name=database_delay" json:"database_delay,omitempty"`
	DatabaseDuration            *float64                                                     `protobuf:"fixed64,8,opt,name=database_duration" json:"database_duration,omitempty"`
	DatabaseColor               *TSP.Color                                                   `protobuf:"bytes,16,opt,name=database_color" json:"database_color,omitempty"`
	MotionPathString            *string                                                      `protobuf:"bytes,15,opt,name=motionPathString" json:"motionPathString,omitempty"`
	XXX_unrecognized            []byte                                                       `json:"-"`
}

func (m *BuildAttributesArchive) Reset()         { *m = BuildAttributesArchive{} }
func (m *BuildAttributesArchive) String() string { return proto.CompactTextString(m) }
func (*BuildAttributesArchive) ProtoMessage()    {}

func (m *BuildAttributesArchive) GetAnimationAttributes() *AnimationAttributesArchive {
	if m != nil {
		return m.AnimationAttributes
	}
	return nil
}

func (m *BuildAttributesArchive) GetEventTrigger() uint32 {
	if m != nil && m.EventTrigger != nil {
		return *m.EventTrigger
	}
	return 0
}

func (m *BuildAttributesArchive) GetDelayAutomaticAfter() float64 {
	if m != nil && m.DelayAutomaticAfter != nil {
		return *m.DelayAutomaticAfter
	}
	return 0
}

func (m *BuildAttributesArchive) GetDelayAutomaticWith() float64 {
	if m != nil && m.DelayAutomaticWith != nil {
		return *m.DelayAutomaticWith
	}
	return 0
}

func (m *BuildAttributesArchive) GetCurveStyle() BuildAttributesArchive_BuildAttributesCurveStyle {
	if m != nil && m.CurveStyle != nil {
		return *m.CurveStyle
	}
	return BuildAttributesArchive_kStraight
}

func (m *BuildAttributesArchive) GetChartRotation3D() float64 {
	if m != nil && m.ChartRotation3D != nil {
		return *m.ChartRotation3D
	}
	return 0
}

func (m *BuildAttributesArchive) GetStartOffset() uint32 {
	if m != nil && m.StartOffset != nil {
		return *m.StartOffset
	}
	return 0
}

func (m *BuildAttributesArchive) GetEndOffset() uint32 {
	if m != nil && m.EndOffset != nil {
		return *m.EndOffset
	}
	return 0
}

func (m *BuildAttributesArchive) GetActionRotationAngle() float64 {
	if m != nil && m.ActionRotationAngle != nil {
		return *m.ActionRotationAngle
	}
	return 0
}

func (m *BuildAttributesArchive) GetActionRotationDirection() BuildAttributesArchive_BuildAttributesRotationDirection {
	if m != nil && m.ActionRotationDirection != nil {
		return *m.ActionRotationDirection
	}
	return BuildAttributesArchive_kClockwise
}

func (m *BuildAttributesArchive) GetActionScaleSize() float64 {
	if m != nil && m.ActionScaleSize != nil {
		return *m.ActionScaleSize
	}
	return 0
}

func (m *BuildAttributesArchive) GetActionColorAlpha() float64 {
	if m != nil && m.ActionColorAlpha != nil {
		return *m.ActionColorAlpha
	}
	return 0
}

func (m *BuildAttributesArchive) GetActionAcceleration() BuildAttributesArchive_BuildAttributesAcceleration {
	if m != nil && m.ActionAcceleration != nil {
		return *m.ActionAcceleration
	}
	return BuildAttributesArchive_kNone
}

func (m *BuildAttributesArchive) GetActionMotionPathSource() *TSD.PathSourceArchive {
	if m != nil {
		return m.ActionMotionPathSource
	}
	return nil
}

func (m *BuildAttributesArchive) GetCustomBounce() bool {
	if m != nil && m.CustomBounce != nil {
		return *m.CustomBounce
	}
	return false
}

func (m *BuildAttributesArchive) GetCustomTextDelivery() BuildAttributesArchive_BuildAttributesTextDelivery {
	if m != nil && m.CustomTextDelivery != nil {
		return *m.CustomTextDelivery
	}
	return BuildAttributesArchive_kTextDeliveryUndefined
}

func (m *BuildAttributesArchive) GetCustomDeliveryOption() BuildAttributesArchive_BuildAttributesDeliveryOption {
	if m != nil && m.CustomDeliveryOption != nil {
		return *m.CustomDeliveryOption
	}
	return BuildAttributesArchive_kDeliveryOptionUndefined
}

func (m *BuildAttributesArchive) GetCustomActionDecay() bool {
	if m != nil && m.CustomActionDecay != nil {
		return *m.CustomActionDecay
	}
	return false
}

func (m *BuildAttributesArchive) GetCustomActionRepeatCount() uint32 {
	if m != nil && m.CustomActionRepeatCount != nil {
		return *m.CustomActionRepeatCount
	}
	return 0
}

func (m *BuildAttributesArchive) GetCustomActionScale() float64 {
	if m != nil && m.CustomActionScale != nil {
		return *m.CustomActionScale
	}
	return 0
}

func (m *BuildAttributesArchive) GetCustomActionJiggleIntensity() BuildAttributesArchive_ActionBuildAttributesJiggleIntensity {
	if m != nil && m.CustomActionJiggleIntensity != nil {
		return *m.CustomActionJiggleIntensity
	}
	return BuildAttributesArchive_kJiggleIntensitySmall
}

func (m *BuildAttributesArchive) GetDatabaseAnimationType() string {
	if m != nil && m.DatabaseAnimationType != nil {
		return *m.DatabaseAnimationType
	}
	return ""
}

func (m *BuildAttributesArchive) GetDatabaseEffect() string {
	if m != nil && m.DatabaseEffect != nil {
		return *m.DatabaseEffect
	}
	return ""
}

func (m *BuildAttributesArchive) GetDatabaseDirection() uint32 {
	if m != nil && m.DatabaseDirection != nil {
		return *m.DatabaseDirection
	}
	return 0
}

func (m *BuildAttributesArchive) GetDatabaseDelay() float64 {
	if m != nil && m.DatabaseDelay != nil {
		return *m.DatabaseDelay
	}
	return 0
}

func (m *BuildAttributesArchive) GetDatabaseDuration() float64 {
	if m != nil && m.DatabaseDuration != nil {
		return *m.DatabaseDuration
	}
	return 0
}

func (m *BuildAttributesArchive) GetDatabaseColor() *TSP.Color {
	if m != nil {
		return m.DatabaseColor
	}
	return nil
}

func (m *BuildAttributesArchive) GetMotionPathString() string {
	if m != nil && m.MotionPathString != nil {
		return *m.MotionPathString
	}
	return ""
}

type BuildArchive struct {
	Drawable         *TSP.Reference          `protobuf:"bytes,1,req,name=drawable" json:"drawable,omitempty"`
	Delivery         *string                 `protobuf:"bytes,2,req,name=delivery" json:"delivery,omitempty"`
	Duration         *float64                `protobuf:"fixed64,3,req,name=duration" json:"duration,omitempty"`
	Attributes       *BuildAttributesArchive `protobuf:"bytes,4,req,name=attributes" json:"attributes,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *BuildArchive) Reset()         { *m = BuildArchive{} }
func (m *BuildArchive) String() string { return proto.CompactTextString(m) }
func (*BuildArchive) ProtoMessage()    {}

func (m *BuildArchive) GetDrawable() *TSP.Reference {
	if m != nil {
		return m.Drawable
	}
	return nil
}

func (m *BuildArchive) GetDelivery() string {
	if m != nil && m.Delivery != nil {
		return *m.Delivery
	}
	return ""
}

func (m *BuildArchive) GetDuration() float64 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *BuildArchive) GetAttributes() *BuildAttributesArchive {
	if m != nil {
		return m.Attributes
	}
	return nil
}

type PlaceholderArchive struct {
	Super            *TSWP.ShapeInfoArchive   `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Kind             *PlaceholderArchive_Kind `protobuf:"varint,2,opt,name=kind,enum=KN.PlaceholderArchive_Kind,def=0" json:"kind,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *PlaceholderArchive) Reset()         { *m = PlaceholderArchive{} }
func (m *PlaceholderArchive) String() string { return proto.CompactTextString(m) }
func (*PlaceholderArchive) ProtoMessage()    {}

const Default_PlaceholderArchive_Kind PlaceholderArchive_Kind = PlaceholderArchive_kKindPlaceholder

func (m *PlaceholderArchive) GetSuper() *TSWP.ShapeInfoArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *PlaceholderArchive) GetKind() PlaceholderArchive_Kind {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return Default_PlaceholderArchive_Kind
}

type NoteArchive struct {
	ContainedStorage *TSP.Reference `protobuf:"bytes,1,req,name=containedStorage" json:"containedStorage,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *NoteArchive) Reset()         { *m = NoteArchive{} }
func (m *NoteArchive) String() string { return proto.CompactTextString(m) }
func (*NoteArchive) ProtoMessage()    {}

func (m *NoteArchive) GetContainedStorage() *TSP.Reference {
	if m != nil {
		return m.ContainedStorage
	}
	return nil
}

type ClassicStylesheetRecordArchive struct {
	IdentifierToStyleMap []*TSS.StylesheetArchive_IdentifiedStyleEntry `protobuf:"bytes,1,rep,name=identifier_to_style_map" json:"identifier_to_style_map,omitempty"`
	Theme                *TSP.Reference                                `protobuf:"bytes,2,opt,name=theme" json:"theme,omitempty"`
	XXX_unrecognized     []byte                                        `json:"-"`
}

func (m *ClassicStylesheetRecordArchive) Reset()         { *m = ClassicStylesheetRecordArchive{} }
func (m *ClassicStylesheetRecordArchive) String() string { return proto.CompactTextString(m) }
func (*ClassicStylesheetRecordArchive) ProtoMessage()    {}

func (m *ClassicStylesheetRecordArchive) GetIdentifierToStyleMap() []*TSS.StylesheetArchive_IdentifiedStyleEntry {
	if m != nil {
		return m.IdentifierToStyleMap
	}
	return nil
}

func (m *ClassicStylesheetRecordArchive) GetTheme() *TSP.Reference {
	if m != nil {
		return m.Theme
	}
	return nil
}

type ClassicThemeRecordArchive struct {
	Uuid             *string          `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	StylesheetRecord *TSP.Reference   `protobuf:"bytes,2,opt,name=stylesheetRecord" json:"stylesheetRecord,omitempty"`
	Masters          []*TSP.Reference `protobuf:"bytes,3,rep,name=masters" json:"masters,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ClassicThemeRecordArchive) Reset()         { *m = ClassicThemeRecordArchive{} }
func (m *ClassicThemeRecordArchive) String() string { return proto.CompactTextString(m) }
func (*ClassicThemeRecordArchive) ProtoMessage()    {}

func (m *ClassicThemeRecordArchive) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *ClassicThemeRecordArchive) GetStylesheetRecord() *TSP.Reference {
	if m != nil {
		return m.StylesheetRecord
	}
	return nil
}

func (m *ClassicThemeRecordArchive) GetMasters() []*TSP.Reference {
	if m != nil {
		return m.Masters
	}
	return nil
}

type SlideArchive struct {
	Style                                                              *TSP.Reference                    `protobuf:"bytes,1,req,name=style" json:"style,omitempty"`
	Builds                                                             []*TSP.Reference                  `protobuf:"bytes,2,rep,name=builds" json:"builds,omitempty"`
	BuildChunks                                                        []*BuildChunkArchive              `protobuf:"bytes,3,rep,name=buildChunks" json:"buildChunks,omitempty"`
	Transition                                                         *TransitionArchive                `protobuf:"bytes,4,req,name=transition" json:"transition,omitempty"`
	TitlePlaceholder                                                   *TSP.Reference                    `protobuf:"bytes,5,opt,name=titlePlaceholder" json:"titlePlaceholder,omitempty"`
	BodyPlaceholder                                                    *TSP.Reference                    `protobuf:"bytes,6,opt,name=bodyPlaceholder" json:"bodyPlaceholder,omitempty"`
	ObjectPlaceholder                                                  *TSP.Reference                    `protobuf:"bytes,30,opt,name=objectPlaceholder" json:"objectPlaceholder,omitempty"`
	SlideNumberPlaceholder                                             *TSP.Reference                    `protobuf:"bytes,20,opt,name=slideNumberPlaceholder" json:"slideNumberPlaceholder,omitempty"`
	Drawables                                                          []*TSP.Reference                  `protobuf:"bytes,7,rep,name=drawables" json:"drawables,omitempty"`
	SageTagToInfoMap                                                   []*SlideArchive_SageTagMapEntry   `protobuf:"bytes,28,rep,name=sage_tag_to_info_map" json:"sage_tag_to_info_map,omitempty"`
	Name                                                               *string                           `protobuf:"bytes,10,opt,name=name" json:"name,omitempty"`
	TitlePlaceholderGeometry                                           *TSD.GeometryArchive              `protobuf:"bytes,11,opt,name=titlePlaceholderGeometry" json:"titlePlaceholderGeometry,omitempty"`
	TitlePlaceholderShapeStyleIndex                                    *uint32                           `protobuf:"varint,12,opt,name=titlePlaceholderShapeStyleIndex" json:"titlePlaceholderShapeStyleIndex,omitempty"`
	TitlePlaceholderTextStyleIndex                                     *uint32                           `protobuf:"varint,13,opt,name=titlePlaceholderTextStyleIndex" json:"titlePlaceholderTextStyleIndex,omitempty"`
	TitleLayoutProperties                                              *TSWP.ShapeStylePropertiesArchive `protobuf:"bytes,24,opt,name=titleLayoutProperties" json:"titleLayoutProperties,omitempty"`
	BodyPlaceholderGeometry                                            *TSD.GeometryArchive              `protobuf:"bytes,14,opt,name=bodyPlaceholderGeometry" json:"bodyPlaceholderGeometry,omitempty"`
	BodyPlaceholderShapeStyleIndex                                     *uint32                           `protobuf:"varint,15,opt,name=bodyPlaceholderShapeStyleIndex" json:"bodyPlaceholderShapeStyleIndex,omitempty"`
	BodyPlaceholderTextStyleIndex                                      *uint32                           `protobuf:"varint,16,opt,name=bodyPlaceholderTextStyleIndex" json:"bodyPlaceholderTextStyleIndex,omitempty"`
	BodyLayoutProperties                                               *TSWP.ShapeStylePropertiesArchive `protobuf:"bytes,25,opt,name=bodyLayoutProperties" json:"bodyLayoutProperties,omitempty"`
	SlideNumberPlaceholderGeometry                                     *TSD.GeometryArchive              `protobuf:"bytes,21,opt,name=slideNumberPlaceholderGeometry" json:"slideNumberPlaceholderGeometry,omitempty"`
	SlideNumberPlaceholderShapeStyleIndex                              *uint32                           `protobuf:"varint,22,opt,name=slideNumberPlaceholderShapeStyleIndex" json:"slideNumberPlaceholderShapeStyleIndex,omitempty"`
	SlideNumberPlaceholderTextStyleIndex                               *uint32                           `protobuf:"varint,23,opt,name=slideNumberPlaceholderTextStyleIndex" json:"slideNumberPlaceholderTextStyleIndex,omitempty"`
	SlideNumberLayoutProperties                                        *TSWP.ShapeStylePropertiesArchive `protobuf:"bytes,26,opt,name=slideNumberLayoutProperties" json:"slideNumberLayoutProperties,omitempty"`
	ClassicStylesheetRecord                                            *TSP.Reference                    `protobuf:"bytes,29,opt,name=classicStylesheetRecord" json:"classicStylesheetRecord,omitempty"`
	BodyParagraphStyles                                                []*TSP.Reference                  `protobuf:"bytes,31,rep,name=bodyParagraphStyles" json:"bodyParagraphStyles,omitempty"`
	BodyListStyles                                                     []*TSP.Reference                  `protobuf:"bytes,35,rep,name=bodyListStyles" json:"bodyListStyles,omitempty"`
	ThumbnailTextForTitlePlaceholder                                   *string                           `protobuf:"bytes,37,opt,name=thumbnailTextForTitlePlaceholder" json:"thumbnailTextForTitlePlaceholder,omitempty"`
	ThumbnailTextForBodyPlaceholder                                    *string                           `protobuf:"bytes,38,opt,name=thumbnailTextForBodyPlaceholder" json:"thumbnailTextForBodyPlaceholder,omitempty"`
	Master                                                             *TSP.Reference                    `protobuf:"bytes,17,opt,name=master" json:"master,omitempty"`
	StaticGuides                                                       []*TSD.GuideArchive               `protobuf:"bytes,18,rep,name=staticGuides" json:"staticGuides,omitempty"`
	UserDefinedGuideStorage                                            *TSP.Reference                    `protobuf:"bytes,36,opt,name=userDefinedGuideStorage" json:"userDefinedGuideStorage,omitempty"`
	InDocument                                                         *bool                             `protobuf:"varint,19,req,name=inDocument" json:"inDocument,omitempty"`
	Note                                                               *TSP.Reference                    `protobuf:"bytes,27,opt,name=note" json:"note,omitempty"`
	InfoUsingObjectPlaceholderGeometry                                 *TSP.Reference                    `protobuf:"bytes,39,opt,name=info_using_object_placeholder_geometry" json:"info_using_object_placeholder_geometry,omitempty"`
	InfoUsingObjectPlaceholderGeometryMatchesObjectPlaceholderGeometry *bool                             `protobuf:"varint,40,opt,name=info_using_object_placeholder_geometry_matches_object_placeholder_geometry" json:"info_using_object_placeholder_geometry_matches_object_placeholder_geometry,omitempty"`
	DeprecatedObjectPlaceholderVisibleForExport                        *bool                             `protobuf:"varint,34,opt,name=deprecated_objectPlaceholderVisibleForExport" json:"deprecated_objectPlaceholderVisibleForExport,omitempty"`
	XXX_unrecognized                                                   []byte                            `json:"-"`
}

func (m *SlideArchive) Reset()         { *m = SlideArchive{} }
func (m *SlideArchive) String() string { return proto.CompactTextString(m) }
func (*SlideArchive) ProtoMessage()    {}

func (m *SlideArchive) GetStyle() *TSP.Reference {
	if m != nil {
		return m.Style
	}
	return nil
}

func (m *SlideArchive) GetBuilds() []*TSP.Reference {
	if m != nil {
		return m.Builds
	}
	return nil
}

func (m *SlideArchive) GetBuildChunks() []*BuildChunkArchive {
	if m != nil {
		return m.BuildChunks
	}
	return nil
}

func (m *SlideArchive) GetTransition() *TransitionArchive {
	if m != nil {
		return m.Transition
	}
	return nil
}

func (m *SlideArchive) GetTitlePlaceholder() *TSP.Reference {
	if m != nil {
		return m.TitlePlaceholder
	}
	return nil
}

func (m *SlideArchive) GetBodyPlaceholder() *TSP.Reference {
	if m != nil {
		return m.BodyPlaceholder
	}
	return nil
}

func (m *SlideArchive) GetObjectPlaceholder() *TSP.Reference {
	if m != nil {
		return m.ObjectPlaceholder
	}
	return nil
}

func (m *SlideArchive) GetSlideNumberPlaceholder() *TSP.Reference {
	if m != nil {
		return m.SlideNumberPlaceholder
	}
	return nil
}

func (m *SlideArchive) GetDrawables() []*TSP.Reference {
	if m != nil {
		return m.Drawables
	}
	return nil
}

func (m *SlideArchive) GetSageTagToInfoMap() []*SlideArchive_SageTagMapEntry {
	if m != nil {
		return m.SageTagToInfoMap
	}
	return nil
}

func (m *SlideArchive) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *SlideArchive) GetTitlePlaceholderGeometry() *TSD.GeometryArchive {
	if m != nil {
		return m.TitlePlaceholderGeometry
	}
	return nil
}

func (m *SlideArchive) GetTitlePlaceholderShapeStyleIndex() uint32 {
	if m != nil && m.TitlePlaceholderShapeStyleIndex != nil {
		return *m.TitlePlaceholderShapeStyleIndex
	}
	return 0
}

func (m *SlideArchive) GetTitlePlaceholderTextStyleIndex() uint32 {
	if m != nil && m.TitlePlaceholderTextStyleIndex != nil {
		return *m.TitlePlaceholderTextStyleIndex
	}
	return 0
}

func (m *SlideArchive) GetTitleLayoutProperties() *TSWP.ShapeStylePropertiesArchive {
	if m != nil {
		return m.TitleLayoutProperties
	}
	return nil
}

func (m *SlideArchive) GetBodyPlaceholderGeometry() *TSD.GeometryArchive {
	if m != nil {
		return m.BodyPlaceholderGeometry
	}
	return nil
}

func (m *SlideArchive) GetBodyPlaceholderShapeStyleIndex() uint32 {
	if m != nil && m.BodyPlaceholderShapeStyleIndex != nil {
		return *m.BodyPlaceholderShapeStyleIndex
	}
	return 0
}

func (m *SlideArchive) GetBodyPlaceholderTextStyleIndex() uint32 {
	if m != nil && m.BodyPlaceholderTextStyleIndex != nil {
		return *m.BodyPlaceholderTextStyleIndex
	}
	return 0
}

func (m *SlideArchive) GetBodyLayoutProperties() *TSWP.ShapeStylePropertiesArchive {
	if m != nil {
		return m.BodyLayoutProperties
	}
	return nil
}

func (m *SlideArchive) GetSlideNumberPlaceholderGeometry() *TSD.GeometryArchive {
	if m != nil {
		return m.SlideNumberPlaceholderGeometry
	}
	return nil
}

func (m *SlideArchive) GetSlideNumberPlaceholderShapeStyleIndex() uint32 {
	if m != nil && m.SlideNumberPlaceholderShapeStyleIndex != nil {
		return *m.SlideNumberPlaceholderShapeStyleIndex
	}
	return 0
}

func (m *SlideArchive) GetSlideNumberPlaceholderTextStyleIndex() uint32 {
	if m != nil && m.SlideNumberPlaceholderTextStyleIndex != nil {
		return *m.SlideNumberPlaceholderTextStyleIndex
	}
	return 0
}

func (m *SlideArchive) GetSlideNumberLayoutProperties() *TSWP.ShapeStylePropertiesArchive {
	if m != nil {
		return m.SlideNumberLayoutProperties
	}
	return nil
}

func (m *SlideArchive) GetClassicStylesheetRecord() *TSP.Reference {
	if m != nil {
		return m.ClassicStylesheetRecord
	}
	return nil
}

func (m *SlideArchive) GetBodyParagraphStyles() []*TSP.Reference {
	if m != nil {
		return m.BodyParagraphStyles
	}
	return nil
}

func (m *SlideArchive) GetBodyListStyles() []*TSP.Reference {
	if m != nil {
		return m.BodyListStyles
	}
	return nil
}

func (m *SlideArchive) GetThumbnailTextForTitlePlaceholder() string {
	if m != nil && m.ThumbnailTextForTitlePlaceholder != nil {
		return *m.ThumbnailTextForTitlePlaceholder
	}
	return ""
}

func (m *SlideArchive) GetThumbnailTextForBodyPlaceholder() string {
	if m != nil && m.ThumbnailTextForBodyPlaceholder != nil {
		return *m.ThumbnailTextForBodyPlaceholder
	}
	return ""
}

func (m *SlideArchive) GetMaster() *TSP.Reference {
	if m != nil {
		return m.Master
	}
	return nil
}

func (m *SlideArchive) GetStaticGuides() []*TSD.GuideArchive {
	if m != nil {
		return m.StaticGuides
	}
	return nil
}

func (m *SlideArchive) GetUserDefinedGuideStorage() *TSP.Reference {
	if m != nil {
		return m.UserDefinedGuideStorage
	}
	return nil
}

func (m *SlideArchive) GetInDocument() bool {
	if m != nil && m.InDocument != nil {
		return *m.InDocument
	}
	return false
}

func (m *SlideArchive) GetNote() *TSP.Reference {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *SlideArchive) GetInfoUsingObjectPlaceholderGeometry() *TSP.Reference {
	if m != nil {
		return m.InfoUsingObjectPlaceholderGeometry
	}
	return nil
}

func (m *SlideArchive) GetInfoUsingObjectPlaceholderGeometryMatchesObjectPlaceholderGeometry() bool {
	if m != nil && m.InfoUsingObjectPlaceholderGeometryMatchesObjectPlaceholderGeometry != nil {
		return *m.InfoUsingObjectPlaceholderGeometryMatchesObjectPlaceholderGeometry
	}
	return false
}

func (m *SlideArchive) GetDeprecatedObjectPlaceholderVisibleForExport() bool {
	if m != nil && m.DeprecatedObjectPlaceholderVisibleForExport != nil {
		return *m.DeprecatedObjectPlaceholderVisibleForExport
	}
	return false
}

type SlideArchive_SageTagMapEntry struct {
	Tag              *string        `protobuf:"bytes,1,req,name=tag" json:"tag,omitempty"`
	Info             *TSP.Reference `protobuf:"bytes,2,req,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *SlideArchive_SageTagMapEntry) Reset()         { *m = SlideArchive_SageTagMapEntry{} }
func (m *SlideArchive_SageTagMapEntry) String() string { return proto.CompactTextString(m) }
func (*SlideArchive_SageTagMapEntry) ProtoMessage()    {}

func (m *SlideArchive_SageTagMapEntry) GetTag() string {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return ""
}

func (m *SlideArchive_SageTagMapEntry) GetInfo() *TSP.Reference {
	if m != nil {
		return m.Info
	}
	return nil
}

type SlideNodeArchive struct {
	Children                    []*TSP.Reference     `protobuf:"bytes,1,rep,name=children" json:"children,omitempty"`
	Slide                       *TSP.Reference       `protobuf:"bytes,2,opt,name=slide" json:"slide,omitempty"`
	Thumbnails                  []*TSP.DataReference `protobuf:"bytes,16,rep,name=thumbnails" json:"thumbnails,omitempty"`
	ThumbnailSizes              []*TSP.Size          `protobuf:"bytes,10,rep,name=thumbnailSizes" json:"thumbnailSizes,omitempty"`
	ThumbnailsAreDirty          *bool                `protobuf:"varint,14,opt,name=thumbnailsAreDirty" json:"thumbnailsAreDirty,omitempty"`
	IsHidden                    *bool                `protobuf:"varint,4,req,name=isHidden" json:"isHidden,omitempty"`
	IsCollapsed                 *bool                `protobuf:"varint,5,req,name=isCollapsed" json:"isCollapsed,omitempty"`
	IsCollapsedInOutlineView    *bool                `protobuf:"varint,17,opt,name=isCollapsedInOutlineView" json:"isCollapsedInOutlineView,omitempty"`
	HasBodyInOutlineView        *bool                `protobuf:"varint,19,opt,name=hasBodyInOutlineView" json:"hasBodyInOutlineView,omitempty"`
	HasBuilds                   *bool                `protobuf:"varint,6,req,name=hasBuilds" json:"hasBuilds,omitempty"`
	HasTransition               *bool                `protobuf:"varint,7,req,name=hasTransition" json:"hasTransition,omitempty"`
	HasNote                     *bool                `protobuf:"varint,8,opt,name=hasNote" json:"hasNote,omitempty"`
	IsSlideNumberVisible        *bool                `protobuf:"varint,18,opt,name=isSlideNumberVisible,def=0" json:"isSlideNumberVisible,omitempty"`
	UniqueIdentifier            *string              `protobuf:"bytes,11,opt,name=uniqueIdentifier" json:"uniqueIdentifier,omitempty"`
	CopyFromSlideIdentifier     *string              `protobuf:"bytes,12,opt,name=copyFromSlideIdentifier" json:"copyFromSlideIdentifier,omitempty"`
	SlideSpecificHyperlinkCount *uint32              `protobuf:"varint,13,opt,name=slideSpecificHyperlinkCount" json:"slideSpecificHyperlinkCount,omitempty"`
	EventCount                  *uint32              `protobuf:"varint,15,opt,name=eventCount" json:"eventCount,omitempty"`
	DatabaseThumbnail           *TSP.Reference       `protobuf:"bytes,3,opt,name=database_thumbnail" json:"database_thumbnail,omitempty"`
	DatabaseThumbnails          []*TSP.Reference     `protobuf:"bytes,9,rep,name=database_thumbnails" json:"database_thumbnails,omitempty"`
	XXX_unrecognized            []byte               `json:"-"`
}

func (m *SlideNodeArchive) Reset()         { *m = SlideNodeArchive{} }
func (m *SlideNodeArchive) String() string { return proto.CompactTextString(m) }
func (*SlideNodeArchive) ProtoMessage()    {}

const Default_SlideNodeArchive_IsSlideNumberVisible bool = false

func (m *SlideNodeArchive) GetChildren() []*TSP.Reference {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *SlideNodeArchive) GetSlide() *TSP.Reference {
	if m != nil {
		return m.Slide
	}
	return nil
}

func (m *SlideNodeArchive) GetThumbnails() []*TSP.DataReference {
	if m != nil {
		return m.Thumbnails
	}
	return nil
}

func (m *SlideNodeArchive) GetThumbnailSizes() []*TSP.Size {
	if m != nil {
		return m.ThumbnailSizes
	}
	return nil
}

func (m *SlideNodeArchive) GetThumbnailsAreDirty() bool {
	if m != nil && m.ThumbnailsAreDirty != nil {
		return *m.ThumbnailsAreDirty
	}
	return false
}

func (m *SlideNodeArchive) GetIsHidden() bool {
	if m != nil && m.IsHidden != nil {
		return *m.IsHidden
	}
	return false
}

func (m *SlideNodeArchive) GetIsCollapsed() bool {
	if m != nil && m.IsCollapsed != nil {
		return *m.IsCollapsed
	}
	return false
}

func (m *SlideNodeArchive) GetIsCollapsedInOutlineView() bool {
	if m != nil && m.IsCollapsedInOutlineView != nil {
		return *m.IsCollapsedInOutlineView
	}
	return false
}

func (m *SlideNodeArchive) GetHasBodyInOutlineView() bool {
	if m != nil && m.HasBodyInOutlineView != nil {
		return *m.HasBodyInOutlineView
	}
	return false
}

func (m *SlideNodeArchive) GetHasBuilds() bool {
	if m != nil && m.HasBuilds != nil {
		return *m.HasBuilds
	}
	return false
}

func (m *SlideNodeArchive) GetHasTransition() bool {
	if m != nil && m.HasTransition != nil {
		return *m.HasTransition
	}
	return false
}

func (m *SlideNodeArchive) GetHasNote() bool {
	if m != nil && m.HasNote != nil {
		return *m.HasNote
	}
	return false
}

func (m *SlideNodeArchive) GetIsSlideNumberVisible() bool {
	if m != nil && m.IsSlideNumberVisible != nil {
		return *m.IsSlideNumberVisible
	}
	return Default_SlideNodeArchive_IsSlideNumberVisible
}

func (m *SlideNodeArchive) GetUniqueIdentifier() string {
	if m != nil && m.UniqueIdentifier != nil {
		return *m.UniqueIdentifier
	}
	return ""
}

func (m *SlideNodeArchive) GetCopyFromSlideIdentifier() string {
	if m != nil && m.CopyFromSlideIdentifier != nil {
		return *m.CopyFromSlideIdentifier
	}
	return ""
}

func (m *SlideNodeArchive) GetSlideSpecificHyperlinkCount() uint32 {
	if m != nil && m.SlideSpecificHyperlinkCount != nil {
		return *m.SlideSpecificHyperlinkCount
	}
	return 0
}

func (m *SlideNodeArchive) GetEventCount() uint32 {
	if m != nil && m.EventCount != nil {
		return *m.EventCount
	}
	return 0
}

func (m *SlideNodeArchive) GetDatabaseThumbnail() *TSP.Reference {
	if m != nil {
		return m.DatabaseThumbnail
	}
	return nil
}

func (m *SlideNodeArchive) GetDatabaseThumbnails() []*TSP.Reference {
	if m != nil {
		return m.DatabaseThumbnails
	}
	return nil
}

type DesktopUILayoutArchive struct {
	SidebarVisible        *bool                                         `protobuf:"varint,1,opt,name=sidebar_visible" json:"sidebar_visible,omitempty"`
	SidebarViewMode       *DesktopUILayoutArchive_SidebarViewMode       `protobuf:"varint,2,opt,name=sidebar_view_mode,enum=KN.DesktopUILayoutArchive_SidebarViewMode" json:"sidebar_view_mode,omitempty"`
	NotesVisible          *bool                                         `protobuf:"varint,3,opt,name=notes_visible" json:"notes_visible,omitempty"`
	LightTableVisible     *bool                                         `protobuf:"varint,5,opt,name=light_table_visible" json:"light_table_visible,omitempty"`
	InspectorPaneVisible  *bool                                         `protobuf:"varint,6,opt,name=inspector_pane_visible,def=1" json:"inspector_pane_visible,omitempty"`
	InspectorPaneViewMode *DesktopUILayoutArchive_InspectorPaneViewMode `protobuf:"varint,7,opt,name=inspector_pane_view_mode,enum=KN.DesktopUILayoutArchive_InspectorPaneViewMode,def=0" json:"inspector_pane_view_mode,omitempty"`
	XXX_unrecognized      []byte                                        `json:"-"`
}

func (m *DesktopUILayoutArchive) Reset()         { *m = DesktopUILayoutArchive{} }
func (m *DesktopUILayoutArchive) String() string { return proto.CompactTextString(m) }
func (*DesktopUILayoutArchive) ProtoMessage()    {}

const Default_DesktopUILayoutArchive_InspectorPaneVisible bool = true
const Default_DesktopUILayoutArchive_InspectorPaneViewMode DesktopUILayoutArchive_InspectorPaneViewMode = DesktopUILayoutArchive_kInspectorPaneViewModeFormat

func (m *DesktopUILayoutArchive) GetSidebarVisible() bool {
	if m != nil && m.SidebarVisible != nil {
		return *m.SidebarVisible
	}
	return false
}

func (m *DesktopUILayoutArchive) GetSidebarViewMode() DesktopUILayoutArchive_SidebarViewMode {
	if m != nil && m.SidebarViewMode != nil {
		return *m.SidebarViewMode
	}
	return DesktopUILayoutArchive_kSidebarViewModeNavigator
}

func (m *DesktopUILayoutArchive) GetNotesVisible() bool {
	if m != nil && m.NotesVisible != nil {
		return *m.NotesVisible
	}
	return false
}

func (m *DesktopUILayoutArchive) GetLightTableVisible() bool {
	if m != nil && m.LightTableVisible != nil {
		return *m.LightTableVisible
	}
	return false
}

func (m *DesktopUILayoutArchive) GetInspectorPaneVisible() bool {
	if m != nil && m.InspectorPaneVisible != nil {
		return *m.InspectorPaneVisible
	}
	return Default_DesktopUILayoutArchive_InspectorPaneVisible
}

func (m *DesktopUILayoutArchive) GetInspectorPaneViewMode() DesktopUILayoutArchive_InspectorPaneViewMode {
	if m != nil && m.InspectorPaneViewMode != nil {
		return *m.InspectorPaneViewMode
	}
	return Default_DesktopUILayoutArchive_InspectorPaneViewMode
}

type UIStateArchive struct {
	SlideNodeToEdit                   *TSP.Reference        `protobuf:"bytes,1,opt,name=slideNodeToEdit" json:"slideNodeToEdit,omitempty"`
	DeprecatedMasterSlideNodeToApply  *TSP.Reference        `protobuf:"bytes,2,opt,name=deprecated_masterSlideNodeToApply" json:"deprecated_masterSlideNodeToApply,omitempty"`
	DeprecatedSlideThumbnailSize      *TSP.Size             `protobuf:"bytes,3,opt,name=deprecated_slideThumbnailSize" json:"deprecated_slideThumbnailSize,omitempty"`
	CanvasViewScale                   *float32              `protobuf:"fixed32,4,opt,name=canvasViewScale" json:"canvasViewScale,omitempty"`
	CanvasOffset                      *TSP.Point            `protobuf:"bytes,5,opt,name=canvasOffset" json:"canvasOffset,omitempty"`
	SelectedSlideNodes                []*TSP.Reference      `protobuf:"bytes,6,rep,name=selectedSlideNodes" json:"selectedSlideNodes,omitempty"`
	IPhoneCanvasViewScale             *float32              `protobuf:"fixed32,7,opt,name=iPhoneCanvasViewScale" json:"iPhoneCanvasViewScale,omitempty"`
	IPhoneCanvasOffset                *TSP.Point            `protobuf:"bytes,8,opt,name=iPhoneCanvasOffset" json:"iPhoneCanvasOffset,omitempty"`
	IPhone568CanvasViewScale          *float32              `protobuf:"fixed32,9,opt,name=iPhone568CanvasViewScale" json:"iPhone568CanvasViewScale,omitempty"`
	IPhone568CanvasOffset             *TSP.Point            `protobuf:"bytes,10,opt,name=iPhone568CanvasOffset" json:"iPhone568CanvasOffset,omitempty"`
	DesktopUiLayout                   *TSP.Reference        `protobuf:"bytes,11,opt,name=desktop_ui_layout" json:"desktop_ui_layout,omitempty"`
	DesktopSlideViewContentFitsWindow *bool                 `protobuf:"varint,12,opt,name=desktop_slide_view_content_fits_window" json:"desktop_slide_view_content_fits_window,omitempty"`
	DesktopCanvasViewScale            *float32              `protobuf:"fixed32,13,opt,name=desktop_canvas_view_scale" json:"desktop_canvas_view_scale,omitempty"`
	DesktopCanvasOffset               *TSP.Point            `protobuf:"bytes,21,opt,name=desktop_canvas_offset" json:"desktop_canvas_offset,omitempty"`
	LightTableZoomScale               *float32              `protobuf:"fixed32,14,opt,name=light_table_zoom_scale" json:"light_table_zoom_scale,omitempty"`
	ChartUiState                      []*TSCH.ChartUIState `protobuf:"bytes,15,rep,name=chart_ui_state" json:"chart_ui_state,omitempty"`
	ShowSlideGuides                   *bool                 `protobuf:"varint,16,opt,name=show_slide_guides" json:"show_slide_guides,omitempty"`
	ShowMasterGuides                  *bool                 `protobuf:"varint,17,opt,name=show_master_guides" json:"show_master_guides,omitempty"`
	ShowsComments                     *bool                 `protobuf:"varint,18,opt,name=shows_comments" json:"shows_comments,omitempty"`
	CollapsedSlideNodes               []*TSP.Reference      `protobuf:"bytes,19,rep,name=collapsed_slide_nodes" json:"collapsed_slide_nodes,omitempty"`
	ShowsRuler                        *bool                 `protobuf:"varint,20,opt,name=shows_ruler" json:"shows_ruler,omitempty"`
	DesktopNavigatorViewWidth         *float32              `protobuf:"fixed32,22,opt,name=desktop_navigator_view_width" json:"desktop_navigator_view_width,omitempty"`
	DesktopOutlineViewWidth           *float32              `protobuf:"fixed32,23,opt,name=desktop_outline_view_width" json:"desktop_outline_view_width,omitempty"`
	DesktopMainContentSize            *TSP.Size             `protobuf:"bytes,24,opt,name=desktop_main_content_size" json:"desktop_main_content_size,omitempty"`
	XXX_unrecognized                  []byte                `json:"-"`
}

func (m *UIStateArchive) Reset()         { *m = UIStateArchive{} }
func (m *UIStateArchive) String() string { return proto.CompactTextString(m) }
func (*UIStateArchive) ProtoMessage()    {}

func (m *UIStateArchive) GetSlideNodeToEdit() *TSP.Reference {
	if m != nil {
		return m.SlideNodeToEdit
	}
	return nil
}

func (m *UIStateArchive) GetDeprecatedMasterSlideNodeToApply() *TSP.Reference {
	if m != nil {
		return m.DeprecatedMasterSlideNodeToApply
	}
	return nil
}

func (m *UIStateArchive) GetDeprecatedSlideThumbnailSize() *TSP.Size {
	if m != nil {
		return m.DeprecatedSlideThumbnailSize
	}
	return nil
}

func (m *UIStateArchive) GetCanvasViewScale() float32 {
	if m != nil && m.CanvasViewScale != nil {
		return *m.CanvasViewScale
	}
	return 0
}

func (m *UIStateArchive) GetCanvasOffset() *TSP.Point {
	if m != nil {
		return m.CanvasOffset
	}
	return nil
}

func (m *UIStateArchive) GetSelectedSlideNodes() []*TSP.Reference {
	if m != nil {
		return m.SelectedSlideNodes
	}
	return nil
}

func (m *UIStateArchive) GetIPhoneCanvasViewScale() float32 {
	if m != nil && m.IPhoneCanvasViewScale != nil {
		return *m.IPhoneCanvasViewScale
	}
	return 0
}

func (m *UIStateArchive) GetIPhoneCanvasOffset() *TSP.Point {
	if m != nil {
		return m.IPhoneCanvasOffset
	}
	return nil
}

func (m *UIStateArchive) GetIPhone568CanvasViewScale() float32 {
	if m != nil && m.IPhone568CanvasViewScale != nil {
		return *m.IPhone568CanvasViewScale
	}
	return 0
}

func (m *UIStateArchive) GetIPhone568CanvasOffset() *TSP.Point {
	if m != nil {
		return m.IPhone568CanvasOffset
	}
	return nil
}

func (m *UIStateArchive) GetDesktopUiLayout() *TSP.Reference {
	if m != nil {
		return m.DesktopUiLayout
	}
	return nil
}

func (m *UIStateArchive) GetDesktopSlideViewContentFitsWindow() bool {
	if m != nil && m.DesktopSlideViewContentFitsWindow != nil {
		return *m.DesktopSlideViewContentFitsWindow
	}
	return false
}

func (m *UIStateArchive) GetDesktopCanvasViewScale() float32 {
	if m != nil && m.DesktopCanvasViewScale != nil {
		return *m.DesktopCanvasViewScale
	}
	return 0
}

func (m *UIStateArchive) GetDesktopCanvasOffset() *TSP.Point {
	if m != nil {
		return m.DesktopCanvasOffset
	}
	return nil
}

func (m *UIStateArchive) GetLightTableZoomScale() float32 {
	if m != nil && m.LightTableZoomScale != nil {
		return *m.LightTableZoomScale
	}
	return 0
}

func (m *UIStateArchive) GetChartUiState() []*TSCH.ChartUIState {
	if m != nil {
		return m.ChartUiState
	}
	return nil
}

func (m *UIStateArchive) GetShowSlideGuides() bool {
	if m != nil && m.ShowSlideGuides != nil {
		return *m.ShowSlideGuides
	}
	return false
}

func (m *UIStateArchive) GetShowMasterGuides() bool {
	if m != nil && m.ShowMasterGuides != nil {
		return *m.ShowMasterGuides
	}
	return false
}

func (m *UIStateArchive) GetShowsComments() bool {
	if m != nil && m.ShowsComments != nil {
		return *m.ShowsComments
	}
	return false
}

func (m *UIStateArchive) GetCollapsedSlideNodes() []*TSP.Reference {
	if m != nil {
		return m.CollapsedSlideNodes
	}
	return nil
}

func (m *UIStateArchive) GetShowsRuler() bool {
	if m != nil && m.ShowsRuler != nil {
		return *m.ShowsRuler
	}
	return false
}

func (m *UIStateArchive) GetDesktopNavigatorViewWidth() float32 {
	if m != nil && m.DesktopNavigatorViewWidth != nil {
		return *m.DesktopNavigatorViewWidth
	}
	return 0
}

func (m *UIStateArchive) GetDesktopOutlineViewWidth() float32 {
	if m != nil && m.DesktopOutlineViewWidth != nil {
		return *m.DesktopOutlineViewWidth
	}
	return 0
}

func (m *UIStateArchive) GetDesktopMainContentSize() *TSP.Size {
	if m != nil {
		return m.DesktopMainContentSize
	}
	return nil
}

type CanvasSelectionArchive struct {
	Infos                      []*TSP.Reference `protobuf:"bytes,1,rep,name=infos" json:"infos,omitempty"`
	ActionGhostIndexes         []*TSP.IndexSet  `protobuf:"bytes,3,rep,name=action_ghost_indexes" json:"action_ghost_indexes,omitempty"`
	DatabaseActionGhostIndexes []uint32         `protobuf:"varint,2,rep,name=database_action_ghost_indexes" json:"database_action_ghost_indexes,omitempty"`
	XXX_unrecognized           []byte           `json:"-"`
}

func (m *CanvasSelectionArchive) Reset()         { *m = CanvasSelectionArchive{} }
func (m *CanvasSelectionArchive) String() string { return proto.CompactTextString(m) }
func (*CanvasSelectionArchive) ProtoMessage()    {}

func (m *CanvasSelectionArchive) GetInfos() []*TSP.Reference {
	if m != nil {
		return m.Infos
	}
	return nil
}

func (m *CanvasSelectionArchive) GetActionGhostIndexes() []*TSP.IndexSet {
	if m != nil {
		return m.ActionGhostIndexes
	}
	return nil
}

func (m *CanvasSelectionArchive) GetDatabaseActionGhostIndexes() []uint32 {
	if m != nil {
		return m.DatabaseActionGhostIndexes
	}
	return nil
}

type ThemeArchive struct {
	Super                  *TSS.ThemeArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Masters                []*TSP.Reference  `protobuf:"bytes,2,rep,name=masters" json:"masters,omitempty"`
	Uuid                   *string           `protobuf:"bytes,3,opt,name=uuid" json:"uuid,omitempty"`
	ClassicThemeRecords    []*TSP.Reference  `protobuf:"bytes,4,rep,name=classicThemeRecords" json:"classicThemeRecords,omitempty"`
	DefaultMasterSlideNode *TSP.Reference    `protobuf:"bytes,5,opt,name=defaultMasterSlideNode" json:"defaultMasterSlideNode,omitempty"`
	XXX_unrecognized       []byte            `json:"-"`
}

func (m *ThemeArchive) Reset()         { *m = ThemeArchive{} }
func (m *ThemeArchive) String() string { return proto.CompactTextString(m) }
func (*ThemeArchive) ProtoMessage()    {}

func (m *ThemeArchive) GetSuper() *TSS.ThemeArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *ThemeArchive) GetMasters() []*TSP.Reference {
	if m != nil {
		return m.Masters
	}
	return nil
}

func (m *ThemeArchive) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *ThemeArchive) GetClassicThemeRecords() []*TSP.Reference {
	if m != nil {
		return m.ClassicThemeRecords
	}
	return nil
}

func (m *ThemeArchive) GetDefaultMasterSlideNode() *TSP.Reference {
	if m != nil {
		return m.DefaultMasterSlideNode
	}
	return nil
}

type SlideTreeArchive struct {
	RootSlideNode    *TSP.Reference `protobuf:"bytes,1,opt,name=rootSlideNode" json:"rootSlideNode,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *SlideTreeArchive) Reset()         { *m = SlideTreeArchive{} }
func (m *SlideTreeArchive) String() string { return proto.CompactTextString(m) }
func (*SlideTreeArchive) ProtoMessage()    {}

func (m *SlideTreeArchive) GetRootSlideNode() *TSP.Reference {
	if m != nil {
		return m.RootSlideNode
	}
	return nil
}

type ShowArchive struct {
	UiState                    *TSP.Reference          `protobuf:"bytes,1,opt,name=uiState" json:"uiState,omitempty"`
	Theme                      *TSP.Reference          `protobuf:"bytes,2,req,name=theme" json:"theme,omitempty"`
	SlideTree                  *SlideTreeArchive       `protobuf:"bytes,3,req,name=slideTree" json:"slideTree,omitempty"`
	Size                       *TSP.Size               `protobuf:"bytes,4,req,name=size" json:"size,omitempty"`
	Stylesheet                 *TSP.Reference          `protobuf:"bytes,5,req,name=stylesheet" json:"stylesheet,omitempty"`
	SlideNumbersVisible        *bool                   `protobuf:"varint,6,opt,name=slideNumbersVisible" json:"slideNumbersVisible,omitempty"`
	Recording                  *TSP.Reference          `protobuf:"bytes,7,opt,name=recording" json:"recording,omitempty"`
	LoopPresentation           *bool                   `protobuf:"varint,8,opt,name=loop_presentation" json:"loop_presentation,omitempty"`
	Mode                       *ShowArchive_KNShowMode `protobuf:"varint,9,opt,name=mode,enum=KN.ShowArchive_KNShowMode,def=0" json:"mode,omitempty"`
	AutoplayTransitionDelay    *float64                `protobuf:"fixed64,10,opt,name=autoplay_transition_delay,def=5" json:"autoplay_transition_delay,omitempty"`
	AutoplayBuildDelay         *float64                `protobuf:"fixed64,11,opt,name=autoplay_build_delay,def=2" json:"autoplay_build_delay,omitempty"`
	IdleTimerActive            *bool                   `protobuf:"varint,15,opt,name=idle_timer_active" json:"idle_timer_active,omitempty"`
	IdleTimerDelay             *float64                `protobuf:"fixed64,16,opt,name=idle_timer_delay,def=900" json:"idle_timer_delay,omitempty"`
	Soundtrack                 *TSP.Reference          `protobuf:"bytes,17,opt,name=soundtrack" json:"soundtrack,omitempty"`
	AutomaticallyPlaysUponOpen *bool                   `protobuf:"varint,18,opt,name=automatically_plays_upon_open" json:"automatically_plays_upon_open,omitempty"`
	XXX_unrecognized           []byte                  `json:"-"`
}

func (m *ShowArchive) Reset()         { *m = ShowArchive{} }
func (m *ShowArchive) String() string { return proto.CompactTextString(m) }
func (*ShowArchive) ProtoMessage()    {}

const Default_ShowArchive_Mode ShowArchive_KNShowMode = ShowArchive_kKNShowModeNormal
const Default_ShowArchive_AutoplayTransitionDelay float64 = 5
const Default_ShowArchive_AutoplayBuildDelay float64 = 2
const Default_ShowArchive_IdleTimerDelay float64 = 900

func (m *ShowArchive) GetUiState() *TSP.Reference {
	if m != nil {
		return m.UiState
	}
	return nil
}

func (m *ShowArchive) GetTheme() *TSP.Reference {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *ShowArchive) GetSlideTree() *SlideTreeArchive {
	if m != nil {
		return m.SlideTree
	}
	return nil
}

func (m *ShowArchive) GetSize() *TSP.Size {
	if m != nil {
		return m.Size
	}
	return nil
}

func (m *ShowArchive) GetStylesheet() *TSP.Reference {
	if m != nil {
		return m.Stylesheet
	}
	return nil
}

func (m *ShowArchive) GetSlideNumbersVisible() bool {
	if m != nil && m.SlideNumbersVisible != nil {
		return *m.SlideNumbersVisible
	}
	return false
}

func (m *ShowArchive) GetRecording() *TSP.Reference {
	if m != nil {
		return m.Recording
	}
	return nil
}

func (m *ShowArchive) GetLoopPresentation() bool {
	if m != nil && m.LoopPresentation != nil {
		return *m.LoopPresentation
	}
	return false
}

func (m *ShowArchive) GetMode() ShowArchive_KNShowMode {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return Default_ShowArchive_Mode
}

func (m *ShowArchive) GetAutoplayTransitionDelay() float64 {
	if m != nil && m.AutoplayTransitionDelay != nil {
		return *m.AutoplayTransitionDelay
	}
	return Default_ShowArchive_AutoplayTransitionDelay
}

func (m *ShowArchive) GetAutoplayBuildDelay() float64 {
	if m != nil && m.AutoplayBuildDelay != nil {
		return *m.AutoplayBuildDelay
	}
	return Default_ShowArchive_AutoplayBuildDelay
}

func (m *ShowArchive) GetIdleTimerActive() bool {
	if m != nil && m.IdleTimerActive != nil {
		return *m.IdleTimerActive
	}
	return false
}

func (m *ShowArchive) GetIdleTimerDelay() float64 {
	if m != nil && m.IdleTimerDelay != nil {
		return *m.IdleTimerDelay
	}
	return Default_ShowArchive_IdleTimerDelay
}

func (m *ShowArchive) GetSoundtrack() *TSP.Reference {
	if m != nil {
		return m.Soundtrack
	}
	return nil
}

func (m *ShowArchive) GetAutomaticallyPlaysUponOpen() bool {
	if m != nil && m.AutomaticallyPlaysUponOpen != nil {
		return *m.AutomaticallyPlaysUponOpen
	}
	return false
}

type DocumentArchive struct {
	Super                  *TSA.DocumentArchive `protobuf:"bytes,3,req,name=super" json:"super,omitempty"`
	Show                   *TSP.Reference       `protobuf:"bytes,2,req,name=show" json:"show,omitempty"`
	TablesCustomFormatList *TSP.Reference       `protobuf:"bytes,4,opt,name=tables_custom_format_list" json:"tables_custom_format_list,omitempty"`
	XXX_unrecognized       []byte               `json:"-"`
}

func (m *DocumentArchive) Reset()         { *m = DocumentArchive{} }
func (m *DocumentArchive) String() string { return proto.CompactTextString(m) }
func (*DocumentArchive) ProtoMessage()    {}

func (m *DocumentArchive) GetSuper() *TSA.DocumentArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *DocumentArchive) GetShow() *TSP.Reference {
	if m != nil {
		return m.Show
	}
	return nil
}

func (m *DocumentArchive) GetTablesCustomFormatList() *TSP.Reference {
	if m != nil {
		return m.TablesCustomFormatList
	}
	return nil
}

type SlideStylePropertiesArchive struct {
	Fill                             *TSD.FillArchive             `protobuf:"bytes,1,opt,name=fill" json:"fill,omitempty"`
	Transition                       *TransitionAttributesArchive `protobuf:"bytes,2,opt,name=transition" json:"transition,omitempty"`
	TransitionNull                   *bool                        `protobuf:"varint,3,opt,name=transition_null" json:"transition_null,omitempty"`
	TitlePlaceholderVisibility       *bool                        `protobuf:"varint,4,opt,name=titlePlaceholderVisibility" json:"titlePlaceholderVisibility,omitempty"`
	BodyPlaceholderVisibility        *bool                        `protobuf:"varint,5,opt,name=bodyPlaceholderVisibility" json:"bodyPlaceholderVisibility,omitempty"`
	ObjectPlaceholderVisibility      *bool                        `protobuf:"varint,7,opt,name=objectPlaceholderVisibility" json:"objectPlaceholderVisibility,omitempty"`
	SlideNumberPlaceholderVisibility *bool                        `protobuf:"varint,6,opt,name=slideNumberPlaceholderVisibility" json:"slideNumberPlaceholderVisibility,omitempty"`
	XXX_unrecognized                 []byte                       `json:"-"`
}

func (m *SlideStylePropertiesArchive) Reset()         { *m = SlideStylePropertiesArchive{} }
func (m *SlideStylePropertiesArchive) String() string { return proto.CompactTextString(m) }
func (*SlideStylePropertiesArchive) ProtoMessage()    {}

func (m *SlideStylePropertiesArchive) GetFill() *TSD.FillArchive {
	if m != nil {
		return m.Fill
	}
	return nil
}

func (m *SlideStylePropertiesArchive) GetTransition() *TransitionAttributesArchive {
	if m != nil {
		return m.Transition
	}
	return nil
}

func (m *SlideStylePropertiesArchive) GetTransitionNull() bool {
	if m != nil && m.TransitionNull != nil {
		return *m.TransitionNull
	}
	return false
}

func (m *SlideStylePropertiesArchive) GetTitlePlaceholderVisibility() bool {
	if m != nil && m.TitlePlaceholderVisibility != nil {
		return *m.TitlePlaceholderVisibility
	}
	return false
}

func (m *SlideStylePropertiesArchive) GetBodyPlaceholderVisibility() bool {
	if m != nil && m.BodyPlaceholderVisibility != nil {
		return *m.BodyPlaceholderVisibility
	}
	return false
}

func (m *SlideStylePropertiesArchive) GetObjectPlaceholderVisibility() bool {
	if m != nil && m.ObjectPlaceholderVisibility != nil {
		return *m.ObjectPlaceholderVisibility
	}
	return false
}

func (m *SlideStylePropertiesArchive) GetSlideNumberPlaceholderVisibility() bool {
	if m != nil && m.SlideNumberPlaceholderVisibility != nil {
		return *m.SlideNumberPlaceholderVisibility
	}
	return false
}

type SlideStyleArchive struct {
	Super            *TSS.StyleArchive            `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	OverrideCount    *uint32                      `protobuf:"varint,10,opt,name=override_count,def=0" json:"override_count,omitempty"`
	SlideProperties  *SlideStylePropertiesArchive `protobuf:"bytes,11,opt,name=slide_properties" json:"slide_properties,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *SlideStyleArchive) Reset()         { *m = SlideStyleArchive{} }
func (m *SlideStyleArchive) String() string { return proto.CompactTextString(m) }
func (*SlideStyleArchive) ProtoMessage()    {}

const Default_SlideStyleArchive_OverrideCount uint32 = 0

func (m *SlideStyleArchive) GetSuper() *TSS.StyleArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *SlideStyleArchive) GetOverrideCount() uint32 {
	if m != nil && m.OverrideCount != nil {
		return *m.OverrideCount
	}
	return Default_SlideStyleArchive_OverrideCount
}

func (m *SlideStyleArchive) GetSlideProperties() *SlideStylePropertiesArchive {
	if m != nil {
		return m.SlideProperties
	}
	return nil
}

type PasteboardNativeStorageArchive struct {
	Drawables        []*TSP.Reference     `protobuf:"bytes,1,rep,name=drawables" json:"drawables,omitempty"`
	Builds           []*TSP.Reference     `protobuf:"bytes,2,rep,name=builds" json:"builds,omitempty"`
	BuildChunks      []*BuildChunkArchive `protobuf:"bytes,3,rep,name=buildChunks" json:"buildChunks,omitempty"`
	SlideNodes       []*TSP.Reference     `protobuf:"bytes,4,rep,name=slideNodes" json:"slideNodes,omitempty"`
	OriginalShowSize *TSP.Size            `protobuf:"bytes,5,opt,name=originalShowSize" json:"originalShowSize,omitempty"`
	TitleRanges      []*TSP.Range         `protobuf:"bytes,6,rep,name=titleRanges" json:"titleRanges,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *PasteboardNativeStorageArchive) Reset()         { *m = PasteboardNativeStorageArchive{} }
func (m *PasteboardNativeStorageArchive) String() string { return proto.CompactTextString(m) }
func (*PasteboardNativeStorageArchive) ProtoMessage()    {}

func (m *PasteboardNativeStorageArchive) GetDrawables() []*TSP.Reference {
	if m != nil {
		return m.Drawables
	}
	return nil
}

func (m *PasteboardNativeStorageArchive) GetBuilds() []*TSP.Reference {
	if m != nil {
		return m.Builds
	}
	return nil
}

func (m *PasteboardNativeStorageArchive) GetBuildChunks() []*BuildChunkArchive {
	if m != nil {
		return m.BuildChunks
	}
	return nil
}

func (m *PasteboardNativeStorageArchive) GetSlideNodes() []*TSP.Reference {
	if m != nil {
		return m.SlideNodes
	}
	return nil
}

func (m *PasteboardNativeStorageArchive) GetOriginalShowSize() *TSP.Size {
	if m != nil {
		return m.OriginalShowSize
	}
	return nil
}

func (m *PasteboardNativeStorageArchive) GetTitleRanges() []*TSP.Range {
	if m != nil {
		return m.TitleRanges
	}
	return nil
}

type MasterChangeBlobArchive struct {
	Slide             *TSP.Reference   `protobuf:"bytes,1,opt,name=slide" json:"slide,omitempty"`
	Master            *TSP.Reference   `protobuf:"bytes,2,opt,name=master" json:"master,omitempty"`
	SlideStyle        *TSP.Reference   `protobuf:"bytes,3,opt,name=slide_style" json:"slide_style,omitempty"`
	TitlePlaceholder  *TSP.Reference   `protobuf:"bytes,4,opt,name=title_placeholder" json:"title_placeholder,omitempty"`
	BodyPlaceholder   *TSP.Reference   `protobuf:"bytes,5,opt,name=body_placeholder" json:"body_placeholder,omitempty"`
	ObjectPlaceholder *TSP.Reference   `protobuf:"bytes,7,opt,name=object_placeholder" json:"object_placeholder,omitempty"`
	Drawables         []*TSP.Reference `protobuf:"bytes,6,rep,name=drawables" json:"drawables,omitempty"`
	XXX_unrecognized  []byte           `json:"-"`
}

func (m *MasterChangeBlobArchive) Reset()         { *m = MasterChangeBlobArchive{} }
func (m *MasterChangeBlobArchive) String() string { return proto.CompactTextString(m) }
func (*MasterChangeBlobArchive) ProtoMessage()    {}

func (m *MasterChangeBlobArchive) GetSlide() *TSP.Reference {
	if m != nil {
		return m.Slide
	}
	return nil
}

func (m *MasterChangeBlobArchive) GetMaster() *TSP.Reference {
	if m != nil {
		return m.Master
	}
	return nil
}

func (m *MasterChangeBlobArchive) GetSlideStyle() *TSP.Reference {
	if m != nil {
		return m.SlideStyle
	}
	return nil
}

func (m *MasterChangeBlobArchive) GetTitlePlaceholder() *TSP.Reference {
	if m != nil {
		return m.TitlePlaceholder
	}
	return nil
}

func (m *MasterChangeBlobArchive) GetBodyPlaceholder() *TSP.Reference {
	if m != nil {
		return m.BodyPlaceholder
	}
	return nil
}

func (m *MasterChangeBlobArchive) GetObjectPlaceholder() *TSP.Reference {
	if m != nil {
		return m.ObjectPlaceholder
	}
	return nil
}

func (m *MasterChangeBlobArchive) GetDrawables() []*TSP.Reference {
	if m != nil {
		return m.Drawables
	}
	return nil
}

type RecordingArchive struct {
	EventTracks      []*TSP.Reference                     `protobuf:"bytes,1,rep,name=event_tracks" json:"event_tracks,omitempty"`
	MovieTrack       *TSP.Reference                       `protobuf:"bytes,2,opt,name=movie_track" json:"movie_track,omitempty"`
	Duration         *float64                             `protobuf:"fixed64,3,opt,name=duration" json:"duration,omitempty"`
	SyncState        *RecordingArchive_RecordingSyncState `protobuf:"varint,4,opt,name=sync_state,enum=KN.RecordingArchive_RecordingSyncState,def=0" json:"sync_state,omitempty"`
	ModificationDate *TSP.Date                            `protobuf:"bytes,5,opt,name=modification_date" json:"modification_date,omitempty"`
	XXX_unrecognized []byte                               `json:"-"`
}

func (m *RecordingArchive) Reset()         { *m = RecordingArchive{} }
func (m *RecordingArchive) String() string { return proto.CompactTextString(m) }
func (*RecordingArchive) ProtoMessage()    {}

const Default_RecordingArchive_SyncState RecordingArchive_RecordingSyncState = RecordingArchive_kRecordingSyncStateInSyncWithShow

func (m *RecordingArchive) GetEventTracks() []*TSP.Reference {
	if m != nil {
		return m.EventTracks
	}
	return nil
}

func (m *RecordingArchive) GetMovieTrack() *TSP.Reference {
	if m != nil {
		return m.MovieTrack
	}
	return nil
}

func (m *RecordingArchive) GetDuration() float64 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *RecordingArchive) GetSyncState() RecordingArchive_RecordingSyncState {
	if m != nil && m.SyncState != nil {
		return *m.SyncState
	}
	return Default_RecordingArchive_SyncState
}

func (m *RecordingArchive) GetModificationDate() *TSP.Date {
	if m != nil {
		return m.ModificationDate
	}
	return nil
}

type RecordingEventTrackArchive struct {
	Type             *string                  `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Events           []*RecordingEventArchive `protobuf:"bytes,2,rep,name=events" json:"events,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *RecordingEventTrackArchive) Reset()         { *m = RecordingEventTrackArchive{} }
func (m *RecordingEventTrackArchive) String() string { return proto.CompactTextString(m) }
func (*RecordingEventTrackArchive) ProtoMessage()    {}

func (m *RecordingEventTrackArchive) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *RecordingEventTrackArchive) GetEvents() []*RecordingEventArchive {
	if m != nil {
		return m.Events
	}
	return nil
}

type RecordingEventArchive struct {
	StartTime              *float64                         `protobuf:"fixed64,1,opt,name=start_time,def=-1" json:"start_time,omitempty"`
	NavigationEventArchive *RecordingNavigationEventArchive `protobuf:"bytes,1000,opt,name=navigation_event_archive" json:"navigation_event_archive,omitempty"`
	LaserEventArchive      *RecordingLaserEventArchive      `protobuf:"bytes,1001,opt,name=laser_event_archive" json:"laser_event_archive,omitempty"`
	PauseEventArchive      *RecordingPauseEventArchive      `protobuf:"bytes,1002,opt,name=pause_event_archive" json:"pause_event_archive,omitempty"`
	MovieEventArchive      *RecordingMovieEventArchive      `protobuf:"bytes,1003,opt,name=movie_event_archive" json:"movie_event_archive,omitempty"`
	XXX_unrecognized       []byte                           `json:"-"`
}

func (m *RecordingEventArchive) Reset()         { *m = RecordingEventArchive{} }
func (m *RecordingEventArchive) String() string { return proto.CompactTextString(m) }
func (*RecordingEventArchive) ProtoMessage()    {}

const Default_RecordingEventArchive_StartTime float64 = -1

func (m *RecordingEventArchive) GetStartTime() float64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return Default_RecordingEventArchive_StartTime
}

func (m *RecordingEventArchive) GetNavigationEventArchive() *RecordingNavigationEventArchive {
	if m != nil {
		return m.NavigationEventArchive
	}
	return nil
}

func (m *RecordingEventArchive) GetLaserEventArchive() *RecordingLaserEventArchive {
	if m != nil {
		return m.LaserEventArchive
	}
	return nil
}

func (m *RecordingEventArchive) GetPauseEventArchive() *RecordingPauseEventArchive {
	if m != nil {
		return m.PauseEventArchive
	}
	return nil
}

func (m *RecordingEventArchive) GetMovieEventArchive() *RecordingMovieEventArchive {
	if m != nil {
		return m.MovieEventArchive
	}
	return nil
}

type RecordingNavigationEventArchive struct {
	TargetSlideNodeReference *TSP.Reference                                                          `protobuf:"bytes,1,opt,name=target_slide_node_reference" json:"target_slide_node_reference,omitempty"`
	TargetEventIndex         *uint32                                                                 `protobuf:"varint,2,opt,name=target_event_index" json:"target_event_index,omitempty"`
	AnimationPhase           *RecordingNavigationEventArchive_RecordingNavigationEventAnimationPhase `protobuf:"varint,3,opt,name=animation_phase,enum=KN.RecordingNavigationEventArchive_RecordingNavigationEventAnimationPhase,def=0" json:"animation_phase,omitempty"`
	XXX_unrecognized         []byte                                                                  `json:"-"`
}

func (m *RecordingNavigationEventArchive) Reset()         { *m = RecordingNavigationEventArchive{} }
func (m *RecordingNavigationEventArchive) String() string { return proto.CompactTextString(m) }
func (*RecordingNavigationEventArchive) ProtoMessage()    {}

const Default_RecordingNavigationEventArchive_AnimationPhase RecordingNavigationEventArchive_RecordingNavigationEventAnimationPhase = RecordingNavigationEventArchive_kRecordingNavigationEventAnimationNone

func (m *RecordingNavigationEventArchive) GetTargetSlideNodeReference() *TSP.Reference {
	if m != nil {
		return m.TargetSlideNodeReference
	}
	return nil
}

func (m *RecordingNavigationEventArchive) GetTargetEventIndex() uint32 {
	if m != nil && m.TargetEventIndex != nil {
		return *m.TargetEventIndex
	}
	return 0
}

func (m *RecordingNavigationEventArchive) GetAnimationPhase() RecordingNavigationEventArchive_RecordingNavigationEventAnimationPhase {
	if m != nil && m.AnimationPhase != nil {
		return *m.AnimationPhase
	}
	return Default_RecordingNavigationEventArchive_AnimationPhase
}

type RecordingLaserEventArchive struct {
	UnscaledLocation *TSP.Point `protobuf:"bytes,1,opt,name=unscaled_location" json:"unscaled_location,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *RecordingLaserEventArchive) Reset()         { *m = RecordingLaserEventArchive{} }
func (m *RecordingLaserEventArchive) String() string { return proto.CompactTextString(m) }
func (*RecordingLaserEventArchive) ProtoMessage()    {}

func (m *RecordingLaserEventArchive) GetUnscaledLocation() *TSP.Point {
	if m != nil {
		return m.UnscaledLocation
	}
	return nil
}

type RecordingPauseEventArchive struct {
	PauseEventType   *RecordingPauseEventArchive_RecordingPauseEventType `protobuf:"varint,1,opt,name=pause_event_type,enum=KN.RecordingPauseEventArchive_RecordingPauseEventType,def=0" json:"pause_event_type,omitempty"`
	XXX_unrecognized []byte                                              `json:"-"`
}

func (m *RecordingPauseEventArchive) Reset()         { *m = RecordingPauseEventArchive{} }
func (m *RecordingPauseEventArchive) String() string { return proto.CompactTextString(m) }
func (*RecordingPauseEventArchive) ProtoMessage()    {}

const Default_RecordingPauseEventArchive_PauseEventType RecordingPauseEventArchive_RecordingPauseEventType = RecordingPauseEventArchive_kRecordingPauseEventTypeResume

func (m *RecordingPauseEventArchive) GetPauseEventType() RecordingPauseEventArchive_RecordingPauseEventType {
	if m != nil && m.PauseEventType != nil {
		return *m.PauseEventType
	}
	return Default_RecordingPauseEventArchive_PauseEventType
}

type RecordingMovieEventArchive struct {
	MovieInfoReference *TSP.Reference                                      `protobuf:"bytes,1,opt,name=movie_info_reference" json:"movie_info_reference,omitempty"`
	MovieEventType     *RecordingMovieEventArchive_RecordingMovieEventType `protobuf:"varint,2,opt,name=movie_event_type,enum=KN.RecordingMovieEventArchive_RecordingMovieEventType,def=1" json:"movie_event_type,omitempty"`
	MovieEventValue    *float64                                            `protobuf:"fixed64,3,opt,name=movie_event_value" json:"movie_event_value,omitempty"`
	XXX_unrecognized   []byte                                              `json:"-"`
}

func (m *RecordingMovieEventArchive) Reset()         { *m = RecordingMovieEventArchive{} }
func (m *RecordingMovieEventArchive) String() string { return proto.CompactTextString(m) }
func (*RecordingMovieEventArchive) ProtoMessage()    {}

const Default_RecordingMovieEventArchive_MovieEventType RecordingMovieEventArchive_RecordingMovieEventType = RecordingMovieEventArchive_kRecordingMovieEventSeek

func (m *RecordingMovieEventArchive) GetMovieInfoReference() *TSP.Reference {
	if m != nil {
		return m.MovieInfoReference
	}
	return nil
}

func (m *RecordingMovieEventArchive) GetMovieEventType() RecordingMovieEventArchive_RecordingMovieEventType {
	if m != nil && m.MovieEventType != nil {
		return *m.MovieEventType
	}
	return Default_RecordingMovieEventArchive_MovieEventType
}

func (m *RecordingMovieEventArchive) GetMovieEventValue() float64 {
	if m != nil && m.MovieEventValue != nil {
		return *m.MovieEventValue
	}
	return 0
}

type RecordingMovieTrackArchive struct {
	MovieSegments    []*MovieSegmentArchive `protobuf:"bytes,1,rep,name=movie_segments" json:"movie_segments,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *RecordingMovieTrackArchive) Reset()         { *m = RecordingMovieTrackArchive{} }
func (m *RecordingMovieTrackArchive) String() string { return proto.CompactTextString(m) }
func (*RecordingMovieTrackArchive) ProtoMessage()    {}

func (m *RecordingMovieTrackArchive) GetMovieSegments() []*MovieSegmentArchive {
	if m != nil {
		return m.MovieSegments
	}
	return nil
}

type MovieSegmentArchive struct {
	MovieData         *TSP.DataReference `protobuf:"bytes,3,opt,name=movie_data" json:"movie_data,omitempty"`
	StartTime         *float64           `protobuf:"fixed64,2,opt,name=start_time,def=-1" json:"start_time,omitempty"`
	DatabaseMovieData *TSP.Reference     `protobuf:"bytes,1,opt,name=database_movie_data" json:"database_movie_data,omitempty"`
	XXX_unrecognized  []byte             `json:"-"`
}

func (m *MovieSegmentArchive) Reset()         { *m = MovieSegmentArchive{} }
func (m *MovieSegmentArchive) String() string { return proto.CompactTextString(m) }
func (*MovieSegmentArchive) ProtoMessage()    {}

const Default_MovieSegmentArchive_StartTime float64 = -1

func (m *MovieSegmentArchive) GetMovieData() *TSP.DataReference {
	if m != nil {
		return m.MovieData
	}
	return nil
}

func (m *MovieSegmentArchive) GetStartTime() float64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return Default_MovieSegmentArchive_StartTime
}

func (m *MovieSegmentArchive) GetDatabaseMovieData() *TSP.Reference {
	if m != nil {
		return m.DatabaseMovieData
	}
	return nil
}

type Soundtrack struct {
	Volume           *float64                   `protobuf:"fixed64,1,opt,name=volume" json:"volume,omitempty"`
	Mode             *Soundtrack_SoundtrackMode `protobuf:"varint,2,opt,name=mode,enum=KN.Soundtrack_SoundtrackMode,def=0" json:"mode,omitempty"`
	MovieMedia       []*TSP.DataReference       `protobuf:"bytes,3,rep,name=movie_media" json:"movie_media,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *Soundtrack) Reset()         { *m = Soundtrack{} }
func (m *Soundtrack) String() string { return proto.CompactTextString(m) }
func (*Soundtrack) ProtoMessage()    {}

const Default_Soundtrack_Mode Soundtrack_SoundtrackMode = Soundtrack_kKNSoundtrackModePlayOnce

func (m *Soundtrack) GetVolume() float64 {
	if m != nil && m.Volume != nil {
		return *m.Volume
	}
	return 0
}

func (m *Soundtrack) GetMode() Soundtrack_SoundtrackMode {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return Default_Soundtrack_Mode
}

func (m *Soundtrack) GetMovieMedia() []*TSP.DataReference {
	if m != nil {
		return m.MovieMedia
	}
	return nil
}

type SlideNumberAttachmentArchive struct {
	Super            *TSWP.TextualAttachmentArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *SlideNumberAttachmentArchive) Reset()         { *m = SlideNumberAttachmentArchive{} }
func (m *SlideNumberAttachmentArchive) String() string { return proto.CompactTextString(m) }
func (*SlideNumberAttachmentArchive) ProtoMessage()    {}

func (m *SlideNumberAttachmentArchive) GetSuper() *TSWP.TextualAttachmentArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

type SlideCollectionSelectionArchive struct {
	SlideNodes                            []*TSP.Reference                                    `protobuf:"bytes,1,rep,name=slide_nodes" json:"slide_nodes,omitempty"`
	SlideNodeToEdit                       *TSP.Reference                                      `protobuf:"bytes,2,opt,name=slide_node_to_edit" json:"slide_node_to_edit,omitempty"`
	SelectedParagraphIndexesForSlideNodes []*SlideCollectionSelectionArchive_OutlineSelection `protobuf:"bytes,3,rep,name=selected_paragraph_indexes_for_slide_nodes" json:"selected_paragraph_indexes_for_slide_nodes,omitempty"`
	RangeInSelectedParagraph              *TSP.Range                                          `protobuf:"bytes,4,opt,name=range_in_selected_paragraph" json:"range_in_selected_paragraph,omitempty"`
	XXX_unrecognized                      []byte                                              `json:"-"`
}

func (m *SlideCollectionSelectionArchive) Reset()         { *m = SlideCollectionSelectionArchive{} }
func (m *SlideCollectionSelectionArchive) String() string { return proto.CompactTextString(m) }
func (*SlideCollectionSelectionArchive) ProtoMessage()    {}

func (m *SlideCollectionSelectionArchive) GetSlideNodes() []*TSP.Reference {
	if m != nil {
		return m.SlideNodes
	}
	return nil
}

func (m *SlideCollectionSelectionArchive) GetSlideNodeToEdit() *TSP.Reference {
	if m != nil {
		return m.SlideNodeToEdit
	}
	return nil
}

func (m *SlideCollectionSelectionArchive) GetSelectedParagraphIndexesForSlideNodes() []*SlideCollectionSelectionArchive_OutlineSelection {
	if m != nil {
		return m.SelectedParagraphIndexesForSlideNodes
	}
	return nil
}

func (m *SlideCollectionSelectionArchive) GetRangeInSelectedParagraph() *TSP.Range {
	if m != nil {
		return m.RangeInSelectedParagraph
	}
	return nil
}

type SlideCollectionSelectionArchive_OutlineSelection struct {
	SlideNode                *TSP.Reference `protobuf:"bytes,1,req,name=slide_node" json:"slide_node,omitempty"`
	SelectedParagraphIndexes *TSP.IndexSet  `protobuf:"bytes,2,req,name=selected_paragraph_indexes" json:"selected_paragraph_indexes,omitempty"`
	XXX_unrecognized         []byte         `json:"-"`
}

func (m *SlideCollectionSelectionArchive_OutlineSelection) Reset() {
	*m = SlideCollectionSelectionArchive_OutlineSelection{}
}
func (m *SlideCollectionSelectionArchive_OutlineSelection) String() string {
	return proto.CompactTextString(m)
}
func (*SlideCollectionSelectionArchive_OutlineSelection) ProtoMessage() {}

func (m *SlideCollectionSelectionArchive_OutlineSelection) GetSlideNode() *TSP.Reference {
	if m != nil {
		return m.SlideNode
	}
	return nil
}

func (m *SlideCollectionSelectionArchive_OutlineSelection) GetSelectedParagraphIndexes() *TSP.IndexSet {
	if m != nil {
		return m.SelectedParagraphIndexes
	}
	return nil
}

func init() {
	proto.RegisterEnum("KN.TransitionAttributesArchive_TransitionCustomAttributesTimingCurveType", TransitionAttributesArchive_TransitionCustomAttributesTimingCurveType_name, TransitionAttributesArchive_TransitionCustomAttributesTimingCurveType_value)
	proto.RegisterEnum("KN.TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryType", TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryType_name, TransitionAttributesArchive_TransitionCustomAttributesTextDeliveryType_value)
	proto.RegisterEnum("KN.BuildAttributesArchive_BuildAttributesAcceleration", BuildAttributesArchive_BuildAttributesAcceleration_name, BuildAttributesArchive_BuildAttributesAcceleration_value)
	proto.RegisterEnum("KN.BuildAttributesArchive_BuildAttributesRotationDirection", BuildAttributesArchive_BuildAttributesRotationDirection_name, BuildAttributesArchive_BuildAttributesRotationDirection_value)
	proto.RegisterEnum("KN.BuildAttributesArchive_BuildAttributesCurveStyle", BuildAttributesArchive_BuildAttributesCurveStyle_name, BuildAttributesArchive_BuildAttributesCurveStyle_value)
	proto.RegisterEnum("KN.BuildAttributesArchive_BuildAttributesTextDelivery", BuildAttributesArchive_BuildAttributesTextDelivery_name, BuildAttributesArchive_BuildAttributesTextDelivery_value)
	proto.RegisterEnum("KN.BuildAttributesArchive_BuildAttributesDeliveryOption", BuildAttributesArchive_BuildAttributesDeliveryOption_name, BuildAttributesArchive_BuildAttributesDeliveryOption_value)
	proto.RegisterEnum("KN.BuildAttributesArchive_ActionBuildAttributesJiggleIntensity", BuildAttributesArchive_ActionBuildAttributesJiggleIntensity_name, BuildAttributesArchive_ActionBuildAttributesJiggleIntensity_value)
	proto.RegisterEnum("KN.PlaceholderArchive_Kind", PlaceholderArchive_Kind_name, PlaceholderArchive_Kind_value)
	proto.RegisterEnum("KN.DesktopUILayoutArchive_SidebarViewMode", DesktopUILayoutArchive_SidebarViewMode_name, DesktopUILayoutArchive_SidebarViewMode_value)
	proto.RegisterEnum("KN.DesktopUILayoutArchive_InspectorPaneViewMode", DesktopUILayoutArchive_InspectorPaneViewMode_name, DesktopUILayoutArchive_InspectorPaneViewMode_value)
	proto.RegisterEnum("KN.ShowArchive_KNShowMode", ShowArchive_KNShowMode_name, ShowArchive_KNShowMode_value)
	proto.RegisterEnum("KN.RecordingArchive_RecordingSyncState", RecordingArchive_RecordingSyncState_name, RecordingArchive_RecordingSyncState_value)
	proto.RegisterEnum("KN.RecordingNavigationEventArchive_RecordingNavigationEventAnimationPhase", RecordingNavigationEventArchive_RecordingNavigationEventAnimationPhase_name, RecordingNavigationEventArchive_RecordingNavigationEventAnimationPhase_value)
	proto.RegisterEnum("KN.RecordingPauseEventArchive_RecordingPauseEventType", RecordingPauseEventArchive_RecordingPauseEventType_name, RecordingPauseEventArchive_RecordingPauseEventType_value)
	proto.RegisterEnum("KN.RecordingMovieEventArchive_RecordingMovieEventType", RecordingMovieEventArchive_RecordingMovieEventType_name, RecordingMovieEventArchive_RecordingMovieEventType_value)
	proto.RegisterEnum("KN.Soundtrack_SoundtrackMode", Soundtrack_SoundtrackMode_name, Soundtrack_SoundtrackMode_value)
}
