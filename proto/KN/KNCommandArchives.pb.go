// Code generated by protoc-gen-go.
// source: KNCommandArchives.proto
// DO NOT EDIT!

/*
Package KN is a generated protocol buffer package.

It is generated from these files:

	KNCommandArchives.proto

It has these top-level messages:

	UIStateCommandGroupArchive
	CommandSlideInsertDrawablesArchive
	CommandSlideSetPlaceholdersForTagsArchive
	CommandSlideRemoveDrawableArchive
	CommandSlideMoveDrawableZOrderArchive
	CommandSlidePasteDrawablesArchive
	CommandSlideNodeSetPropertyArchive
	CommandSlideSetValueArchive
	CommandSlideSetStyleArchive
	CommandShowMarkOutOfSyncRecordingArchive
	CommandShowRemoveRecordingArchive
	CommandShowReplaceRecordingArchive
	CommandShowSetValueArchive
	CommandShowInsertSlideArchive
	CommandShowMoveSlideArchive
	CommandShowRemoveSlideArchive
	CommandShowChangeThemeArchive
	CommandMoveMastersArchive
	CommandInsertMasterArchive
	CommandRemoveMasterArchive
	CommandRenameMasterArchive
	CommandSlideInsertBuildArchive
	CommandSlideRemoveBuildArchive
	CommandSlideMoveBuildWithoutMovingChunksArchive
	CommandSlideMoveBuildsArchive
	CommandSlideInsertBuildChunkArchive
	CommandSlideRemoveBuildChunkArchive
	CommandSlideMoveBuildChunkArchive
	CommandSlideMoveBuildChunksArchive
	CommandBuildSetValueArchive
	CommandBuildChunkSetValueArchive
	CommandTransitionSetValueArchive
	CommandShowSetSlideNumberVisibilityArchive
	CommandMasterRescaleArchive
	CommandMasterSetThumbnailTextArchive
	CommandMasterSetBodyStylesArchive
	CommandSlideApplyThemeArchive
	CommandChangeMasterSlideArchive
	CommandSlidePrimitiveSetMasterArchive
	CommandSlideReapplyMasterArchive
	CommandShowSetSoundtrack
	CommandSoundtrackSetValue
	SlideCollectionCommandSelectionBehaviorArchive
	ChartInfoGeometryCommandArchive
*/
package KN

import (
	math "math"

	"github.com/dunhamsteve/iwork/proto/TSD"
	"github.com/dunhamsteve/iwork/proto/TSK"
	"github.com/dunhamsteve/iwork/proto/TSP"
	"github.com/dunhamsteve/iwork/proto/TSS"
	proto "github.com/golang/protobuf/proto"
)

// discarding unused import TSWP "TSWPArchives.pb"
// discarding unused import TSA "TSAArchives.pb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type CommandShowInsertSlideArchive_Kind int32

const (
	CommandShowInsertSlideArchive_kKindInsertSlide             CommandShowInsertSlideArchive_Kind = 0
	CommandShowInsertSlideArchive_kKindInsertSlideForPaste     CommandShowInsertSlideArchive_Kind = 1
	CommandShowInsertSlideArchive_kKindInsertSlideForDuplicate CommandShowInsertSlideArchive_Kind = 2
)

var CommandShowInsertSlideArchive_Kind_name = map[int32]string{
	0: "kKindInsertSlide",
	1: "kKindInsertSlideForPaste",
	2: "kKindInsertSlideForDuplicate",
}
var CommandShowInsertSlideArchive_Kind_value = map[string]int32{
	"kKindInsertSlide":             0,
	"kKindInsertSlideForPaste":     1,
	"kKindInsertSlideForDuplicate": 2,
}

func (x CommandShowInsertSlideArchive_Kind) Enum() *CommandShowInsertSlideArchive_Kind {
	p := new(CommandShowInsertSlideArchive_Kind)
	*p = x
	return p
}
func (x CommandShowInsertSlideArchive_Kind) String() string {
	return proto.EnumName(CommandShowInsertSlideArchive_Kind_name, int32(x))
}
func (x *CommandShowInsertSlideArchive_Kind) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CommandShowInsertSlideArchive_Kind_value, data, "CommandShowInsertSlideArchive_Kind")
	if err != nil {
		return err
	}
	*x = CommandShowInsertSlideArchive_Kind(value)
	return nil
}

type SlideCollectionCommandSelectionBehaviorArchive_Type int32

const (
	SlideCollectionCommandSelectionBehaviorArchive_kKindSlideSelectionBehaviorTypeGeneral   SlideCollectionCommandSelectionBehaviorArchive_Type = 0
	SlideCollectionCommandSelectionBehaviorArchive_kKindSlideSelectionBehaviorTypeInsertion SlideCollectionCommandSelectionBehaviorArchive_Type = 1
	SlideCollectionCommandSelectionBehaviorArchive_kKindSlideSelectionBehaviorTypeDeletion  SlideCollectionCommandSelectionBehaviorArchive_Type = 2
	SlideCollectionCommandSelectionBehaviorArchive_kKindSlideSelectionBehaviorTypeMove      SlideCollectionCommandSelectionBehaviorArchive_Type = 3
)

var SlideCollectionCommandSelectionBehaviorArchive_Type_name = map[int32]string{
	0: "kKindSlideSelectionBehaviorTypeGeneral",
	1: "kKindSlideSelectionBehaviorTypeInsertion",
	2: "kKindSlideSelectionBehaviorTypeDeletion",
	3: "kKindSlideSelectionBehaviorTypeMove",
}
var SlideCollectionCommandSelectionBehaviorArchive_Type_value = map[string]int32{
	"kKindSlideSelectionBehaviorTypeGeneral":   0,
	"kKindSlideSelectionBehaviorTypeInsertion": 1,
	"kKindSlideSelectionBehaviorTypeDeletion":  2,
	"kKindSlideSelectionBehaviorTypeMove":      3,
}

func (x SlideCollectionCommandSelectionBehaviorArchive_Type) Enum() *SlideCollectionCommandSelectionBehaviorArchive_Type {
	p := new(SlideCollectionCommandSelectionBehaviorArchive_Type)
	*p = x
	return p
}
func (x SlideCollectionCommandSelectionBehaviorArchive_Type) String() string {
	return proto.EnumName(SlideCollectionCommandSelectionBehaviorArchive_Type_name, int32(x))
}
func (x *SlideCollectionCommandSelectionBehaviorArchive_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SlideCollectionCommandSelectionBehaviorArchive_Type_value, data, "SlideCollectionCommandSelectionBehaviorArchive_Type")
	if err != nil {
		return err
	}
	*x = SlideCollectionCommandSelectionBehaviorArchive_Type(value)
	return nil
}

type UIStateCommandGroupArchive struct {
	Super                     *TSK.CommandGroupArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	UiState                   *TSP.Reference           `protobuf:"bytes,2,req,name=uiState" json:"uiState,omitempty"`
	Property                  *string                  `protobuf:"bytes,3,req,name=property" json:"property,omitempty"`
	SlideNodesToEdit          []*TSP.Reference         `protobuf:"bytes,4,rep,name=slideNodesToEdit" json:"slideNodesToEdit,omitempty"`
	MasterSlideNodesToApply   []*TSP.Reference         `protobuf:"bytes,5,rep,name=masterSlideNodesToApply" json:"masterSlideNodesToApply,omitempty"`
	ThumbnailSizes            []*TSP.Size              `protobuf:"bytes,6,rep,name=thumbnailSizes" json:"thumbnailSizes,omitempty"`
	SelectedSlideNodes        []*TSP.Reference         `protobuf:"bytes,7,rep,name=selectedSlideNodes" json:"selectedSlideNodes,omitempty"`
	RestoreSelectedSlideNodes []*TSP.Reference         `protobuf:"bytes,8,rep,name=restoreSelectedSlideNodes" json:"restoreSelectedSlideNodes,omitempty"`
	XXX_unrecognized          []byte                   `json:"-"`
}

func (m *UIStateCommandGroupArchive) Reset()         { *m = UIStateCommandGroupArchive{} }
func (m *UIStateCommandGroupArchive) String() string { return proto.CompactTextString(m) }
func (*UIStateCommandGroupArchive) ProtoMessage()    {}

func (m *UIStateCommandGroupArchive) GetSuper() *TSK.CommandGroupArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *UIStateCommandGroupArchive) GetUiState() *TSP.Reference {
	if m != nil {
		return m.UiState
	}
	return nil
}

func (m *UIStateCommandGroupArchive) GetProperty() string {
	if m != nil && m.Property != nil {
		return *m.Property
	}
	return ""
}

func (m *UIStateCommandGroupArchive) GetSlideNodesToEdit() []*TSP.Reference {
	if m != nil {
		return m.SlideNodesToEdit
	}
	return nil
}

func (m *UIStateCommandGroupArchive) GetMasterSlideNodesToApply() []*TSP.Reference {
	if m != nil {
		return m.MasterSlideNodesToApply
	}
	return nil
}

func (m *UIStateCommandGroupArchive) GetThumbnailSizes() []*TSP.Size {
	if m != nil {
		return m.ThumbnailSizes
	}
	return nil
}

func (m *UIStateCommandGroupArchive) GetSelectedSlideNodes() []*TSP.Reference {
	if m != nil {
		return m.SelectedSlideNodes
	}
	return nil
}

func (m *UIStateCommandGroupArchive) GetRestoreSelectedSlideNodes() []*TSP.Reference {
	if m != nil {
		return m.RestoreSelectedSlideNodes
	}
	return nil
}

type CommandSlideInsertDrawablesArchive struct {
	Super                        *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	SlideNode                    *TSP.Reference      `protobuf:"bytes,2,req,name=slideNode" json:"slideNode,omitempty"`
	Drawables                    []*TSP.Reference    `protobuf:"bytes,3,rep,name=drawables" json:"drawables,omitempty"`
	ForDrag                      *bool               `protobuf:"varint,4,opt,name=forDrag" json:"forDrag,omitempty"`
	AtIndex                      *int32              `protobuf:"varint,5,opt,name=atIndex" json:"atIndex,omitempty"`
	UseObjectPlaceholderGeometry *bool               `protobuf:"varint,6,req,name=use_object_placeholder_geometry" json:"use_object_placeholder_geometry,omitempty"`
	XXX_unrecognized             []byte              `json:"-"`
}

func (m *CommandSlideInsertDrawablesArchive) Reset()         { *m = CommandSlideInsertDrawablesArchive{} }
func (m *CommandSlideInsertDrawablesArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideInsertDrawablesArchive) ProtoMessage()    {}

func (m *CommandSlideInsertDrawablesArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideInsertDrawablesArchive) GetSlideNode() *TSP.Reference {
	if m != nil {
		return m.SlideNode
	}
	return nil
}

func (m *CommandSlideInsertDrawablesArchive) GetDrawables() []*TSP.Reference {
	if m != nil {
		return m.Drawables
	}
	return nil
}

func (m *CommandSlideInsertDrawablesArchive) GetForDrag() bool {
	if m != nil && m.ForDrag != nil {
		return *m.ForDrag
	}
	return false
}

func (m *CommandSlideInsertDrawablesArchive) GetAtIndex() int32 {
	if m != nil && m.AtIndex != nil {
		return *m.AtIndex
	}
	return 0
}

func (m *CommandSlideInsertDrawablesArchive) GetUseObjectPlaceholderGeometry() bool {
	if m != nil && m.UseObjectPlaceholderGeometry != nil {
		return *m.UseObjectPlaceholderGeometry
	}
	return false
}

type CommandSlideSetPlaceholdersForTagsArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Slide            *TSP.Reference      `protobuf:"bytes,2,req,name=slide" json:"slide,omitempty"`
	Infos            []*TSP.Reference    `protobuf:"bytes,3,rep,name=infos" json:"infos,omitempty"`
	Tags             []string            `protobuf:"bytes,4,rep,name=tags" json:"tags,omitempty"`
	OldInfos         []*TSP.Reference    `protobuf:"bytes,6,rep,name=old_infos" json:"old_infos,omitempty"`
	OldTags          []string            `protobuf:"bytes,5,rep,name=old_tags" json:"old_tags,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandSlideSetPlaceholdersForTagsArchive) Reset() {
	*m = CommandSlideSetPlaceholdersForTagsArchive{}
}
func (m *CommandSlideSetPlaceholdersForTagsArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CommandSlideSetPlaceholdersForTagsArchive) ProtoMessage() {}

func (m *CommandSlideSetPlaceholdersForTagsArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideSetPlaceholdersForTagsArchive) GetSlide() *TSP.Reference {
	if m != nil {
		return m.Slide
	}
	return nil
}

func (m *CommandSlideSetPlaceholdersForTagsArchive) GetInfos() []*TSP.Reference {
	if m != nil {
		return m.Infos
	}
	return nil
}

func (m *CommandSlideSetPlaceholdersForTagsArchive) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *CommandSlideSetPlaceholdersForTagsArchive) GetOldInfos() []*TSP.Reference {
	if m != nil {
		return m.OldInfos
	}
	return nil
}

func (m *CommandSlideSetPlaceholdersForTagsArchive) GetOldTags() []string {
	if m != nil {
		return m.OldTags
	}
	return nil
}

type CommandSlideRemoveDrawableArchive struct {
	Super                              *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	SlideNode                          *TSP.Reference      `protobuf:"bytes,2,req,name=slideNode" json:"slideNode,omitempty"`
	SortedDrawables                    []*TSP.Reference    `protobuf:"bytes,3,rep,name=sortedDrawables" json:"sortedDrawables,omitempty"`
	DrawableIndices                    *TSP.IndexSet       `protobuf:"bytes,4,req,name=drawableIndices" json:"drawableIndices,omitempty"`
	PlaceholderTags                    []string            `protobuf:"bytes,5,rep,name=placeholderTags" json:"placeholderTags,omitempty"`
	InfoUsingObjectPlaceholderGeometry *TSP.Reference      `protobuf:"bytes,6,opt,name=info_using_object_placeholder_geometry" json:"info_using_object_placeholder_geometry,omitempty"`
	DidMatchObjectPlaceholderGeometry  *bool               `protobuf:"varint,7,opt,name=did_match_object_placeholder_geometry" json:"did_match_object_placeholder_geometry,omitempty"`
	XXX_unrecognized                   []byte              `json:"-"`
}

func (m *CommandSlideRemoveDrawableArchive) Reset()         { *m = CommandSlideRemoveDrawableArchive{} }
func (m *CommandSlideRemoveDrawableArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideRemoveDrawableArchive) ProtoMessage()    {}

func (m *CommandSlideRemoveDrawableArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideRemoveDrawableArchive) GetSlideNode() *TSP.Reference {
	if m != nil {
		return m.SlideNode
	}
	return nil
}

func (m *CommandSlideRemoveDrawableArchive) GetSortedDrawables() []*TSP.Reference {
	if m != nil {
		return m.SortedDrawables
	}
	return nil
}

func (m *CommandSlideRemoveDrawableArchive) GetDrawableIndices() *TSP.IndexSet {
	if m != nil {
		return m.DrawableIndices
	}
	return nil
}

func (m *CommandSlideRemoveDrawableArchive) GetPlaceholderTags() []string {
	if m != nil {
		return m.PlaceholderTags
	}
	return nil
}

func (m *CommandSlideRemoveDrawableArchive) GetInfoUsingObjectPlaceholderGeometry() *TSP.Reference {
	if m != nil {
		return m.InfoUsingObjectPlaceholderGeometry
	}
	return nil
}

func (m *CommandSlideRemoveDrawableArchive) GetDidMatchObjectPlaceholderGeometry() bool {
	if m != nil && m.DidMatchObjectPlaceholderGeometry != nil {
		return *m.DidMatchObjectPlaceholderGeometry
	}
	return false
}

type CommandSlideMoveDrawableZOrderArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	SlideNode        *TSP.Reference      `protobuf:"bytes,2,req,name=slideNode" json:"slideNode,omitempty"`
	Infos            []*TSP.Reference    `protobuf:"bytes,3,rep,name=infos" json:"infos,omitempty"`
	OldOrderedInfos  []*TSP.Reference    `protobuf:"bytes,4,rep,name=old_ordered_infos" json:"old_ordered_infos,omitempty"`
	Indexes          *TSP.IndexSet       `protobuf:"bytes,5,req,name=indexes" json:"indexes,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandSlideMoveDrawableZOrderArchive) Reset()         { *m = CommandSlideMoveDrawableZOrderArchive{} }
func (m *CommandSlideMoveDrawableZOrderArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideMoveDrawableZOrderArchive) ProtoMessage()    {}

func (m *CommandSlideMoveDrawableZOrderArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideMoveDrawableZOrderArchive) GetSlideNode() *TSP.Reference {
	if m != nil {
		return m.SlideNode
	}
	return nil
}

func (m *CommandSlideMoveDrawableZOrderArchive) GetInfos() []*TSP.Reference {
	if m != nil {
		return m.Infos
	}
	return nil
}

func (m *CommandSlideMoveDrawableZOrderArchive) GetOldOrderedInfos() []*TSP.Reference {
	if m != nil {
		return m.OldOrderedInfos
	}
	return nil
}

func (m *CommandSlideMoveDrawableZOrderArchive) GetIndexes() *TSP.IndexSet {
	if m != nil {
		return m.Indexes
	}
	return nil
}

type CommandSlidePasteDrawablesArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Commands         []*TSP.Reference    `protobuf:"bytes,2,rep,name=commands" json:"commands,omitempty"`
	Slide            *TSP.Reference      `protobuf:"bytes,3,req,name=slide" json:"slide,omitempty"`
	Drawables        []*TSP.Reference    `protobuf:"bytes,4,rep,name=drawables" json:"drawables,omitempty"`
	HasBuilds        *bool               `protobuf:"varint,5,opt,name=has_builds,def=0" json:"has_builds,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandSlidePasteDrawablesArchive) Reset()         { *m = CommandSlidePasteDrawablesArchive{} }
func (m *CommandSlidePasteDrawablesArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlidePasteDrawablesArchive) ProtoMessage()    {}

const Default_CommandSlidePasteDrawablesArchive_HasBuilds bool = false

func (m *CommandSlidePasteDrawablesArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlidePasteDrawablesArchive) GetCommands() []*TSP.Reference {
	if m != nil {
		return m.Commands
	}
	return nil
}

func (m *CommandSlidePasteDrawablesArchive) GetSlide() *TSP.Reference {
	if m != nil {
		return m.Slide
	}
	return nil
}

func (m *CommandSlidePasteDrawablesArchive) GetDrawables() []*TSP.Reference {
	if m != nil {
		return m.Drawables
	}
	return nil
}

func (m *CommandSlidePasteDrawablesArchive) GetHasBuilds() bool {
	if m != nil && m.HasBuilds != nil {
		return *m.HasBuilds
	}
	return Default_CommandSlidePasteDrawablesArchive_HasBuilds
}

type CommandSlideNodeSetPropertyArchive struct {
	Super            *TSK.CommandArchive                               `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	SlideNode        *TSP.Reference                                    `protobuf:"bytes,2,req,name=slideNode" json:"slideNode,omitempty"`
	Property         *string                                           `protobuf:"bytes,3,req,name=property" json:"property,omitempty"`
	OldValue         *CommandSlideNodeSetPropertyArchive_PropertyValue `protobuf:"bytes,4,req,name=oldValue" json:"oldValue,omitempty"`
	NewValue         *CommandSlideNodeSetPropertyArchive_PropertyValue `protobuf:"bytes,5,req,name=newValue" json:"newValue,omitempty"`
	XXX_unrecognized []byte                                            `json:"-"`
}

func (m *CommandSlideNodeSetPropertyArchive) Reset()         { *m = CommandSlideNodeSetPropertyArchive{} }
func (m *CommandSlideNodeSetPropertyArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideNodeSetPropertyArchive) ProtoMessage()    {}

func (m *CommandSlideNodeSetPropertyArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideNodeSetPropertyArchive) GetSlideNode() *TSP.Reference {
	if m != nil {
		return m.SlideNode
	}
	return nil
}

func (m *CommandSlideNodeSetPropertyArchive) GetProperty() string {
	if m != nil && m.Property != nil {
		return *m.Property
	}
	return ""
}

func (m *CommandSlideNodeSetPropertyArchive) GetOldValue() *CommandSlideNodeSetPropertyArchive_PropertyValue {
	if m != nil {
		return m.OldValue
	}
	return nil
}

func (m *CommandSlideNodeSetPropertyArchive) GetNewValue() *CommandSlideNodeSetPropertyArchive_PropertyValue {
	if m != nil {
		return m.NewValue
	}
	return nil
}

type CommandSlideNodeSetPropertyArchive_PropertyValue struct {
	BoolValue        *bool              `protobuf:"varint,1,opt,name=boolValue" json:"boolValue,omitempty"`
	Image            *TSP.DataReference `protobuf:"bytes,3,opt,name=image" json:"image,omitempty"`
	DatabaseImage    *TSP.Reference     `protobuf:"bytes,2,opt,name=database_image" json:"database_image,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CommandSlideNodeSetPropertyArchive_PropertyValue) Reset() {
	*m = CommandSlideNodeSetPropertyArchive_PropertyValue{}
}
func (m *CommandSlideNodeSetPropertyArchive_PropertyValue) String() string {
	return proto.CompactTextString(m)
}
func (*CommandSlideNodeSetPropertyArchive_PropertyValue) ProtoMessage() {}

func (m *CommandSlideNodeSetPropertyArchive_PropertyValue) GetBoolValue() bool {
	if m != nil && m.BoolValue != nil {
		return *m.BoolValue
	}
	return false
}

func (m *CommandSlideNodeSetPropertyArchive_PropertyValue) GetImage() *TSP.DataReference {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *CommandSlideNodeSetPropertyArchive_PropertyValue) GetDatabaseImage() *TSP.Reference {
	if m != nil {
		return m.DatabaseImage
	}
	return nil
}

type CommandSlideSetValueArchive struct {
	Super            *TSK.CommandArchive                        `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Slide            *TSP.Reference                             `protobuf:"bytes,2,req,name=slide" json:"slide,omitempty"`
	Property         *string                                    `protobuf:"bytes,3,req,name=property" json:"property,omitempty"`
	OldValue         *CommandSlideSetValueArchive_PropertyValue `protobuf:"bytes,4,req,name=oldValue" json:"oldValue,omitempty"`
	NewValue         *CommandSlideSetValueArchive_PropertyValue `protobuf:"bytes,5,req,name=newValue" json:"newValue,omitempty"`
	OldSlideStyle    *TSP.Reference                             `protobuf:"bytes,6,req,name=oldSlideStyle" json:"oldSlideStyle,omitempty"`
	XXX_unrecognized []byte                                     `json:"-"`
}

func (m *CommandSlideSetValueArchive) Reset()         { *m = CommandSlideSetValueArchive{} }
func (m *CommandSlideSetValueArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideSetValueArchive) ProtoMessage()    {}

func (m *CommandSlideSetValueArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideSetValueArchive) GetSlide() *TSP.Reference {
	if m != nil {
		return m.Slide
	}
	return nil
}

func (m *CommandSlideSetValueArchive) GetProperty() string {
	if m != nil && m.Property != nil {
		return *m.Property
	}
	return ""
}

func (m *CommandSlideSetValueArchive) GetOldValue() *CommandSlideSetValueArchive_PropertyValue {
	if m != nil {
		return m.OldValue
	}
	return nil
}

func (m *CommandSlideSetValueArchive) GetNewValue() *CommandSlideSetValueArchive_PropertyValue {
	if m != nil {
		return m.NewValue
	}
	return nil
}

func (m *CommandSlideSetValueArchive) GetOldSlideStyle() *TSP.Reference {
	if m != nil {
		return m.OldSlideStyle
	}
	return nil
}

type CommandSlideSetValueArchive_PropertyValue struct {
	BoolValue        *bool            `protobuf:"varint,1,opt,name=boolValue" json:"boolValue,omitempty"`
	ObjectValue      *TSP.Reference   `protobuf:"bytes,2,opt,name=objectValue" json:"objectValue,omitempty"`
	Fill             *TSD.FillArchive `protobuf:"bytes,3,opt,name=fill" json:"fill,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *CommandSlideSetValueArchive_PropertyValue) Reset() {
	*m = CommandSlideSetValueArchive_PropertyValue{}
}
func (m *CommandSlideSetValueArchive_PropertyValue) String() string {
	return proto.CompactTextString(m)
}
func (*CommandSlideSetValueArchive_PropertyValue) ProtoMessage() {}

func (m *CommandSlideSetValueArchive_PropertyValue) GetBoolValue() bool {
	if m != nil && m.BoolValue != nil {
		return *m.BoolValue
	}
	return false
}

func (m *CommandSlideSetValueArchive_PropertyValue) GetObjectValue() *TSP.Reference {
	if m != nil {
		return m.ObjectValue
	}
	return nil
}

func (m *CommandSlideSetValueArchive_PropertyValue) GetFill() *TSD.FillArchive {
	if m != nil {
		return m.Fill
	}
	return nil
}

type CommandSlideSetStyleArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Slide            *TSP.Reference      `protobuf:"bytes,2,req,name=slide" json:"slide,omitempty"`
	SlideStyle       *TSP.Reference      `protobuf:"bytes,3,req,name=slide_style" json:"slide_style,omitempty"`
	OldSlideStyle    *TSP.Reference      `protobuf:"bytes,4,req,name=old_slide_style" json:"old_slide_style,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandSlideSetStyleArchive) Reset()         { *m = CommandSlideSetStyleArchive{} }
func (m *CommandSlideSetStyleArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideSetStyleArchive) ProtoMessage()    {}

func (m *CommandSlideSetStyleArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideSetStyleArchive) GetSlide() *TSP.Reference {
	if m != nil {
		return m.Slide
	}
	return nil
}

func (m *CommandSlideSetStyleArchive) GetSlideStyle() *TSP.Reference {
	if m != nil {
		return m.SlideStyle
	}
	return nil
}

func (m *CommandSlideSetStyleArchive) GetOldSlideStyle() *TSP.Reference {
	if m != nil {
		return m.OldSlideStyle
	}
	return nil
}

type CommandShowMarkOutOfSyncRecordingArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Show             *TSP.Reference      `protobuf:"bytes,2,req,name=show" json:"show,omitempty"`
	OldRecording     *TSP.Reference      `protobuf:"bytes,3,opt,name=old_recording" json:"old_recording,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandShowMarkOutOfSyncRecordingArchive) Reset() {
	*m = CommandShowMarkOutOfSyncRecordingArchive{}
}
func (m *CommandShowMarkOutOfSyncRecordingArchive) String() string { return proto.CompactTextString(m) }
func (*CommandShowMarkOutOfSyncRecordingArchive) ProtoMessage()    {}

func (m *CommandShowMarkOutOfSyncRecordingArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandShowMarkOutOfSyncRecordingArchive) GetShow() *TSP.Reference {
	if m != nil {
		return m.Show
	}
	return nil
}

func (m *CommandShowMarkOutOfSyncRecordingArchive) GetOldRecording() *TSP.Reference {
	if m != nil {
		return m.OldRecording
	}
	return nil
}

type CommandShowRemoveRecordingArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Show             *TSP.Reference      `protobuf:"bytes,2,req,name=show" json:"show,omitempty"`
	OldRecording     *TSP.Reference      `protobuf:"bytes,3,opt,name=old_recording" json:"old_recording,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandShowRemoveRecordingArchive) Reset()         { *m = CommandShowRemoveRecordingArchive{} }
func (m *CommandShowRemoveRecordingArchive) String() string { return proto.CompactTextString(m) }
func (*CommandShowRemoveRecordingArchive) ProtoMessage()    {}

func (m *CommandShowRemoveRecordingArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandShowRemoveRecordingArchive) GetShow() *TSP.Reference {
	if m != nil {
		return m.Show
	}
	return nil
}

func (m *CommandShowRemoveRecordingArchive) GetOldRecording() *TSP.Reference {
	if m != nil {
		return m.OldRecording
	}
	return nil
}

type CommandShowReplaceRecordingArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Show                 *TSP.Reference      `protobuf:"bytes,2,req,name=show" json:"show,omitempty"`
	ReplacementRecording *TSP.Reference      `protobuf:"bytes,3,req,name=replacement_recording" json:"replacement_recording,omitempty"`
	ReplacementStartTime *float64            `protobuf:"fixed64,4,req,name=replacement_start_time" json:"replacement_start_time,omitempty"`
	OldRecording         *TSP.Reference      `protobuf:"bytes,5,opt,name=old_recording" json:"old_recording,omitempty"`
	XXX_unrecognized     []byte              `json:"-"`
}

func (m *CommandShowReplaceRecordingArchive) Reset()         { *m = CommandShowReplaceRecordingArchive{} }
func (m *CommandShowReplaceRecordingArchive) String() string { return proto.CompactTextString(m) }
func (*CommandShowReplaceRecordingArchive) ProtoMessage()    {}

func (m *CommandShowReplaceRecordingArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandShowReplaceRecordingArchive) GetShow() *TSP.Reference {
	if m != nil {
		return m.Show
	}
	return nil
}

func (m *CommandShowReplaceRecordingArchive) GetReplacementRecording() *TSP.Reference {
	if m != nil {
		return m.ReplacementRecording
	}
	return nil
}

func (m *CommandShowReplaceRecordingArchive) GetReplacementStartTime() float64 {
	if m != nil && m.ReplacementStartTime != nil {
		return *m.ReplacementStartTime
	}
	return 0
}

func (m *CommandShowReplaceRecordingArchive) GetOldRecording() *TSP.Reference {
	if m != nil {
		return m.OldRecording
	}
	return nil
}

type CommandShowSetValueArchive struct {
	Super            *TSK.CommandArchive                       `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Show             *TSP.Reference                            `protobuf:"bytes,2,req,name=show" json:"show,omitempty"`
	Property         *string                                   `protobuf:"bytes,3,req,name=property" json:"property,omitempty"`
	OldValue         *CommandShowSetValueArchive_PropertyValue `protobuf:"bytes,4,req,name=old_value" json:"old_value,omitempty"`
	NewValue         *CommandShowSetValueArchive_PropertyValue `protobuf:"bytes,5,req,name=new_value" json:"new_value,omitempty"`
	XXX_unrecognized []byte                                    `json:"-"`
}

func (m *CommandShowSetValueArchive) Reset()         { *m = CommandShowSetValueArchive{} }
func (m *CommandShowSetValueArchive) String() string { return proto.CompactTextString(m) }
func (*CommandShowSetValueArchive) ProtoMessage()    {}

func (m *CommandShowSetValueArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandShowSetValueArchive) GetShow() *TSP.Reference {
	if m != nil {
		return m.Show
	}
	return nil
}

func (m *CommandShowSetValueArchive) GetProperty() string {
	if m != nil && m.Property != nil {
		return *m.Property
	}
	return ""
}

func (m *CommandShowSetValueArchive) GetOldValue() *CommandShowSetValueArchive_PropertyValue {
	if m != nil {
		return m.OldValue
	}
	return nil
}

func (m *CommandShowSetValueArchive) GetNewValue() *CommandShowSetValueArchive_PropertyValue {
	if m != nil {
		return m.NewValue
	}
	return nil
}

type CommandShowSetValueArchive_PropertyValue struct {
	BoolValue        *bool                   `protobuf:"varint,1,opt,name=bool_value" json:"bool_value,omitempty"`
	DoubleValue      *float64                `protobuf:"fixed64,2,opt,name=double_value" json:"double_value,omitempty"`
	ShowModeValue    *ShowArchive_KNShowMode `protobuf:"varint,3,opt,name=show_mode_value,enum=KN.ShowArchive_KNShowMode" json:"show_mode_value,omitempty"`
	SizeValue        *TSP.Size               `protobuf:"bytes,4,opt,name=size_value" json:"size_value,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *CommandShowSetValueArchive_PropertyValue) Reset() {
	*m = CommandShowSetValueArchive_PropertyValue{}
}
func (m *CommandShowSetValueArchive_PropertyValue) String() string { return proto.CompactTextString(m) }
func (*CommandShowSetValueArchive_PropertyValue) ProtoMessage()    {}

func (m *CommandShowSetValueArchive_PropertyValue) GetBoolValue() bool {
	if m != nil && m.BoolValue != nil {
		return *m.BoolValue
	}
	return false
}

func (m *CommandShowSetValueArchive_PropertyValue) GetDoubleValue() float64 {
	if m != nil && m.DoubleValue != nil {
		return *m.DoubleValue
	}
	return 0
}

func (m *CommandShowSetValueArchive_PropertyValue) GetShowModeValue() ShowArchive_KNShowMode {
	if m != nil && m.ShowModeValue != nil {
		return *m.ShowModeValue
	}
	return ShowArchive_kKNShowModeNormal
}

func (m *CommandShowSetValueArchive_PropertyValue) GetSizeValue() *TSP.Size {
	if m != nil {
		return m.SizeValue
	}
	return nil
}

type CommandShowInsertSlideArchive struct {
	Super            *TSK.CommandArchive                 `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Show             *TSP.Reference                      `protobuf:"bytes,2,req,name=show" json:"show,omitempty"`
	SlideNode        *TSP.Reference                      `protobuf:"bytes,3,req,name=slideNode" json:"slideNode,omitempty"`
	ChildIndex       *uint32                             `protobuf:"varint,4,req,name=childIndex" json:"childIndex,omitempty"`
	ParentSlideNode  *TSP.Reference                      `protobuf:"bytes,5,req,name=parentSlideNode" json:"parentSlideNode,omitempty"`
	Kind             *CommandShowInsertSlideArchive_Kind `protobuf:"varint,6,opt,name=kind,enum=KN.CommandShowInsertSlideArchive_Kind,def=0" json:"kind,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *CommandShowInsertSlideArchive) Reset()         { *m = CommandShowInsertSlideArchive{} }
func (m *CommandShowInsertSlideArchive) String() string { return proto.CompactTextString(m) }
func (*CommandShowInsertSlideArchive) ProtoMessage()    {}

const Default_CommandShowInsertSlideArchive_Kind CommandShowInsertSlideArchive_Kind = CommandShowInsertSlideArchive_kKindInsertSlide

func (m *CommandShowInsertSlideArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandShowInsertSlideArchive) GetShow() *TSP.Reference {
	if m != nil {
		return m.Show
	}
	return nil
}

func (m *CommandShowInsertSlideArchive) GetSlideNode() *TSP.Reference {
	if m != nil {
		return m.SlideNode
	}
	return nil
}

func (m *CommandShowInsertSlideArchive) GetChildIndex() uint32 {
	if m != nil && m.ChildIndex != nil {
		return *m.ChildIndex
	}
	return 0
}

func (m *CommandShowInsertSlideArchive) GetParentSlideNode() *TSP.Reference {
	if m != nil {
		return m.ParentSlideNode
	}
	return nil
}

func (m *CommandShowInsertSlideArchive) GetKind() CommandShowInsertSlideArchive_Kind {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return Default_CommandShowInsertSlideArchive_Kind
}

type CommandShowMoveSlideArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Show             *TSP.Reference      `protobuf:"bytes,2,req,name=show" json:"show,omitempty"`
	SlideNode        *TSP.Reference      `protobuf:"bytes,3,req,name=slideNode" json:"slideNode,omitempty"`
	ParentSlideNodes []*TSP.Reference    `protobuf:"bytes,4,rep,name=parentSlideNodes" json:"parentSlideNodes,omitempty"`
	ChildIndices     []uint32            `protobuf:"varint,5,rep,name=childIndices" json:"childIndices,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandShowMoveSlideArchive) Reset()         { *m = CommandShowMoveSlideArchive{} }
func (m *CommandShowMoveSlideArchive) String() string { return proto.CompactTextString(m) }
func (*CommandShowMoveSlideArchive) ProtoMessage()    {}

func (m *CommandShowMoveSlideArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandShowMoveSlideArchive) GetShow() *TSP.Reference {
	if m != nil {
		return m.Show
	}
	return nil
}

func (m *CommandShowMoveSlideArchive) GetSlideNode() *TSP.Reference {
	if m != nil {
		return m.SlideNode
	}
	return nil
}

func (m *CommandShowMoveSlideArchive) GetParentSlideNodes() []*TSP.Reference {
	if m != nil {
		return m.ParentSlideNodes
	}
	return nil
}

func (m *CommandShowMoveSlideArchive) GetChildIndices() []uint32 {
	if m != nil {
		return m.ChildIndices
	}
	return nil
}

type CommandShowRemoveSlideArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Show             *TSP.Reference      `protobuf:"bytes,2,req,name=show" json:"show,omitempty"`
	SlideNode        *TSP.Reference      `protobuf:"bytes,3,req,name=slideNode" json:"slideNode,omitempty"`
	ParentSlideNode  *TSP.Reference      `protobuf:"bytes,4,req,name=parentSlideNode" json:"parentSlideNode,omitempty"`
	ChildIndex       *uint32             `protobuf:"varint,5,req,name=childIndex" json:"childIndex,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandShowRemoveSlideArchive) Reset()         { *m = CommandShowRemoveSlideArchive{} }
func (m *CommandShowRemoveSlideArchive) String() string { return proto.CompactTextString(m) }
func (*CommandShowRemoveSlideArchive) ProtoMessage()    {}

func (m *CommandShowRemoveSlideArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandShowRemoveSlideArchive) GetShow() *TSP.Reference {
	if m != nil {
		return m.Show
	}
	return nil
}

func (m *CommandShowRemoveSlideArchive) GetSlideNode() *TSP.Reference {
	if m != nil {
		return m.SlideNode
	}
	return nil
}

func (m *CommandShowRemoveSlideArchive) GetParentSlideNode() *TSP.Reference {
	if m != nil {
		return m.ParentSlideNode
	}
	return nil
}

func (m *CommandShowRemoveSlideArchive) GetChildIndex() uint32 {
	if m != nil && m.ChildIndex != nil {
		return *m.ChildIndex
	}
	return 0
}

type CommandShowChangeThemeArchive struct {
	Super                 *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Show                  *TSP.Reference      `protobuf:"bytes,2,req,name=show" json:"show,omitempty"`
	Theme                 *TSP.Reference      `protobuf:"bytes,3,req,name=theme" json:"theme,omitempty"`
	OldTheme              *TSP.Reference      `protobuf:"bytes,4,req,name=old_theme" json:"old_theme,omitempty"`
	TemplateIdentifier    *string             `protobuf:"bytes,5,opt,name=template_identifier" json:"template_identifier,omitempty"`
	OldTemplateIdentifier *string             `protobuf:"bytes,6,opt,name=old_template_identifier" json:"old_template_identifier,omitempty"`
	XXX_unrecognized      []byte              `json:"-"`
}

func (m *CommandShowChangeThemeArchive) Reset()         { *m = CommandShowChangeThemeArchive{} }
func (m *CommandShowChangeThemeArchive) String() string { return proto.CompactTextString(m) }
func (*CommandShowChangeThemeArchive) ProtoMessage()    {}

func (m *CommandShowChangeThemeArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandShowChangeThemeArchive) GetShow() *TSP.Reference {
	if m != nil {
		return m.Show
	}
	return nil
}

func (m *CommandShowChangeThemeArchive) GetTheme() *TSP.Reference {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *CommandShowChangeThemeArchive) GetOldTheme() *TSP.Reference {
	if m != nil {
		return m.OldTheme
	}
	return nil
}

func (m *CommandShowChangeThemeArchive) GetTemplateIdentifier() string {
	if m != nil && m.TemplateIdentifier != nil {
		return *m.TemplateIdentifier
	}
	return ""
}

func (m *CommandShowChangeThemeArchive) GetOldTemplateIdentifier() string {
	if m != nil && m.OldTemplateIdentifier != nil {
		return *m.OldTemplateIdentifier
	}
	return ""
}

type CommandMoveMastersArchive struct {
	Super                  *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Theme                  *TSP.Reference      `protobuf:"bytes,2,req,name=theme" json:"theme,omitempty"`
	MasterSlides           []*TSP.Reference    `protobuf:"bytes,3,rep,name=master_slides" json:"master_slides,omitempty"`
	PreviousIndexesKeys    []*TSP.Reference    `protobuf:"bytes,4,rep,name=previous_indexes_keys" json:"previous_indexes_keys,omitempty"`
	PreviousIndexesValues  []uint32            `protobuf:"varint,5,rep,name=previous_indexes_values" json:"previous_indexes_values,omitempty"`
	FinalMasterArrangement []*TSP.Reference    `protobuf:"bytes,6,rep,name=final_master_arrangement" json:"final_master_arrangement,omitempty"`
	XXX_unrecognized       []byte              `json:"-"`
}

func (m *CommandMoveMastersArchive) Reset()         { *m = CommandMoveMastersArchive{} }
func (m *CommandMoveMastersArchive) String() string { return proto.CompactTextString(m) }
func (*CommandMoveMastersArchive) ProtoMessage()    {}

func (m *CommandMoveMastersArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandMoveMastersArchive) GetTheme() *TSP.Reference {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *CommandMoveMastersArchive) GetMasterSlides() []*TSP.Reference {
	if m != nil {
		return m.MasterSlides
	}
	return nil
}

func (m *CommandMoveMastersArchive) GetPreviousIndexesKeys() []*TSP.Reference {
	if m != nil {
		return m.PreviousIndexesKeys
	}
	return nil
}

func (m *CommandMoveMastersArchive) GetPreviousIndexesValues() []uint32 {
	if m != nil {
		return m.PreviousIndexesValues
	}
	return nil
}

func (m *CommandMoveMastersArchive) GetFinalMasterArrangement() []*TSP.Reference {
	if m != nil {
		return m.FinalMasterArrangement
	}
	return nil
}

type CommandInsertMasterArchive struct {
	Super               *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Theme               *TSP.Reference      `protobuf:"bytes,2,req,name=theme" json:"theme,omitempty"`
	MasterSlideNode     *TSP.Reference      `protobuf:"bytes,3,req,name=master_slide_node" json:"master_slide_node,omitempty"`
	InsertionIndex      *uint32             `protobuf:"varint,4,req,name=insertion_index" json:"insertion_index,omitempty"`
	WasInsertedWithDrop *bool               `protobuf:"varint,5,req,name=was_inserted_with_drop" json:"was_inserted_with_drop,omitempty"`
	XXX_unrecognized    []byte              `json:"-"`
}

func (m *CommandInsertMasterArchive) Reset()         { *m = CommandInsertMasterArchive{} }
func (m *CommandInsertMasterArchive) String() string { return proto.CompactTextString(m) }
func (*CommandInsertMasterArchive) ProtoMessage()    {}

func (m *CommandInsertMasterArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandInsertMasterArchive) GetTheme() *TSP.Reference {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *CommandInsertMasterArchive) GetMasterSlideNode() *TSP.Reference {
	if m != nil {
		return m.MasterSlideNode
	}
	return nil
}

func (m *CommandInsertMasterArchive) GetInsertionIndex() uint32 {
	if m != nil && m.InsertionIndex != nil {
		return *m.InsertionIndex
	}
	return 0
}

func (m *CommandInsertMasterArchive) GetWasInsertedWithDrop() bool {
	if m != nil && m.WasInsertedWithDrop != nil {
		return *m.WasInsertedWithDrop
	}
	return false
}

type CommandRemoveMasterArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Theme                *TSP.Reference      `protobuf:"bytes,2,req,name=theme" json:"theme,omitempty"`
	MasterSlideNode      *TSP.Reference      `protobuf:"bytes,3,req,name=master_slide_node" json:"master_slide_node,omitempty"`
	PreviousIndex        *uint32             `protobuf:"varint,4,req,name=previous_index" json:"previous_index,omitempty"`
	MasterChangeCommands *TSP.Reference      `protobuf:"bytes,5,opt,name=master_change_commands" json:"master_change_commands,omitempty"`
	XXX_unrecognized     []byte              `json:"-"`
}

func (m *CommandRemoveMasterArchive) Reset()         { *m = CommandRemoveMasterArchive{} }
func (m *CommandRemoveMasterArchive) String() string { return proto.CompactTextString(m) }
func (*CommandRemoveMasterArchive) ProtoMessage()    {}

func (m *CommandRemoveMasterArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandRemoveMasterArchive) GetTheme() *TSP.Reference {
	if m != nil {
		return m.Theme
	}
	return nil
}

func (m *CommandRemoveMasterArchive) GetMasterSlideNode() *TSP.Reference {
	if m != nil {
		return m.MasterSlideNode
	}
	return nil
}

func (m *CommandRemoveMasterArchive) GetPreviousIndex() uint32 {
	if m != nil && m.PreviousIndex != nil {
		return *m.PreviousIndex
	}
	return 0
}

func (m *CommandRemoveMasterArchive) GetMasterChangeCommands() *TSP.Reference {
	if m != nil {
		return m.MasterChangeCommands
	}
	return nil
}

type CommandRenameMasterArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	MasterSlide      *TSP.Reference      `protobuf:"bytes,2,req,name=master_slide" json:"master_slide,omitempty"`
	MasterName       *string             `protobuf:"bytes,3,req,name=master_name" json:"master_name,omitempty"`
	OldMasterName    *string             `protobuf:"bytes,4,req,name=old_master_name" json:"old_master_name,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandRenameMasterArchive) Reset()         { *m = CommandRenameMasterArchive{} }
func (m *CommandRenameMasterArchive) String() string { return proto.CompactTextString(m) }
func (*CommandRenameMasterArchive) ProtoMessage()    {}

func (m *CommandRenameMasterArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandRenameMasterArchive) GetMasterSlide() *TSP.Reference {
	if m != nil {
		return m.MasterSlide
	}
	return nil
}

func (m *CommandRenameMasterArchive) GetMasterName() string {
	if m != nil && m.MasterName != nil {
		return *m.MasterName
	}
	return ""
}

func (m *CommandRenameMasterArchive) GetOldMasterName() string {
	if m != nil && m.OldMasterName != nil {
		return *m.OldMasterName
	}
	return ""
}

type CommandSlideInsertBuildArchive struct {
	Super              *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	SlideNode          *TSP.Reference      `protobuf:"bytes,2,req,name=slideNode" json:"slideNode,omitempty"`
	Build              *TSP.Reference      `protobuf:"bytes,3,req,name=build" json:"build,omitempty"`
	Index              *uint32             `protobuf:"varint,4,req,name=index" json:"index,omitempty"`
	ShouldCreateChunks *bool               `protobuf:"varint,5,opt,name=shouldCreateChunks" json:"shouldCreateChunks,omitempty"`
	XXX_unrecognized   []byte              `json:"-"`
}

func (m *CommandSlideInsertBuildArchive) Reset()         { *m = CommandSlideInsertBuildArchive{} }
func (m *CommandSlideInsertBuildArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideInsertBuildArchive) ProtoMessage()    {}

func (m *CommandSlideInsertBuildArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideInsertBuildArchive) GetSlideNode() *TSP.Reference {
	if m != nil {
		return m.SlideNode
	}
	return nil
}

func (m *CommandSlideInsertBuildArchive) GetBuild() *TSP.Reference {
	if m != nil {
		return m.Build
	}
	return nil
}

func (m *CommandSlideInsertBuildArchive) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *CommandSlideInsertBuildArchive) GetShouldCreateChunks() bool {
	if m != nil && m.ShouldCreateChunks != nil {
		return *m.ShouldCreateChunks
	}
	return false
}

type CommandSlideRemoveBuildArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	SlideNode        *TSP.Reference      `protobuf:"bytes,2,req,name=slideNode" json:"slideNode,omitempty"`
	Build            *TSP.Reference      `protobuf:"bytes,3,req,name=build" json:"build,omitempty"`
	Index            *uint32             `protobuf:"varint,4,req,name=index" json:"index,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandSlideRemoveBuildArchive) Reset()         { *m = CommandSlideRemoveBuildArchive{} }
func (m *CommandSlideRemoveBuildArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideRemoveBuildArchive) ProtoMessage()    {}

func (m *CommandSlideRemoveBuildArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideRemoveBuildArchive) GetSlideNode() *TSP.Reference {
	if m != nil {
		return m.SlideNode
	}
	return nil
}

func (m *CommandSlideRemoveBuildArchive) GetBuild() *TSP.Reference {
	if m != nil {
		return m.Build
	}
	return nil
}

func (m *CommandSlideRemoveBuildArchive) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

type CommandSlideMoveBuildWithoutMovingChunksArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	SlideNode        *TSP.Reference      `protobuf:"bytes,2,req,name=slideNode" json:"slideNode,omitempty"`
	Index            *uint32             `protobuf:"varint,3,req,name=index" json:"index,omitempty"`
	OldIndex         *uint32             `protobuf:"varint,4,req,name=oldIndex" json:"oldIndex,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandSlideMoveBuildWithoutMovingChunksArchive) Reset() {
	*m = CommandSlideMoveBuildWithoutMovingChunksArchive{}
}
func (m *CommandSlideMoveBuildWithoutMovingChunksArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CommandSlideMoveBuildWithoutMovingChunksArchive) ProtoMessage() {}

func (m *CommandSlideMoveBuildWithoutMovingChunksArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideMoveBuildWithoutMovingChunksArchive) GetSlideNode() *TSP.Reference {
	if m != nil {
		return m.SlideNode
	}
	return nil
}

func (m *CommandSlideMoveBuildWithoutMovingChunksArchive) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *CommandSlideMoveBuildWithoutMovingChunksArchive) GetOldIndex() uint32 {
	if m != nil && m.OldIndex != nil {
		return *m.OldIndex
	}
	return 0
}

type CommandSlideMoveBuildsArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Builds           []*TSP.Reference    `protobuf:"bytes,2,rep,name=builds" json:"builds,omitempty"`
	ToIndex          *uint32             `protobuf:"varint,3,opt,name=toIndex" json:"toIndex,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandSlideMoveBuildsArchive) Reset()         { *m = CommandSlideMoveBuildsArchive{} }
func (m *CommandSlideMoveBuildsArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideMoveBuildsArchive) ProtoMessage()    {}

func (m *CommandSlideMoveBuildsArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideMoveBuildsArchive) GetBuilds() []*TSP.Reference {
	if m != nil {
		return m.Builds
	}
	return nil
}

func (m *CommandSlideMoveBuildsArchive) GetToIndex() uint32 {
	if m != nil && m.ToIndex != nil {
		return *m.ToIndex
	}
	return 0
}

type CommandSlideInsertBuildChunkArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Slide            *TSP.Reference      `protobuf:"bytes,2,req,name=slide" json:"slide,omitempty"`
	BuildChunk       *BuildChunkArchive  `protobuf:"bytes,3,req,name=buildChunk" json:"buildChunk,omitempty"`
	Index            *uint32             `protobuf:"varint,4,req,name=index" json:"index,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandSlideInsertBuildChunkArchive) Reset()         { *m = CommandSlideInsertBuildChunkArchive{} }
func (m *CommandSlideInsertBuildChunkArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideInsertBuildChunkArchive) ProtoMessage()    {}

func (m *CommandSlideInsertBuildChunkArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideInsertBuildChunkArchive) GetSlide() *TSP.Reference {
	if m != nil {
		return m.Slide
	}
	return nil
}

func (m *CommandSlideInsertBuildChunkArchive) GetBuildChunk() *BuildChunkArchive {
	if m != nil {
		return m.BuildChunk
	}
	return nil
}

func (m *CommandSlideInsertBuildChunkArchive) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

type CommandSlideRemoveBuildChunkArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Slide            *TSP.Reference      `protobuf:"bytes,2,req,name=slide" json:"slide,omitempty"`
	BuildChunk       *BuildChunkArchive  `protobuf:"bytes,3,req,name=buildChunk" json:"buildChunk,omitempty"`
	Index            *uint32             `protobuf:"varint,4,req,name=index" json:"index,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandSlideRemoveBuildChunkArchive) Reset()         { *m = CommandSlideRemoveBuildChunkArchive{} }
func (m *CommandSlideRemoveBuildChunkArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideRemoveBuildChunkArchive) ProtoMessage()    {}

func (m *CommandSlideRemoveBuildChunkArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideRemoveBuildChunkArchive) GetSlide() *TSP.Reference {
	if m != nil {
		return m.Slide
	}
	return nil
}

func (m *CommandSlideRemoveBuildChunkArchive) GetBuildChunk() *BuildChunkArchive {
	if m != nil {
		return m.BuildChunk
	}
	return nil
}

func (m *CommandSlideRemoveBuildChunkArchive) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

type CommandSlideMoveBuildChunkArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Slide            *TSP.Reference      `protobuf:"bytes,2,req,name=slide" json:"slide,omitempty"`
	Index            *uint32             `protobuf:"varint,3,req,name=index" json:"index,omitempty"`
	OldIndex         *uint32             `protobuf:"varint,4,req,name=oldIndex" json:"oldIndex,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandSlideMoveBuildChunkArchive) Reset()         { *m = CommandSlideMoveBuildChunkArchive{} }
func (m *CommandSlideMoveBuildChunkArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideMoveBuildChunkArchive) ProtoMessage()    {}

func (m *CommandSlideMoveBuildChunkArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideMoveBuildChunkArchive) GetSlide() *TSP.Reference {
	if m != nil {
		return m.Slide
	}
	return nil
}

func (m *CommandSlideMoveBuildChunkArchive) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *CommandSlideMoveBuildChunkArchive) GetOldIndex() uint32 {
	if m != nil && m.OldIndex != nil {
		return *m.OldIndex
	}
	return 0
}

type CommandSlideMoveBuildChunksArchive struct {
	Super            *TSK.CommandArchive  `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	BuildChunks      []*BuildChunkArchive `protobuf:"bytes,2,rep,name=buildChunks" json:"buildChunks,omitempty"`
	ToIndex          *uint32              `protobuf:"varint,3,opt,name=toIndex" json:"toIndex,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommandSlideMoveBuildChunksArchive) Reset()         { *m = CommandSlideMoveBuildChunksArchive{} }
func (m *CommandSlideMoveBuildChunksArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideMoveBuildChunksArchive) ProtoMessage()    {}

func (m *CommandSlideMoveBuildChunksArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideMoveBuildChunksArchive) GetBuildChunks() []*BuildChunkArchive {
	if m != nil {
		return m.BuildChunks
	}
	return nil
}

func (m *CommandSlideMoveBuildChunksArchive) GetToIndex() uint32 {
	if m != nil && m.ToIndex != nil {
		return *m.ToIndex
	}
	return 0
}

type CommandBuildSetValueArchive struct {
	Super                *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Build                *TSP.Reference      `protobuf:"bytes,2,req,name=build" json:"build,omitempty"`
	Property             *string             `protobuf:"bytes,3,req,name=property" json:"property,omitempty"`
	Effects              []string            `protobuf:"bytes,4,rep,name=effects" json:"effects,omitempty"`
	Types                []string            `protobuf:"bytes,5,rep,name=types" json:"types,omitempty"`
	Deliveries           []string            `protobuf:"bytes,6,rep,name=deliveries" json:"deliveries,omitempty"`
	Directions           []uint32            `protobuf:"varint,7,rep,name=directions" json:"directions,omitempty"`
	Durations            []float64           `protobuf:"fixed64,8,rep,name=durations" json:"durations,omitempty"`
	Delays               []float64           `protobuf:"fixed64,9,rep,name=delays" json:"delays,omitempty"`
	DelayAutomaticAfters []float64           `protobuf:"fixed64,10,rep,name=delayAutomaticAfters" json:"delayAutomaticAfters,omitempty"`
	DelayAutomaticWiths  []float64           `protobuf:"fixed64,11,rep,name=delayAutomaticWiths" json:"delayAutomaticWiths,omitempty"`
	EventTriggers        []bool              `protobuf:"varint,12,rep,name=eventTriggers" json:"eventTriggers,omitempty"`
	XXX_unrecognized     []byte              `json:"-"`
}

func (m *CommandBuildSetValueArchive) Reset()         { *m = CommandBuildSetValueArchive{} }
func (m *CommandBuildSetValueArchive) String() string { return proto.CompactTextString(m) }
func (*CommandBuildSetValueArchive) ProtoMessage()    {}

func (m *CommandBuildSetValueArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandBuildSetValueArchive) GetBuild() *TSP.Reference {
	if m != nil {
		return m.Build
	}
	return nil
}

func (m *CommandBuildSetValueArchive) GetProperty() string {
	if m != nil && m.Property != nil {
		return *m.Property
	}
	return ""
}

func (m *CommandBuildSetValueArchive) GetEffects() []string {
	if m != nil {
		return m.Effects
	}
	return nil
}

func (m *CommandBuildSetValueArchive) GetTypes() []string {
	if m != nil {
		return m.Types
	}
	return nil
}

func (m *CommandBuildSetValueArchive) GetDeliveries() []string {
	if m != nil {
		return m.Deliveries
	}
	return nil
}

func (m *CommandBuildSetValueArchive) GetDirections() []uint32 {
	if m != nil {
		return m.Directions
	}
	return nil
}

func (m *CommandBuildSetValueArchive) GetDurations() []float64 {
	if m != nil {
		return m.Durations
	}
	return nil
}

func (m *CommandBuildSetValueArchive) GetDelays() []float64 {
	if m != nil {
		return m.Delays
	}
	return nil
}

func (m *CommandBuildSetValueArchive) GetDelayAutomaticAfters() []float64 {
	if m != nil {
		return m.DelayAutomaticAfters
	}
	return nil
}

func (m *CommandBuildSetValueArchive) GetDelayAutomaticWiths() []float64 {
	if m != nil {
		return m.DelayAutomaticWiths
	}
	return nil
}

func (m *CommandBuildSetValueArchive) GetEventTriggers() []bool {
	if m != nil {
		return m.EventTriggers
	}
	return nil
}

type CommandBuildChunkSetValueArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	BuildChunk       *BuildChunkArchive  `protobuf:"bytes,2,req,name=buildChunk" json:"buildChunk,omitempty"`
	Property         *string             `protobuf:"bytes,3,req,name=property" json:"property,omitempty"`
	Referents        []uint32            `protobuf:"varint,4,rep,name=referents" json:"referents,omitempty"`
	Automatics       []bool              `protobuf:"varint,5,rep,name=automatics" json:"automatics,omitempty"`
	Durations        []float64           `protobuf:"fixed64,6,rep,name=durations" json:"durations,omitempty"`
	Delays           []float64           `protobuf:"fixed64,7,rep,name=delays" json:"delays,omitempty"`
	OldOwnsValue     *bool               `protobuf:"varint,8,opt,name=oldOwnsValue" json:"oldOwnsValue,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandBuildChunkSetValueArchive) Reset()         { *m = CommandBuildChunkSetValueArchive{} }
func (m *CommandBuildChunkSetValueArchive) String() string { return proto.CompactTextString(m) }
func (*CommandBuildChunkSetValueArchive) ProtoMessage()    {}

func (m *CommandBuildChunkSetValueArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandBuildChunkSetValueArchive) GetBuildChunk() *BuildChunkArchive {
	if m != nil {
		return m.BuildChunk
	}
	return nil
}

func (m *CommandBuildChunkSetValueArchive) GetProperty() string {
	if m != nil && m.Property != nil {
		return *m.Property
	}
	return ""
}

func (m *CommandBuildChunkSetValueArchive) GetReferents() []uint32 {
	if m != nil {
		return m.Referents
	}
	return nil
}

func (m *CommandBuildChunkSetValueArchive) GetAutomatics() []bool {
	if m != nil {
		return m.Automatics
	}
	return nil
}

func (m *CommandBuildChunkSetValueArchive) GetDurations() []float64 {
	if m != nil {
		return m.Durations
	}
	return nil
}

func (m *CommandBuildChunkSetValueArchive) GetDelays() []float64 {
	if m != nil {
		return m.Delays
	}
	return nil
}

func (m *CommandBuildChunkSetValueArchive) GetOldOwnsValue() bool {
	if m != nil && m.OldOwnsValue != nil {
		return *m.OldOwnsValue
	}
	return false
}

type CommandTransitionSetValueArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	SlideNode        *TSP.Reference      `protobuf:"bytes,2,req,name=slideNode" json:"slideNode,omitempty"`
	Property         *string             `protobuf:"bytes,3,req,name=property" json:"property,omitempty"`
	Effects          []string            `protobuf:"bytes,4,rep,name=effects" json:"effects,omitempty"`
	Unused           []string            `protobuf:"bytes,5,rep,name=unused" json:"unused,omitempty"`
	Unused2          []string            `protobuf:"bytes,6,rep,name=unused2" json:"unused2,omitempty"`
	Unused3          []string            `protobuf:"bytes,7,rep,name=unused3" json:"unused3,omitempty"`
	Durations        []float64           `protobuf:"fixed64,8,rep,name=durations" json:"durations,omitempty"`
	Directions       []uint32            `protobuf:"varint,9,rep,name=directions" json:"directions,omitempty"`
	IsAutomatics     []bool              `protobuf:"varint,10,rep,name=isAutomatics" json:"isAutomatics,omitempty"`
	Delays           []float64           `protobuf:"fixed64,11,rep,name=delays" json:"delays,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandTransitionSetValueArchive) Reset()         { *m = CommandTransitionSetValueArchive{} }
func (m *CommandTransitionSetValueArchive) String() string { return proto.CompactTextString(m) }
func (*CommandTransitionSetValueArchive) ProtoMessage()    {}

func (m *CommandTransitionSetValueArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandTransitionSetValueArchive) GetSlideNode() *TSP.Reference {
	if m != nil {
		return m.SlideNode
	}
	return nil
}

func (m *CommandTransitionSetValueArchive) GetProperty() string {
	if m != nil && m.Property != nil {
		return *m.Property
	}
	return ""
}

func (m *CommandTransitionSetValueArchive) GetEffects() []string {
	if m != nil {
		return m.Effects
	}
	return nil
}

func (m *CommandTransitionSetValueArchive) GetUnused() []string {
	if m != nil {
		return m.Unused
	}
	return nil
}

func (m *CommandTransitionSetValueArchive) GetUnused2() []string {
	if m != nil {
		return m.Unused2
	}
	return nil
}

func (m *CommandTransitionSetValueArchive) GetUnused3() []string {
	if m != nil {
		return m.Unused3
	}
	return nil
}

func (m *CommandTransitionSetValueArchive) GetDurations() []float64 {
	if m != nil {
		return m.Durations
	}
	return nil
}

func (m *CommandTransitionSetValueArchive) GetDirections() []uint32 {
	if m != nil {
		return m.Directions
	}
	return nil
}

func (m *CommandTransitionSetValueArchive) GetIsAutomatics() []bool {
	if m != nil {
		return m.IsAutomatics
	}
	return nil
}

func (m *CommandTransitionSetValueArchive) GetDelays() []float64 {
	if m != nil {
		return m.Delays
	}
	return nil
}

type CommandShowSetSlideNumberVisibilityArchive struct {
	Super               *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Show                *TSP.Reference      `protobuf:"bytes,2,req,name=show" json:"show,omitempty"`
	SlideNumbersVisible *bool               `protobuf:"varint,3,req,name=slideNumbersVisible" json:"slideNumbersVisible,omitempty"`
	ProviderUndo        *TSP.Reference      `protobuf:"bytes,4,opt,name=providerUndo" json:"providerUndo,omitempty"`
	XXX_unrecognized    []byte              `json:"-"`
}

func (m *CommandShowSetSlideNumberVisibilityArchive) Reset() {
	*m = CommandShowSetSlideNumberVisibilityArchive{}
}
func (m *CommandShowSetSlideNumberVisibilityArchive) String() string {
	return proto.CompactTextString(m)
}
func (*CommandShowSetSlideNumberVisibilityArchive) ProtoMessage() {}

func (m *CommandShowSetSlideNumberVisibilityArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandShowSetSlideNumberVisibilityArchive) GetShow() *TSP.Reference {
	if m != nil {
		return m.Show
	}
	return nil
}

func (m *CommandShowSetSlideNumberVisibilityArchive) GetSlideNumbersVisible() bool {
	if m != nil && m.SlideNumbersVisible != nil {
		return *m.SlideNumbersVisible
	}
	return false
}

func (m *CommandShowSetSlideNumberVisibilityArchive) GetProviderUndo() *TSP.Reference {
	if m != nil {
		return m.ProviderUndo
	}
	return nil
}

type CommandMasterRescaleArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Master           *TSP.Reference      `protobuf:"bytes,2,req,name=master" json:"master,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandMasterRescaleArchive) Reset()         { *m = CommandMasterRescaleArchive{} }
func (m *CommandMasterRescaleArchive) String() string { return proto.CompactTextString(m) }
func (*CommandMasterRescaleArchive) ProtoMessage()    {}

func (m *CommandMasterRescaleArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandMasterRescaleArchive) GetMaster() *TSP.Reference {
	if m != nil {
		return m.Master
	}
	return nil
}

type CommandMasterSetThumbnailTextArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Master           *TSP.Reference      `protobuf:"bytes,2,req,name=master" json:"master,omitempty"`
	IsBody           *bool               `protobuf:"varint,3,req,name=is_body" json:"is_body,omitempty"`
	NewText          *string             `protobuf:"bytes,4,opt,name=new_text" json:"new_text,omitempty"`
	OldText          *string             `protobuf:"bytes,5,opt,name=old_text" json:"old_text,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandMasterSetThumbnailTextArchive) Reset()         { *m = CommandMasterSetThumbnailTextArchive{} }
func (m *CommandMasterSetThumbnailTextArchive) String() string { return proto.CompactTextString(m) }
func (*CommandMasterSetThumbnailTextArchive) ProtoMessage()    {}

func (m *CommandMasterSetThumbnailTextArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandMasterSetThumbnailTextArchive) GetMaster() *TSP.Reference {
	if m != nil {
		return m.Master
	}
	return nil
}

func (m *CommandMasterSetThumbnailTextArchive) GetIsBody() bool {
	if m != nil && m.IsBody != nil {
		return *m.IsBody
	}
	return false
}

func (m *CommandMasterSetThumbnailTextArchive) GetNewText() string {
	if m != nil && m.NewText != nil {
		return *m.NewText
	}
	return ""
}

func (m *CommandMasterSetThumbnailTextArchive) GetOldText() string {
	if m != nil && m.OldText != nil {
		return *m.OldText
	}
	return ""
}

type CommandMasterSetBodyStylesArchive struct {
	Super              *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Master             *TSP.Reference      `protobuf:"bytes,2,req,name=master" json:"master,omitempty"`
	NewParagraphStyles []*TSP.Reference    `protobuf:"bytes,3,rep,name=new_paragraph_styles" json:"new_paragraph_styles,omitempty"`
	NewListStyles      []*TSP.Reference    `protobuf:"bytes,4,rep,name=new_list_styles" json:"new_list_styles,omitempty"`
	OldParagraphStyles []*TSP.Reference    `protobuf:"bytes,5,rep,name=old_paragraph_styles" json:"old_paragraph_styles,omitempty"`
	OldListStyles      []*TSP.Reference    `protobuf:"bytes,6,rep,name=old_list_styles" json:"old_list_styles,omitempty"`
	XXX_unrecognized   []byte              `json:"-"`
}

func (m *CommandMasterSetBodyStylesArchive) Reset()         { *m = CommandMasterSetBodyStylesArchive{} }
func (m *CommandMasterSetBodyStylesArchive) String() string { return proto.CompactTextString(m) }
func (*CommandMasterSetBodyStylesArchive) ProtoMessage()    {}

func (m *CommandMasterSetBodyStylesArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandMasterSetBodyStylesArchive) GetMaster() *TSP.Reference {
	if m != nil {
		return m.Master
	}
	return nil
}

func (m *CommandMasterSetBodyStylesArchive) GetNewParagraphStyles() []*TSP.Reference {
	if m != nil {
		return m.NewParagraphStyles
	}
	return nil
}

func (m *CommandMasterSetBodyStylesArchive) GetNewListStyles() []*TSP.Reference {
	if m != nil {
		return m.NewListStyles
	}
	return nil
}

func (m *CommandMasterSetBodyStylesArchive) GetOldParagraphStyles() []*TSP.Reference {
	if m != nil {
		return m.OldParagraphStyles
	}
	return nil
}

func (m *CommandMasterSetBodyStylesArchive) GetOldListStyles() []*TSP.Reference {
	if m != nil {
		return m.OldListStyles
	}
	return nil
}

type CommandSlideApplyThemeArchive struct {
	Super            *TSS.ApplyThemeChildCommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Blob             *MasterChangeBlobArchive           `protobuf:"bytes,2,req,name=blob" json:"blob,omitempty"`
	XXX_unrecognized []byte                             `json:"-"`
}

func (m *CommandSlideApplyThemeArchive) Reset()         { *m = CommandSlideApplyThemeArchive{} }
func (m *CommandSlideApplyThemeArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideApplyThemeArchive) ProtoMessage()    {}

func (m *CommandSlideApplyThemeArchive) GetSuper() *TSS.ApplyThemeChildCommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideApplyThemeArchive) GetBlob() *MasterChangeBlobArchive {
	if m != nil {
		return m.Blob
	}
	return nil
}

type CommandChangeMasterSlideArchive struct {
	Super               *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Slide               *TSP.Reference      `protobuf:"bytes,2,req,name=slide" json:"slide,omitempty"`
	Master              *TSP.Reference      `protobuf:"bytes,3,req,name=master" json:"master,omitempty"`
	PlaceholderCommands *TSP.Reference      `protobuf:"bytes,4,req,name=placeholder_commands" json:"placeholder_commands,omitempty"`
	XXX_unrecognized    []byte              `json:"-"`
}

func (m *CommandChangeMasterSlideArchive) Reset()         { *m = CommandChangeMasterSlideArchive{} }
func (m *CommandChangeMasterSlideArchive) String() string { return proto.CompactTextString(m) }
func (*CommandChangeMasterSlideArchive) ProtoMessage()    {}

func (m *CommandChangeMasterSlideArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandChangeMasterSlideArchive) GetSlide() *TSP.Reference {
	if m != nil {
		return m.Slide
	}
	return nil
}

func (m *CommandChangeMasterSlideArchive) GetMaster() *TSP.Reference {
	if m != nil {
		return m.Master
	}
	return nil
}

func (m *CommandChangeMasterSlideArchive) GetPlaceholderCommands() *TSP.Reference {
	if m != nil {
		return m.PlaceholderCommands
	}
	return nil
}

type CommandSlidePrimitiveSetMasterArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Slide            *TSP.Reference      `protobuf:"bytes,2,req,name=slide" json:"slide,omitempty"`
	Master           *TSP.Reference      `protobuf:"bytes,3,req,name=master" json:"master,omitempty"`
	OldMaster        *TSP.Reference      `protobuf:"bytes,4,req,name=old_master" json:"old_master,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandSlidePrimitiveSetMasterArchive) Reset()         { *m = CommandSlidePrimitiveSetMasterArchive{} }
func (m *CommandSlidePrimitiveSetMasterArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlidePrimitiveSetMasterArchive) ProtoMessage()    {}

func (m *CommandSlidePrimitiveSetMasterArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlidePrimitiveSetMasterArchive) GetSlide() *TSP.Reference {
	if m != nil {
		return m.Slide
	}
	return nil
}

func (m *CommandSlidePrimitiveSetMasterArchive) GetMaster() *TSP.Reference {
	if m != nil {
		return m.Master
	}
	return nil
}

func (m *CommandSlidePrimitiveSetMasterArchive) GetOldMaster() *TSP.Reference {
	if m != nil {
		return m.OldMaster
	}
	return nil
}

type CommandSlideReapplyMasterArchive struct {
	Super                     *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	ReapplyAccumulatedCommand *TSP.Reference      `protobuf:"bytes,2,req,name=reapply_accumulated_command" json:"reapply_accumulated_command,omitempty"`
	XXX_unrecognized          []byte              `json:"-"`
}

func (m *CommandSlideReapplyMasterArchive) Reset()         { *m = CommandSlideReapplyMasterArchive{} }
func (m *CommandSlideReapplyMasterArchive) String() string { return proto.CompactTextString(m) }
func (*CommandSlideReapplyMasterArchive) ProtoMessage()    {}

func (m *CommandSlideReapplyMasterArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSlideReapplyMasterArchive) GetReapplyAccumulatedCommand() *TSP.Reference {
	if m != nil {
		return m.ReapplyAccumulatedCommand
	}
	return nil
}

type CommandShowSetSoundtrack struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Show             *TSP.Reference      `protobuf:"bytes,2,opt,name=show" json:"show,omitempty"`
	Soundtrack       *TSP.Reference      `protobuf:"bytes,3,opt,name=soundtrack" json:"soundtrack,omitempty"`
	OldSoundtrack    *TSP.Reference      `protobuf:"bytes,4,opt,name=old_soundtrack" json:"old_soundtrack,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CommandShowSetSoundtrack) Reset()         { *m = CommandShowSetSoundtrack{} }
func (m *CommandShowSetSoundtrack) String() string { return proto.CompactTextString(m) }
func (*CommandShowSetSoundtrack) ProtoMessage()    {}

func (m *CommandShowSetSoundtrack) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandShowSetSoundtrack) GetShow() *TSP.Reference {
	if m != nil {
		return m.Show
	}
	return nil
}

func (m *CommandShowSetSoundtrack) GetSoundtrack() *TSP.Reference {
	if m != nil {
		return m.Soundtrack
	}
	return nil
}

func (m *CommandShowSetSoundtrack) GetOldSoundtrack() *TSP.Reference {
	if m != nil {
		return m.OldSoundtrack
	}
	return nil
}

type CommandSoundtrackSetValue struct {
	Super            *TSK.CommandArchive                      `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	Soundtrack       *TSP.Reference                           `protobuf:"bytes,2,opt,name=soundtrack" json:"soundtrack,omitempty"`
	Property         *string                                  `protobuf:"bytes,3,opt,name=property" json:"property,omitempty"`
	OldValue         *CommandSoundtrackSetValue_PropertyValue `protobuf:"bytes,4,opt,name=old_value" json:"old_value,omitempty"`
	NewValue         *CommandSoundtrackSetValue_PropertyValue `protobuf:"bytes,5,opt,name=new_value" json:"new_value,omitempty"`
	XXX_unrecognized []byte                                   `json:"-"`
}

func (m *CommandSoundtrackSetValue) Reset()         { *m = CommandSoundtrackSetValue{} }
func (m *CommandSoundtrackSetValue) String() string { return proto.CompactTextString(m) }
func (*CommandSoundtrackSetValue) ProtoMessage()    {}

func (m *CommandSoundtrackSetValue) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func (m *CommandSoundtrackSetValue) GetSoundtrack() *TSP.Reference {
	if m != nil {
		return m.Soundtrack
	}
	return nil
}

func (m *CommandSoundtrackSetValue) GetProperty() string {
	if m != nil && m.Property != nil {
		return *m.Property
	}
	return ""
}

func (m *CommandSoundtrackSetValue) GetOldValue() *CommandSoundtrackSetValue_PropertyValue {
	if m != nil {
		return m.OldValue
	}
	return nil
}

func (m *CommandSoundtrackSetValue) GetNewValue() *CommandSoundtrackSetValue_PropertyValue {
	if m != nil {
		return m.NewValue
	}
	return nil
}

type CommandSoundtrackSetValue_PropertyValue struct {
	DoubleValue          *float64                   `protobuf:"fixed64,1,opt,name=double_value" json:"double_value,omitempty"`
	ModeValue            *Soundtrack_SoundtrackMode `protobuf:"varint,2,opt,name=mode_value,enum=KN.Soundtrack_SoundtrackMode" json:"mode_value,omitempty"`
	MediaReferenceValues []*TSP.DataReference       `protobuf:"bytes,3,rep,name=media_reference_values" json:"media_reference_values,omitempty"`
	XXX_unrecognized     []byte                     `json:"-"`
}

func (m *CommandSoundtrackSetValue_PropertyValue) Reset() {
	*m = CommandSoundtrackSetValue_PropertyValue{}
}
func (m *CommandSoundtrackSetValue_PropertyValue) String() string { return proto.CompactTextString(m) }
func (*CommandSoundtrackSetValue_PropertyValue) ProtoMessage()    {}

func (m *CommandSoundtrackSetValue_PropertyValue) GetDoubleValue() float64 {
	if m != nil && m.DoubleValue != nil {
		return *m.DoubleValue
	}
	return 0
}

func (m *CommandSoundtrackSetValue_PropertyValue) GetModeValue() Soundtrack_SoundtrackMode {
	if m != nil && m.ModeValue != nil {
		return *m.ModeValue
	}
	return Soundtrack_kKNSoundtrackModePlayOnce
}

func (m *CommandSoundtrackSetValue_PropertyValue) GetMediaReferenceValues() []*TSP.DataReference {
	if m != nil {
		return m.MediaReferenceValues
	}
	return nil
}

type SlideCollectionCommandSelectionBehaviorArchive struct {
	ArchivedNewSelection *TSP.Reference                                       `protobuf:"bytes,1,opt,name=archived_new_selection" json:"archived_new_selection,omitempty"`
	ArchivedOldSelection *TSP.Reference                                       `protobuf:"bytes,2,opt,name=archived_old_selection" json:"archived_old_selection,omitempty"`
	Type                 *SlideCollectionCommandSelectionBehaviorArchive_Type `protobuf:"varint,3,opt,name=type,enum=KN.SlideCollectionCommandSelectionBehaviorArchive_Type,def=0" json:"type,omitempty"`
	XXX_unrecognized     []byte                                               `json:"-"`
}

func (m *SlideCollectionCommandSelectionBehaviorArchive) Reset() {
	*m = SlideCollectionCommandSelectionBehaviorArchive{}
}
func (m *SlideCollectionCommandSelectionBehaviorArchive) String() string {
	return proto.CompactTextString(m)
}
func (*SlideCollectionCommandSelectionBehaviorArchive) ProtoMessage() {}

const Default_SlideCollectionCommandSelectionBehaviorArchive_Type SlideCollectionCommandSelectionBehaviorArchive_Type = SlideCollectionCommandSelectionBehaviorArchive_kKindSlideSelectionBehaviorTypeGeneral

func (m *SlideCollectionCommandSelectionBehaviorArchive) GetArchivedNewSelection() *TSP.Reference {
	if m != nil {
		return m.ArchivedNewSelection
	}
	return nil
}

func (m *SlideCollectionCommandSelectionBehaviorArchive) GetArchivedOldSelection() *TSP.Reference {
	if m != nil {
		return m.ArchivedOldSelection
	}
	return nil
}

func (m *SlideCollectionCommandSelectionBehaviorArchive) GetType() SlideCollectionCommandSelectionBehaviorArchive_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_SlideCollectionCommandSelectionBehaviorArchive_Type
}

type ChartInfoGeometryCommandArchive struct {
	Super            *TSK.CommandArchive `protobuf:"bytes,1,req,name=super" json:"super,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ChartInfoGeometryCommandArchive) Reset()         { *m = ChartInfoGeometryCommandArchive{} }
func (m *ChartInfoGeometryCommandArchive) String() string { return proto.CompactTextString(m) }
func (*ChartInfoGeometryCommandArchive) ProtoMessage()    {}

func (m *ChartInfoGeometryCommandArchive) GetSuper() *TSK.CommandArchive {
	if m != nil {
		return m.Super
	}
	return nil
}

func init() {
	proto.RegisterEnum("KN.CommandShowInsertSlideArchive_Kind", CommandShowInsertSlideArchive_Kind_name, CommandShowInsertSlideArchive_Kind_value)
	proto.RegisterEnum("KN.SlideCollectionCommandSelectionBehaviorArchive_Type", SlideCollectionCommandSelectionBehaviorArchive_Type_name, SlideCollectionCommandSelectionBehaviorArchive_Type_value)
}
